var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdministratorPageComponent.html",[0,0.345,1,0.89]],["body/components/AdministratorPageComponent.html",[0,0.548,1,1.513,2,1.428,3,0.201,4,0.18,5,1.158,6,1.158,7,1.158,8,1.158,9,0.18,10,5.542,11,4.523,12,1.683,13,0.201,14,1.873,15,2.52,16,0.389,17,4.272,18,3.733,19,1.633,20,4.575,21,2.058,22,2.852,23,1.158,24,1.562,25,2.704,26,1.562,27,2.39,28,0.201,29,0.622,30,6.005,31,1.428,32,3.053,33,1.158,34,2.767,35,3.471,36,1.414,37,5.307,38,1.059,39,0.018,40,1.303,41,0.299,42,0.545,43,3.034,44,1.059,45,1.873,46,2.328,47,0.434,48,0.771,49,1.388,50,0.834,51,1.868,52,2.377,53,0.201,54,0.668,55,1.683,56,3.934,57,3.934,58,5.307,59,5.307,60,5.307,61,5.307,62,1.059,63,1.562,64,1.562,65,1.158,66,1.892,67,1.158,68,2.282,69,0.968,70,1.946,71,1.158,72,0.926,73,0.926,74,0.926,75,0.926,76,0.926,77,0.926,78,0.968,79,0.926,80,0.968,81,0.968,82,0.516,83,1.767,84,0.968,85,0.926,86,1.059,87,1.158,88,0.968,89,1.158,90,1.158,91,0.968,92,0.516,93,0.968,94,0.968,95,0.968,96,0.926,97,0.926,98,1.158,99,1.158,100,0.012,101,0.012]],["title/components/AppComponent.html",[0,0.345,69,0.93]],["body/components/AppComponent.html",[0,0.487,1,0.528,2,0.947,3,0.114,4,0.103,5,0.66,6,0.66,7,0.66,8,0.66,9,0.103,13,0.179,14,1.242,15,3.064,16,0.482,21,1.365,22,2.062,23,0.66,24,1.036,26,1.036,28,0.179,29,0.413,31,0.947,32,2.334,33,1.036,36,1.574,38,0.947,39,0.018,40,1.258,41,0.346,42,0.488,44,1.437,45,1.735,46,2.071,47,0.414,48,0.44,49,0.792,50,0.704,53,0.114,54,0.381,62,0.604,63,1.036,64,1.036,65,0.66,66,1.447,67,0.66,68,2.153,69,1.21,70,1.726,71,0.66,72,0.528,73,0.528,74,0.528,75,0.528,76,0.528,77,0.528,78,0.552,79,0.528,80,0.552,81,0.552,82,0.295,83,1.278,84,0.552,85,0.528,86,0.604,87,0.66,88,0.552,89,0.66,90,0.66,91,0.552,92,0.295,93,0.552,94,0.552,95,0.552,96,0.528,97,0.528,98,0.66,99,0.66,100,0.008,101,0.008,102,1.935,103,3.743,104,2.476,105,2.476,106,5.666,107,6.307,108,3.679,109,4.342,110,3.519,111,3.743,112,4.342,113,2.284,114,5.34,115,2.762,116,5.288,117,4.916,118,2.668,119,3.519,120,2.244,121,4.885,122,3.351,123,2.813,124,5.293,125,2.244,126,2.244,127,2.715,128,2.244,129,2.244,130,4.146,131,2.715,132,3.519,133,4.342,134,3.519,135,3.519,136,3.519,137,3.519,138,2.285,139,3.519,140,2.244,141,3.034,142,3.519,143,3.192,144,4.342,145,1.935,146,3.519,147,2.244,148,2.715,149,2.306,150,2.306,151,3.519,152,3.519,153,3.034,154,3.034,155,3.743,156,2.244,157,3.743,158,3.034,159,4.239,160,3.034,161,3.034,162,0.947,163,2.467,164,2.244,165,0.792,166,3.034,167,1.01,168,2.112,169,2.244,170,2.244,171,3.034,172,2.244,173,1.186,174,3.349,175,4.342,176,4.916,177,2.244,178,2.476,179,1.872,180,1.935,181,1.731,182,2.244,183,1.935,184,3.519,185,1.126,186,1.935,187,2.715,188,1.935,189,2.244,190,1.269,191,1.731,192,1.935,193,1.457,194,1.935,195,2.244,196,2.244,197,2.244,198,2.244,199,2.244,200,2.244,201,3.519,202,2.244,203,2.244,204,2.244,205,2.244,206,2.244,207,2.244,208,2.244,209,1.935,210,2.244,211,2.244,212,1.731,213,1.579,214,1.194,215,3.519,216,0.44,217,2.244,218,2.244,219,2.244,220,2.244,221,2.244,222,2.244,223,3.519,224,2.715,225,6.134,226,2.715,227,4.37,228,4.885,229,4.885,230,4.239,231,4.239,232,2.715,233,2.715,234,3.034,235,4.342,236,1.935,237,1.731,238,1.935,239,3.743,240,2.244,241,3.519,242,1.935,243,2.244,244,2.244,245,2.244,246,2.244,247,2.244,248,1.356,249,2.244,250,1.935,251,2.244,252,2.244,253,2.244,254,2.244,255,2.244,256,1.935,257,2.244]],["title/modules/AppModule.html",[258,2.454,259,2.659]],["body/modules/AppModule.html",[1,1.374,2,0.65,3,0.123,4,0.11,9,0.11,11,1.698,13,0.123,39,0.018,47,0.525,48,0.473,53,0.123,54,0.41,62,0.65,69,1.675,70,0.679,72,1.374,73,1.374,74,1.374,75,1.374,76,1.374,77,1.374,78,1.437,79,1.374,80,1.437,81,1.437,84,1.437,85,1.374,88,1.437,91,1.437,92,0.671,93,1.437,94,1.437,95,1.437,96,1.374,97,1.374,100,0.008,101,0.008,103,3.21,104,3.886,165,0.838,181,1.861,183,2.08,239,2.08,258,2.953,259,5.489,260,2.418,261,3.199,262,3.92,263,3.92,264,3.92,265,1.861,266,2.08,267,2.08,268,2.08,269,2.08,270,2.08,271,3.791,272,3.791,273,3.791,274,3.21,275,2.08,276,1.698,277,2.413,278,3.21,279,3.724,280,2.413,281,2.413,282,3.724,283,2.413,284,2.08,285,4.547,286,3.724,287,1.458,288,2.413,289,2.413,290,3.724,291,3.724,292,3.21,293,3.724,294,3.724,295,1.283,296,3.724,297,2.413,298,3.724,299,3.724,300,3.724,301,2.413,302,3.724,303,2.413,304,3.724,305,2.413,306,3.724,307,2.413,308,3.724,309,3.724,310,1.458,311,3.724,312,2.413,313,2.08,314,3.724,315,2.413,316,3.724,317,2.413,318,3.724,319,2.413,320,3.724,321,2.413,322,3.724,323,2.413,324,3.724,325,3.724,326,3.724,327,1.567,328,1.567,329,3.724,330,2.413,331,3.724,332,3.21,333,1.861,334,3.724,335,2.413,336,2.413,337,2.413,338,2.08,339,1.698,340,4.408,341,2.413,342,1.698,343,3.724,344,1.861,345,4.547,346,1.698,347,2.413,348,1.861,349,2.413,350,4.547,351,2.62,352,3.597,353,1.861,354,2.413,355,2.413,356,2.08,357,4.111,358,2.08,359,1.698,360,2.08,361,1.698,362,2.08,363,1.698,364,2.08,365,1.768,366,1.698,367,3.21,368,1.698,369,1.458,370,2.62,371,1.698,372,2.08,373,1.698,374,1.861,375,1.567,376,2.418,377,2.106,378,2.08,379,1.698,380,1.698,381,2.413,382,2.413,383,1.698,384,2.413,385,2.413,386,2.413,387,2.413,388,2.413,389,2.413,390,2.413,391,6.085,392,5.524,393,2.413,394,2.413,395,2.413,396,2.413,397,1.698,398,2.413,399,3.724,400,3.724]],["title/modules/AppRoutingModule.html",[258,2.454,271,2.454]],["body/modules/AppRoutingModule.html",[0,0.672,1,1.094,3,0.166,4,0.149,9,0.149,11,2.288,13,0.166,39,0.018,47,0.503,48,0.638,50,0.735,53,0.166,54,0.553,72,1.277,73,1.094,74,1.094,75,1.094,76,1.094,77,1.094,79,1.094,85,1.094,86,1.251,95,1.336,96,1.094,97,1.094,100,0.01,101,0.01,104,3.818,105,3.271,113,2.987,115,1.464,130,2.81,149,1.324,173,2.48,174,2.508,185,1.632,190,1.84,193,3.019,224,2.508,226,2.508,227,4.186,228,4.679,229,4.679,230,2.804,231,2.804,232,2.508,233,2.508,234,2.804,258,3.019,260,2.112,265,2.508,271,3.019,278,2.804,292,4.008,352,3.271,356,2.804,357,4.376,358,2.804,359,2.288,360,2.804,361,2.288,362,2.804,363,2.288,364,2.804,365,2.208,366,2.288,367,4.008,368,2.288,369,2.81,370,3.818,371,2.288,372,2.804,373,2.288,374,2.508,375,2.112,376,3.019,377,2.63,378,2.804,379,2.288,380,2.288,383,2.288,401,3.252,402,3.252,403,4.584,404,4.649,405,5.044,406,3.252,407,2.508,408,1.84,409,7.488,410,4.414,411,2.804,412,3.252,413,6.108,414,4.567,415,3.252,416,6.516,417,3.252,418,3.252,419,4.649,420,0.915,421,3.252,422,3.252,423,1,424,3.252,425,1.464,426,2.804,427,1.391,428,4.008,429,3.252,430,3.252,431,3.252,432,0.801,433,3.252,434,2.508,435,1.001,436,3.252]],["title/guards/AuthGuard.html",[405,2.659,437,2.659]],["body/guards/AuthGuard.html",[3,0.222,4,0.199,9,0.199,13,0.222,14,2.362,15,3,16,0.416,21,1.69,28,0.222,31,1.529,33,1.282,36,1.487,38,1.529,39,0.018,40,0.965,41,0.32,42,0.787,44,1.173,46,2.45,47,0.469,48,0.854,49,1.538,53,0.222,54,0.74,55,1.864,100,0.013,101,0.013,108,2.83,113,2.864,115,2.557,118,1.962,122,4.027,123,3.443,130,2.633,162,1.529,163,2.187,165,0.98,168,1.341,185,2.187,190,2.465,193,3.688,213,3.066,216,1.113,369,2.633,383,3.995,405,3.995,407,4.381,408,3.213,413,5.772,437,3.995,438,4.358,439,3.757,440,5.679,441,4.896,442,3.361,443,4.358,444,5.679,445,6.695,446,4.445,447,6.695,448,4.358,449,5.679,450,6.318,451,2.697,452,3.066,453,3.066,454,4.358,455,4.358,456,4.358,457,4.358,458,4.358,459,4.358,460,3.757,461,3.757,462,3.757,463,4.358]],["title/interfaces/City.html",[464,0.345,465,1.217]],["body/interfaces/City.html",[3,0.222,4,0.199,9,0.199,13,0.289,16,0.553,19,1.746,28,0.222,29,0.665,39,0.018,40,1.073,41,0.32,42,0.603,47,0.294,50,0.938,53,0.322,82,0.829,92,0.571,100,0.013,101,0.013,162,1.978,165,1.631,167,1.461,173,1.466,216,0.853,420,1.224,423,1.492,432,1.071,435,1.339,464,0.576,465,2.291,466,1.171,467,1.609,468,1.561,469,1.777,470,1.339,471,1.67,472,1.401,473,1.401,474,1.401,475,1.687,476,1.401,477,1.401,478,1.28,479,1.535,480,1.024,481,1.401,482,1.401,483,2.098,484,1.687,485,1.466,486,1.401,487,1.827,488,1.687,489,2.098,490,1.687,491,1.339,492,1.687,493,1.687,494,1.687,495,1.535,496,1.687,497,1.609,498,1.466,499,1.401,500,1.609,501,1.28,502,1.535,503,1.535,504,0.935,505,1.609,506,1.535,507,1.466,508,1.912,509,1.912,510,1.687,511,1.687,512,1.466,513,1.609,514,1.609,515,1.466]],["title/interfaces/Conversation.html",[425,1.702,464,0.345]],["body/interfaces/Conversation.html",[3,0.225,4,0.202,9,0.202,13,0.225,16,0.54,28,0.225,29,0.672,39,0.018,41,0.379,47,0.298,53,0.343,100,0.013,101,0.013,162,1.189,163,2.216,165,0.994,167,1.306,168,2.071,365,2.097,420,1.243,423,1.536,425,3.355,432,1.087,435,1.763,464,0.614,466,1.189,468,1.608,469,1.894,470,1.359,472,1.422,473,1.422,474,1.422,476,1.422,477,1.422,478,1.3,480,1.039,481,1.422,482,1.422,491,1.359,504,1.602,516,2.868,517,4.03,518,3.32,519,2.726,520,3.019,521,3.944,522,3.107,523,1.989,524,3.107,525,2.669,526,2.498,527,2.498,528,3.241,529,2.868,530,2.868,531,3.107,532,2.216,533,2.498,534,2.669]],["title/interfaces/ConversationDTO.html",[464,0.345,526,2.138]],["body/interfaces/ConversationDTO.html",[3,0.232,4,0.208,9,0.208,13,0.232,16,0.498,28,0.232,29,0.685,39,0.018,41,0.329,47,0.307,53,0.347,100,0.013,101,0.013,162,1.224,163,2.281,165,1.023,167,1.445,168,1.797,365,2.159,420,1.643,423,1.386,425,3.373,432,1.119,435,1.797,464,0.621,466,1.224,468,1.62,469,1.98,470,1.399,472,1.464,473,1.464,474,1.464,476,1.464,477,1.464,478,1.338,480,1.07,481,1.464,482,1.464,491,1.399,504,1.611,516,2.952,517,3.198,518,3.063,519,2.515,520,2.772,521,3.302,522,3.198,523,2.628,524,4.106,525,3.527,526,3.302,527,3.848,528,3.302,529,2.952,530,2.952,531,3.198,532,2.281,533,2.571,534,2.747]],["title/components/ConversationPageComponent.html",[0,0.345,72,0.89]],["body/components/ConversationPageComponent.html",[0,0.517,1,0.471,2,0.865,3,0.102,4,0.091,5,1.185,6,0.589,7,0.589,8,0.589,9,0.091,12,0.856,13,0.102,14,1.782,15,2.56,16,0.457,18,2.261,21,1.246,22,1.912,23,0.589,24,0.946,25,1.813,26,0.946,27,1.447,28,0.102,29,0.377,31,0.865,32,2.189,33,1.185,36,1.573,38,0.539,39,0.018,40,1.173,41,0.319,42,0.785,44,1.241,45,1.902,46,2.197,47,0.398,48,0.392,49,0.706,50,0.5,53,0.102,54,0.34,62,0.539,63,0.946,64,0.946,65,0.589,66,1.357,67,0.589,68,2.093,69,0.493,70,1.517,71,0.589,72,1.085,73,0.471,74,0.471,75,0.471,76,0.471,77,0.471,78,0.493,79,0.471,80,0.493,81,0.493,82,0.263,83,1.185,84,0.493,85,0.471,86,0.539,87,0.589,88,0.493,89,0.589,90,0.589,91,0.493,92,0.263,93,0.493,94,0.493,95,0.493,96,0.471,97,0.471,98,0.589,99,0.589,100,0.007,101,0.007,111,3.472,113,2.16,115,2.652,118,2.652,121,4.884,122,3.204,123,2.69,124,3.556,130,2.786,131,2.479,138,2.087,148,2.479,149,1.876,150,1.876,153,2.771,154,2.771,155,3.472,157,2.771,158,2.771,159,2.771,160,3.975,161,2.771,167,0.66,168,1.554,178,2.261,179,1.709,180,1.726,181,1.544,185,1.004,186,1.726,187,1.544,188,1.726,190,1.132,191,1.544,212,1.544,213,1.408,227,2.479,242,1.726,359,4.638,408,1.132,410,2.786,423,1.086,425,3.396,427,2.776,428,2.771,432,0.791,446,2.833,468,0.723,491,0.989,502,1.627,503,2.078,504,1.086,518,2.427,519,1.489,521,3.204,523,1.447,527,1.132,528,1.132,532,1.004,534,1.209,535,5.684,536,2.771,537,4.027,538,4.027,539,4.027,540,4.61,541,4.61,542,2.001,543,3.423,544,2.771,545,2.001,546,4.61,547,5.89,548,4.61,549,5.049,550,4.61,551,4.61,552,2.001,553,2.001,554,1.942,555,1.942,556,2.001,557,5.239,558,4.61,559,3.214,560,3.214,561,1.544,562,2.261,563,2.608,564,3.049,565,2.001,566,2.771,567,2.771,568,3.214,569,2.771,570,3.214,571,2.001,572,1.726,573,2.076,574,2.001,575,5.049,576,3.214,577,3.556,578,2.001,579,2.771,580,2.001,581,2.771,582,1.408,583,1.544,584,2.001,585,2.001,586,2.001,587,2.001,588,2.001,589,4.158,590,2.001,591,4.027,592,2.001,593,2.833,594,4.61,595,1.726,596,2.087,597,2.001,598,2.001,599,2.001,600,3.106,601,3.214,602,2.087,603,1.726,604,1.726,605,1.726,606,2.001,607,2.001,608,2.001,609,2.001,610,2.001,611,3.214,612,3.214,613,2.001,614,2.001,615,2.001,616,2.001,617,4.61,618,2.001,619,2.001,620,1.726,621,3.214,622,2.001,623,2.001,624,2.001,625,2.001,626,3.106,627,2.001,628,2.001,629,2.001,630,2.001,631,3.214,632,3.214,633,3.214,634,3.214,635,3.214,636,3.214,637,3.214,638,3.214,639,3.214,640,2.001,641,2.001,642,1.544,643,2.001,644,1.408,645,1.726]],["title/injectables/ConversationService.html",[451,1.794,543,2.284]],["body/injectables/ConversationService.html",[3,0.165,4,0.148,9,0.148,13,0.319,16,0.433,28,0.165,31,1.246,33,0.951,36,1.531,38,1.682,39,0.018,40,1.062,41,0.352,42,0.866,44,1.904,46,2.777,47,0.452,48,0.634,49,1.141,53,0.165,54,0.549,55,1.383,100,0.01,101,0.01,108,2.099,143,3.834,168,1.425,214,3.141,216,1.225,287,1.953,408,2.618,420,1.662,423,1.473,425,3.468,427,2.782,451,2.198,453,2.274,468,1.463,470,1.425,471,1.362,498,1.99,502,1.633,503,2.084,504,1.499,519,2.404,521,1.828,525,3.568,526,3.34,527,3.059,532,2.963,533,3.34,534,3.268,543,2.797,582,2.274,602,4.594,626,4.171,646,2.274,647,2.787,648,3.57,649,3.57,650,4.186,651,4.629,652,5.905,653,4.629,654,3.991,655,2.493,656,4.555,657,3.232,658,2.797,659,4.629,660,3.232,661,3.834,662,3.257,663,3.232,664,5.091,665,4.629,666,3.232,667,4.629,668,4.629,669,3.57,670,3.991,671,4.629,672,3.232,673,4.629,674,3.232,675,5.408,676,2.787,677,2.099,678,2.493,679,4.629,680,4.171,681,3.232,682,5.091,683,3.232,684,3.232,685,3.57,686,3.232]],["title/interceptors/ErrorInterceptor.html",[272,2.454,687,2.454]],["body/interceptors/ErrorInterceptor.html",[3,0.227,4,0.203,9,0.203,13,0.227,14,2.033,21,1.727,28,0.227,31,1.55,33,1.311,36,1.356,38,1.55,39,0.018,40,0.979,41,0.325,42,0.798,44,1.199,46,2.476,47,0.472,48,0.873,49,1.572,53,0.227,54,0.757,55,1.905,100,0.013,101,0.013,118,2.005,122,4.051,166,4.966,185,2.235,194,4.966,216,1.129,272,3.74,287,2.691,327,2.892,328,2.892,369,3.858,434,4.443,441,4.966,442,3.435,451,2.735,462,3.84,478,1.311,504,1.238,564,2.519,658,3.481,687,3.74,688,3.84,689,3.84,690,7.287,691,5.76,692,4.443,693,5.76,694,4.492,695,4.966,696,4.492,697,4.749,698,4.454,699,4.966,700,5.82,701,5.504,702,5.82,703,4.454,704,3.84,705,4.966,706,4.454,707,4.454,708,4.454,709,4.454,710,4.454,711,4.454,712,4.454,713,4.454,714,3.133,715,4.454]],["title/components/GuidePageComponent.html",[0,0.345,73,0.89]],["body/components/GuidePageComponent.html",[0,0.537,1,0.891,2,1.392,3,0.193,4,0.173,5,1.114,6,1.114,7,1.114,8,1.114,9,0.173,12,1.62,13,0.193,14,1.825,15,3.005,16,0.464,19,1.592,21,2.005,22,2.796,23,1.114,24,1.522,25,2.652,26,1.522,27,2.328,28,0.193,29,0.606,31,1.392,32,3.005,33,1.114,34,2.664,35,3.432,36,1.386,38,1.019,39,0.018,40,1.297,41,0.292,42,0.525,44,1.019,45,1.825,46,2.283,47,0.427,48,0.742,49,1.336,50,0.849,51,1.798,52,2.288,53,0.193,54,0.643,55,1.62,62,1.019,63,1.522,64,1.522,65,1.114,66,1.862,67,1.114,68,2.274,69,0.932,70,1.924,71,1.114,72,0.891,73,1.489,74,0.891,75,0.891,76,0.891,77,0.891,78,0.932,79,0.891,80,0.932,81,0.932,82,0.497,83,1.733,84,0.932,85,0.891,86,1.019,87,1.114,88,0.932,89,1.114,90,1.114,91,0.932,92,0.497,93,0.932,94,0.932,95,0.932,96,0.891,97,0.891,98,1.114,99,1.114,100,0.011,101,0.011,237,2.92,361,4.452,365,2.455,427,1.62,519,2.588,528,2.142,561,2.92,596,2.459,642,2.92,644,3.638,662,3.638,716,5.456,717,5.889,718,4.458,719,3.786,720,3.786,721,5.171,722,3.638,723,4.458,724,5.171,725,3.638,726,2.459,727,3.264,728,3.264,729,3.264,730,3.264,731,3.264,732,3.264,733,3.786]],["title/interceptors/HeadersInterceptor.html",[273,2.454,687,2.454]],["body/interceptors/HeadersInterceptor.html",[3,0.243,4,0.217,9,0.217,13,0.243,15,2.854,16,0.44,21,1.846,28,0.243,31,1.618,33,1.401,36,1.415,38,1.618,39,0.018,40,1.021,41,0.339,42,0.833,44,1.281,46,2.554,47,0.467,48,0.933,49,1.68,53,0.243,54,0.809,55,2.036,100,0.013,101,0.013,123,3.46,168,1.465,191,3.672,209,4.104,216,0.933,273,3.903,287,2.876,408,2.693,423,1.292,451,2.854,478,2.036,658,3.632,687,3.903,688,4.104,695,5.182,699,5.182,700,5.965,701,5.679,702,5.965,704,4.104,705,5.182,734,4.104,735,6.011,736,6.011,737,6.011,738,4.104,739,4.76,740,4.76,741,4.76,742,4.76,743,4.76,744,4.76,745,4.76,746,4.76,747,4.76]],["title/components/LoginPageComponent.html",[0,0.345,74,0.89]],["body/components/LoginPageComponent.html",[0,0.49,1,0.752,2,1.235,3,0.163,4,0.146,5,0.94,6,0.94,7,0.94,8,0.94,9,0.146,12,1.366,13,0.163,14,1.619,15,1.516,16,0.456,23,0.94,24,1.35,25,2.419,26,1.35,27,2.066,28,0.163,29,0.538,31,1.235,33,1.35,36,1.464,38,0.859,39,0.018,40,1.269,41,0.18,42,0.443,44,0.859,45,1.619,47,0.42,48,0.626,50,0.57,53,0.163,54,0.543,62,0.859,63,1.35,64,1.35,65,0.94,66,1.728,67,0.94,68,2.234,69,0.786,70,1.822,71,0.94,72,0.752,73,0.752,74,1.382,75,0.752,76,0.752,77,0.752,78,0.786,79,0.752,80,0.786,81,0.786,82,0.419,83,1.581,84,0.786,85,0.752,86,0.859,87,0.94,88,0.786,89,0.94,90,0.94,91,0.786,92,0.419,93,0.786,94,0.786,95,0.786,96,0.752,97,0.752,98,0.94,99,0.94,100,0.01,101,0.01,105,3.228,118,2.644,122,3.774,123,3.168,138,2.98,149,2.186,150,2.186,165,1.032,167,0.942,185,1.602,193,4.639,216,0.626,295,1.698,327,2.073,328,2.073,363,4.556,432,1.446,452,2.246,480,1.264,504,0.686,554,2.773,555,2.773,564,1.806,573,2.066,694,2.246,696,3.779,697,4.131,714,2.246,748,5.583,749,5.362,750,4.631,751,4.131,752,2.753,753,4.131,754,2.463,755,3.228,756,3.193,757,3.228,758,3.813,759,4.131,760,5.062,761,4.205,762,3.193,763,3.193,764,3.228,765,3.956,766,3.956,767,3.956,768,3.539,769,3.539,770,3.193,771,3.956,772,3.539,773,3.956,774,3.956,775,3.956,776,2.246,777,3.193,778,3.193,779,2.753,780,3.539,781,2.753,782,2.753,783,2.753,784,3.193,785,3.193,786,2.753,787,3.956,788,3.956,789,4.589,790,3.956,791,3.956,792,3.956]],["title/interfaces/Message.html",[464,0.345,504,0.813]],["body/interfaces/Message.html",[3,0.227,4,0.204,9,0.204,13,0.227,16,0.495,28,0.227,29,0.676,39,0.018,41,0.381,47,0.301,53,0.344,100,0.013,101,0.013,162,1.72,163,2.239,165,1.004,167,1.436,168,1.775,365,2.118,420,1.256,423,1.54,425,3.362,432,1.098,435,1.775,464,0.616,466,1.201,468,1.612,469,1.901,470,1.373,472,1.436,473,1.436,474,1.436,476,1.436,477,1.436,478,1.313,480,1.05,481,1.436,482,1.436,491,1.967,504,1.588,516,2.897,517,3.138,518,3.042,519,2.498,520,3.034,521,3.262,522,3.138,523,2.009,524,3.138,525,2.696,526,2.523,527,2.523,528,3.956,529,4.386,530,4.386,531,3.138,532,2.239,533,2.523,534,2.696]],["title/interfaces/MessageDTO.html",[464,0.345,533,2.138]],["body/interfaces/MessageDTO.html",[3,0.233,4,0.208,9,0.208,13,0.233,16,0.499,28,0.233,29,0.686,39,0.018,41,0.33,47,0.308,53,0.347,100,0.013,101,0.013,162,1.228,163,2.289,165,1.026,167,1.446,168,1.801,365,2.166,420,1.284,423,1.388,425,3.342,432,1.123,435,1.801,464,0.622,466,1.228,468,1.622,469,1.982,470,1.404,472,1.469,473,1.469,474,1.469,476,1.469,477,1.469,478,1.342,480,1.074,481,1.469,482,1.469,491,1.404,504,1.576,516,2.962,517,3.209,518,3.067,519,2.519,520,2.778,521,3.309,522,3.209,523,2.054,524,3.209,525,2.757,526,2.58,527,2.58,528,3.984,529,2.962,530,2.962,531,4.116,532,2.936,533,3.309,534,4.116]],["title/components/MessagesCenterPageComponent.html",[0,0.345,75,0.89]],["body/components/MessagesCenterPageComponent.html",[0,0.489,1,0.75,2,1.233,3,0.162,4,0.146,5,1.579,6,0.937,7,0.937,8,0.937,9,0.146,12,1.363,13,0.162,14,1.616,15,3.072,16,0.5,21,1.776,22,2.547,23,0.937,24,1.348,25,2.415,26,1.348,27,2.063,28,0.162,29,0.537,31,1.233,32,2.785,33,0.937,36,1.463,38,0.857,39,0.018,40,1.269,41,0.302,42,0.441,43,2.457,44,0.857,45,1.616,46,2.08,47,0.437,48,0.624,49,1.124,50,0.569,53,0.162,54,0.541,55,1.363,62,0.857,63,1.348,64,1.348,65,0.937,66,1.726,67,0.937,68,2.233,69,0.784,70,1.821,71,0.937,72,0.75,73,0.75,74,0.75,75,1.381,76,0.75,77,0.75,78,0.784,79,0.75,80,0.784,81,0.784,82,0.418,83,1.579,84,0.784,85,0.75,86,0.857,87,0.937,88,0.784,89,0.937,90,0.937,91,0.784,92,0.418,93,0.784,94,0.784,95,0.784,96,0.75,97,0.75,98,0.937,99,0.937,100,0.01,101,0.01,113,2.972,115,3.072,118,1.434,123,3.072,149,1.864,150,1.864,168,1.805,178,3.222,179,2.436,212,2.457,213,2.241,365,3.546,366,4.552,414,4.524,425,1.434,452,2.241,519,1.694,521,3.515,543,3.544,562,3.222,563,2.591,577,3.533,582,2.241,583,2.457,589,3.533,596,2.974,664,5.748,738,2.746,793,5.578,794,5.057,795,5.364,796,3.949,797,3.185,798,2.746,799,3.185,800,3.185,801,3.185,802,3.949,803,3.533,804,4.581,805,3.533,806,4.581,807,4.581,808,4.581,809,4.581,810,4.581]],["title/components/NotAuthorizedPageComponent.html",[0,0.345,76,0.89]],["body/components/NotAuthorizedPageComponent.html",[0,0.578,1,1.031,2,1.534,3,0.223,4,0.2,5,1.289,6,1.289,7,1.289,8,1.289,9,0.2,12,1.873,13,0.223,14,2.367,16,0.417,23,1.289,24,1.677,25,2.852,26,1.677,27,2.566,39,0.017,40,1.314,47,0.296,48,0.859,50,0.708,53,0.223,54,0.744,62,1.179,63,1.677,64,1.677,65,1.289,66,1.974,67,1.289,68,2.304,69,1.078,70,2.006,71,1.289,72,1.031,73,1.031,74,1.031,75,1.031,76,1.579,77,1.031,78,1.078,79,1.031,80,1.078,81,1.078,82,0.575,83,1.864,84,1.078,85,1.031,86,1.179,87,1.289,88,1.078,89,1.289,90,1.289,91,1.078,92,0.575,93,1.078,94,1.078,95,1.078,96,1.031,97,1.031,98,1.289,99,1.289,100,0.013,101,0.013,113,2.437,368,3.081,369,4.535,383,4.008,407,4.395,434,4.395,479,2.011,504,1.225,669,4.395,811,3.378,812,3.443,813,5.698,814,4.912,815,5.698]],["title/components/NotFoundPageComponent.html",[0,0.345,77,0.89]],["body/components/NotFoundPageComponent.html",[0,0.584,1,1.052,2,1.554,3,0.228,4,0.204,5,1.315,6,1.315,7,1.315,8,1.315,9,0.204,12,1.912,13,0.228,14,2.037,16,0.423,23,1.315,24,1.699,25,2.88,26,1.699,27,2.599,39,0.017,40,1.317,47,0.302,48,0.876,50,0.717,53,0.228,54,0.759,62,1.203,63,1.699,64,1.699,65,1.315,66,1.989,67,1.315,68,2.308,69,1.1,70,2.017,71,1.315,72,1.052,73,1.052,74,1.052,75,1.052,76,1.052,77,1.591,78,1.1,79,1.052,80,1.1,81,1.1,82,0.587,83,1.882,84,1.1,85,1.052,86,1.203,87,1.315,88,1.1,89,1.315,90,1.315,91,1.1,92,0.587,93,1.1,94,1.1,95,1.1,96,1.052,97,1.052,98,1.315,99,1.315,100,0.013,101,0.013,130,3.488,370,5.254,371,3.144,432,1.421,504,1.241,532,2.897,811,3.447,812,3.488,816,5.773,817,5.773]],["title/components/ProblemsDialogComponent.html",[0,0.345,78,0.93]],["body/components/ProblemsDialogComponent.html",[0,0.499,1,0.776,2,1.264,3,0.168,4,0.151,5,0.97,6,0.97,7,0.97,8,0.97,9,0.151,13,0.168,18,3.303,21,1.82,22,2.596,23,0.97,24,1.382,26,1.382,28,0.168,29,0.551,31,1.264,32,2.829,33,1.382,35,3.38,36,1.482,38,0.887,39,0.018,40,1.275,41,0.265,42,0.758,44,1.472,45,2.31,46,2.12,47,0.455,48,0.646,49,1.163,50,0.932,51,1.566,52,1.992,53,0.168,54,0.56,62,0.887,63,1.382,64,1.382,65,0.97,66,1.753,67,0.97,68,2.242,69,0.812,70,1.842,71,0.97,72,0.776,73,0.776,74,0.776,75,0.776,76,0.776,77,0.776,78,1.467,79,0.776,80,0.812,81,0.812,82,0.433,83,1.609,84,0.812,85,0.776,86,0.887,87,0.97,88,0.812,89,0.97,90,0.97,91,0.812,92,0.433,93,0.812,94,0.812,95,0.812,96,0.776,97,1.403,98,0.97,99,0.97,100,0.01,101,0.01,118,2.462,248,2.837,310,1.992,339,4.605,357,1.992,376,2.141,377,1.865,432,1.156,501,0.97,512,2.27,520,2.229,562,3.303,563,2.656,772,2.543,818,5.643,819,2.141,820,3.049,821,6.297,822,3.847,823,3.303,824,4.192,825,4.192,826,2.319,827,4.192,828,4.048,829,3.049,830,3.297,831,3.297,832,3.297,833,2.843,834,2.843,835,2.543,836,2.843,837,3.297,838,3.297,839,2.843,840,3.297,841,3.297,842,3.297,843,4.695,844,5.958,845,4.695,846,4.048,847,4.695,848,3.303,849,4.695,850,4.695,851,4.695,852,4.695,853,4.695,854,4.695,855,4.695,856,4.695,857,3.303,858,4.695]],["title/components/RegisterPageComponent.html",[0,0.345,79,0.89]],["body/components/RegisterPageComponent.html",[0,0.464,1,0.682,2,1.151,3,0.148,4,0.132,5,1.495,6,0.853,7,0.853,8,0.853,9,0.132,12,1.239,13,0.148,14,1.509,16,0.497,23,0.853,24,1.258,25,2.288,26,1.258,27,1.925,28,0.148,29,0.501,31,1.151,33,1.258,36,1.524,38,0.78,39,0.018,40,1.252,41,0.241,42,0.402,43,2.235,44,0.78,45,1.509,47,0.423,48,0.568,50,0.531,53,0.148,54,0.492,62,0.78,63,1.258,64,1.258,65,0.853,66,1.651,67,0.853,68,2.208,69,0.713,70,1.762,71,0.853,72,0.682,73,0.682,74,0.682,75,0.682,76,0.682,77,0.682,78,0.713,79,1.32,80,0.713,81,0.713,82,0.38,83,1.495,84,0.713,85,0.682,86,0.78,87,0.853,88,0.713,89,0.853,90,0.853,91,0.713,92,0.38,93,0.713,94,0.713,95,0.713,96,0.682,97,0.682,98,0.853,99,0.853,100,0.009,101,0.009,105,3.008,113,1.829,115,2.992,118,2.526,122,3.662,123,3.074,138,2.776,149,2.435,150,2.435,165,0.962,167,0.878,178,3.008,179,2.274,185,1.454,190,1.639,216,0.568,226,3.298,232,3.298,295,1.541,327,1.881,328,1.881,373,4.675,380,4.773,411,3.686,414,3.298,432,1.052,452,2.038,480,1.196,504,0.623,554,2.583,555,2.583,564,1.639,573,1.925,577,3.298,694,2.038,696,3.574,697,3.946,714,2.038,749,5.157,750,4.38,751,3.946,752,2.498,753,3.946,755,3.008,757,3.008,758,3.642,759,4.675,760,5.729,761,4.065,764,3.008,765,3.686,766,3.686,767,3.686,768,3.298,769,3.298,771,3.686,772,3.298,773,3.686,774,3.686,775,3.686,776,2.038,779,2.498,780,3.298,781,2.498,782,2.498,783,2.498,786,2.498,787,3.686,788,3.686,790,3.686,791,3.686,792,3.686,796,2.498,798,2.498,859,5.729,860,5.08,861,2.897,862,2.897,863,3.008,864,3.008,865,2.897,866,4.275,867,2.897,868,4.275,869,2.897,870,2.897,871,2.897,872,2.498,873,2.897,874,2.897,875,4.275,876,4.275,877,4.275,878,4.275]],["title/interfaces/Report.html",[464,0.345,501,1.112]],["body/interfaces/Report.html",[3,0.219,4,0.196,9,0.196,13,0.352,16,0.559,19,1.733,28,0.219,29,0.66,39,0.018,41,0.354,42,0.596,47,0.29,50,0.936,53,0.32,82,0.824,92,0.565,100,0.013,101,0.013,162,1.973,165,1.626,167,1.457,173,1.449,216,0.843,420,1.21,423,1.486,432,1.059,435,1.324,464,0.573,465,2.145,466,1.158,467,1.59,468,1.556,469,1.767,470,1.324,471,1.657,472,1.385,473,1.385,474,1.385,475,1.667,476,1.385,477,1.385,478,1.266,479,1.518,480,1.012,481,1.385,482,1.385,483,2.556,484,1.667,485,1.449,486,1.385,487,1.813,488,1.667,489,2.082,490,1.667,491,1.324,492,1.667,493,1.667,494,1.667,495,1.518,496,1.667,497,1.59,498,1.449,499,1.385,500,1.59,501,1.847,502,1.518,503,1.518,504,0.925,505,1.59,506,1.518,507,1.449,508,1.897,509,1.897,510,1.667,511,1.667,512,1.449,513,1.59,514,1.59,515,1.449]],["title/interfaces/ReportDTO.html",[464,0.345,879,2.659]],["body/interfaces/ReportDTO.html",[3,0.224,4,0.2,9,0.2,13,0.355,16,0.554,19,1.756,28,0.224,29,0.669,39,0.018,41,0.247,42,0.608,47,0.296,50,0.939,53,0.323,82,0.832,92,0.576,100,0.013,101,0.013,162,1.982,165,1.634,167,1.465,173,1.478,216,0.86,420,1.235,423,1.226,432,1.08,435,1.35,464,0.578,465,2.161,466,1.181,467,1.622,468,1.426,469,1.889,470,1.35,471,1.679,472,1.412,473,1.412,474,1.412,475,1.701,476,1.412,477,1.412,478,1.291,479,1.548,480,1.033,481,1.412,482,1.412,483,2.109,484,1.701,485,1.478,486,1.412,487,1.837,488,1.701,489,2.109,490,1.701,491,1.35,492,1.701,493,1.701,494,1.701,495,1.548,496,1.701,497,1.622,498,1.478,499,1.412,500,1.622,501,1.679,502,1.548,503,1.548,504,0.943,505,1.622,506,1.548,507,1.478,508,1.922,509,1.922,510,1.701,511,1.701,512,1.478,513,1.622,514,1.622,515,1.478,523,1.975,879,3.086]],["title/components/ReportDialogComponent.html",[0,0.345,80,0.93]],["body/components/ReportDialogComponent.html",[0,0.517,1,0.827,2,1.322,3,0.179,4,0.161,5,1.034,6,1.034,7,1.034,8,1.034,9,0.161,13,0.357,16,0.472,23,1.034,24,1.445,26,1.445,28,0.179,29,0.576,31,1.322,33,1.034,36,1.518,38,1.322,39,0.018,40,1.291,41,0.319,42,0.681,44,1.524,45,2.276,47,0.382,48,0.689,50,0.83,53,0.179,54,0.597,55,1.503,62,0.946,63,1.445,64,1.445,65,1.034,66,1.804,67,1.034,68,2.257,69,0.865,70,1.88,71,1.034,72,0.827,73,0.827,74,0.827,75,0.827,76,0.827,77,0.827,78,0.865,79,0.827,80,1.509,81,0.865,82,0.461,83,1.666,84,0.865,85,0.827,86,0.946,87,1.034,88,0.865,89,1.034,90,1.034,91,0.865,92,0.461,93,0.865,94,0.865,95,0.865,96,0.827,97,1.443,98,1.034,99,1.034,100,0.011,101,0.011,149,1.43,150,1.43,167,1.008,168,1.985,214,1.868,216,0.689,310,2.123,342,4.7,357,2.123,376,2.281,377,1.987,480,1.156,501,2.059,520,2.332,554,2.967,555,3.42,573,2.549,751,3.454,819,2.281,820,3.188,822,3.982,823,3.454,824,4.312,825,4.312,826,2.471,827,4.312,828,3.029,829,3.188,839,3.029,846,4.233,857,3.454,880,5.154,881,4.91,882,4.233,883,4.233,884,4.233,885,4.88,886,3.513,887,4.233,888,4.727,889,3.513,890,3.513,891,3.513,892,3.513,893,3.029,894,3.029,895,3.029,896,4.233,897,4.91,898,4.233]],["title/interfaces/Review.html",[82,0.496,464,0.345]],["body/interfaces/Review.html",[3,0.214,4,0.192,9,0.192,13,0.35,16,0.557,19,1.707,28,0.214,29,0.651,39,0.018,41,0.387,42,0.583,47,0.284,50,0.933,53,0.317,82,0.901,92,0.552,100,0.012,101,0.012,162,1.964,165,1.617,167,1.448,173,1.417,216,0.824,420,1.183,423,1.476,432,1.035,435,1.294,464,0.567,465,2.126,466,1.132,467,1.554,468,1.617,469,1.747,470,1.294,471,1.633,472,1.354,473,1.354,474,1.354,475,1.63,476,1.354,477,1.354,478,1.237,479,1.484,480,0.99,481,1.354,482,1.354,483,2.538,484,1.63,485,1.417,486,1.354,487,1.786,488,1.63,489,2.051,490,1.63,491,1.911,492,1.63,493,1.63,494,1.63,495,1.484,496,1.63,497,1.554,498,1.417,499,1.354,500,1.554,501,1.237,502,1.484,503,1.484,504,0.904,505,1.554,506,1.484,507,1.417,508,1.869,509,1.869,510,1.63,511,1.63,512,1.417,513,1.554,514,1.554,515,1.417,530,4.032,899,4.368]],["title/components/ReviewCardComponent.html",[0,0.345,81,0.93]],["body/components/ReviewCardComponent.html",[0,0.551,1,0.937,2,1.44,3,0.203,4,0.182,5,1.172,6,1.172,7,1.172,8,1.172,9,0.182,13,0.203,23,1.172,24,1.574,26,1.574,28,0.203,36,0.937,39,0.018,40,1.3,41,0.224,47,0.361,48,0.781,50,0.664,51,1.891,53,0.203,54,0.677,62,1.072,63,1.574,64,1.574,65,1.172,66,1.901,67,1.172,68,2.294,69,0.98,70,2.029,71,1.172,72,0.937,73,0.937,74,0.937,75,0.937,76,0.937,77,0.937,78,0.98,79,0.937,80,0.98,81,1.59,82,0.991,83,1.778,84,0.98,85,0.937,86,1.072,87,1.172,88,0.98,89,1.172,90,1.172,91,0.98,92,0.523,93,0.98,94,0.98,95,0.98,96,0.937,97,0.937,98,1.172,99,1.172,100,0.012,101,0.012,236,3.432,248,3.233,256,3.432,344,4.126,410,4.073,483,1.472,529,2.585,573,2.409,644,2.801,726,4.195,768,3.071,812,3.233,900,3.764,901,2.801,902,4.66,903,4.126,904,3.764,905,3.432,906,4.612,907,4.612,908,5.35,909,3.981,910,4.612,911,3.981,912,3.981,913,3.981,914,3.981,915,3.981,916,3.981,917,5.35,918,3.981,919,3.981,920,3.432,921,5.35,922,3.981,923,3.981]],["title/interfaces/ReviewDTO.html",[464,0.345,924,2.659]],["body/interfaces/ReviewDTO.html",[3,0.221,4,0.198,9,0.198,13,0.353,16,0.553,19,1.742,28,0.221,29,0.664,39,0.018,41,0.319,42,0.601,47,0.293,50,0.937,53,0.321,82,0.877,92,0.569,100,0.013,101,0.013,162,1.977,165,1.629,167,1.46,173,1.461,216,0.85,420,1.22,423,1.217,432,1.067,435,1.335,464,0.575,465,2.151,466,1.167,467,1.603,468,1.56,469,1.88,470,1.335,471,1.666,472,1.396,473,1.396,474,1.396,475,1.681,476,1.396,477,1.396,478,1.276,479,1.53,480,1.021,481,1.396,482,1.396,483,2.093,484,1.681,485,1.461,486,1.396,487,1.823,488,1.681,489,2.093,490,1.681,491,1.335,492,1.681,493,1.681,494,1.681,495,1.53,496,1.681,497,1.603,498,1.461,499,1.396,500,1.603,501,1.276,502,1.53,503,1.53,504,0.932,505,1.603,506,1.53,507,1.461,508,1.908,509,1.908,510,1.681,511,1.681,512,1.461,513,1.603,514,1.603,515,1.461,523,1.952,899,4.434,924,3.05]],["title/components/ReviewDialogComponent.html",[0,0.345,84,0.93]],["body/components/ReviewDialogComponent.html",[0,0.503,1,0.789,2,1.279,3,0.171,4,0.153,5,0.986,6,0.986,7,0.986,8,0.986,9,0.153,13,0.306,16,0.464,23,0.986,24,1.398,26,1.398,28,0.171,29,0.557,31,1.279,33,1.398,36,1.549,38,1.485,39,0.018,40,1.288,41,0.311,42,0.765,44,1.616,45,2.322,47,0.372,48,0.657,50,0.817,53,0.171,54,0.57,62,0.902,63,1.398,64,1.398,65,0.986,66,1.767,67,0.986,68,2.246,69,0.825,70,1.852,71,0.986,72,0.789,73,0.789,74,0.789,75,0.789,76,0.789,77,0.789,78,0.825,79,0.789,80,0.825,81,0.825,82,0.923,83,1.624,84,1.478,85,0.789,86,0.902,87,0.986,88,0.825,89,0.986,90,0.986,91,0.825,92,0.44,93,0.825,94,0.825,95,0.825,96,0.789,97,1.299,98,0.986,99,0.986,100,0.011,101,0.011,118,2.139,149,1.364,150,1.364,168,1.462,214,1.783,216,0.657,248,2.87,295,1.783,310,2.025,346,4.761,468,1.242,480,1.492,520,2.256,554,2.87,555,3.334,573,2.485,751,3.342,753,4.223,755,3.882,757,3.342,759,4.223,776,2.358,819,2.176,820,3.085,822,3.882,823,3.342,824,4.223,825,4.223,826,2.358,827,4.223,829,3.085,857,3.342,882,4.095,883,2.89,884,4.095,885,4.757,887,4.095,888,4.63,893,2.89,894,2.89,895,2.89,896,4.095,898,4.095,899,4.223,900,4.761,925,4.095,926,4.75,927,2.89,928,3.352,929,3.352,930,4.75,931,2.89,932,3.352,933,4.75,934,2.89,935,3.352,936,3.352,937,3.352,938,4.75,939,4.75,940,4.095]],["title/components/SearchPageComponent.html",[0,0.345,85,0.89]],["body/components/SearchPageComponent.html",[0,0.458,1,0.668,2,1.133,3,0.145,4,0.13,5,0.835,6,0.835,7,0.835,8,0.835,9,0.13,12,1.214,13,0.145,14,1.959,16,0.455,19,1.296,21,1.632,22,2.383,23,0.835,24,1.239,25,2.26,26,1.239,27,1.896,28,0.145,29,0.494,31,1.133,32,2.637,33,0.835,34,1.996,35,3.118,36,1.555,38,0.764,39,0.018,40,1.248,41,0.334,42,0.822,44,1.133,45,1.959,46,2.616,47,0.419,48,0.556,49,1.001,50,0.737,51,1.348,52,1.715,53,0.145,54,0.482,55,1.214,62,0.764,63,1.239,64,1.239,65,0.835,66,1.634,67,0.835,68,2.218,69,0.699,70,1.859,71,0.835,72,0.668,73,0.668,74,0.668,75,0.668,76,0.668,77,0.668,78,0.699,79,0.668,80,0.699,81,0.699,82,0.373,83,1.477,84,0.699,85,1.307,86,1.976,87,0.835,88,0.699,89,0.835,90,0.835,91,0.699,92,0.373,93,0.699,94,0.699,95,0.699,96,0.668,97,0.668,98,0.835,99,0.835,100,0.013,101,0.009,138,2.734,149,1.155,150,1.155,224,3.247,295,1.509,313,5.356,375,4.382,427,2.937,465,1.91,480,1.181,485,2.094,486,0.914,487,1.91,489,1.557,513,1.557,514,1.856,554,2.544,555,2.544,561,2.189,562,4.647,563,3.736,573,1.896,596,1.843,602,2.734,661,4.034,754,2.189,941,5.818,942,5.019,943,5.019,944,5.019,945,5.019,946,5.019,947,5.552,948,4.21,949,2.838,950,2.838,951,6.213,952,4.327,953,5.695,954,4.21,955,4.21,956,3.63,957,4.21,958,2.838,959,2.838,960,2.447,961,1.843,962,2.447,963,2.838,964,2.838,965,2.838,966,2.838,967,2.838,968,2.838,969,2.838,970,2.838,971,2.838,972,2.838,973,3.63,974,4.21,975,2.962,976,3.63,977,4.21,978,3.63,979,4.21,980,3.63,981,4.21,982,4.21,983,4.21,984,4.21,985,4.21]],["title/components/StarRatingComponent.html",[0,0.345,88,0.93]],["body/components/StarRatingComponent.html",[0,0.586,1,0.817,2,1.311,3,0.177,4,0.159,5,1.022,6,1.022,7,1.022,8,1.022,9,0.159,13,0.287,16,0.254,23,1.022,24,1.433,26,1.433,28,0.311,31,1.311,36,1.511,38,1.311,39,0.018,40,1.289,41,0.362,42,0.675,44,1.514,45,1.225,47,0.234,48,0.681,50,0.605,53,0.177,54,0.59,62,0.934,63,1.433,64,1.433,65,1.022,66,1.794,67,1.022,68,2.266,69,0.855,70,1.963,71,1.022,72,0.817,73,0.817,74,0.817,75,0.817,76,0.817,77,0.817,78,0.855,79,0.817,80,0.855,81,0.855,82,0.738,83,1.655,84,0.855,85,0.817,86,0.934,87,1.022,88,1.501,89,2.232,90,1.022,91,0.855,92,0.456,93,0.855,94,0.855,95,0.855,96,0.817,97,0.817,98,1.022,99,1.022,100,0.011,101,0.011,131,2.677,149,1.982,150,1.982,162,1.311,163,2.444,165,1.096,167,1,174,3.756,192,2.993,214,1.846,216,0.681,248,2.942,348,5.134,427,1.485,468,1.538,566,5.256,573,2.532,650,3.632,692,3.756,764,3.425,812,2.942,820,3.162,899,3.957,904,3.425,920,5.893,986,5.738,987,2.993,988,5.624,989,4.869,990,4.869,991,4.869,992,5.535,993,4.198,994,5.624,995,3.471,996,3.756,997,3.471,998,5.256,999,3.471,1000,6.097,1001,3.471,1002,4.869,1003,4.869,1004,6.097,1005,4.869,1006,4.869,1007,3.471,1008,3.471,1009,3.471,1010,4.198]],["title/interfaces/Stop.html",[92,0.496,464,0.345]],["body/interfaces/Stop.html",[3,0.202,4,0.181,9,0.181,13,0.343,16,0.545,19,1.64,28,0.202,29,0.625,39,0.018,41,0.416,42,0.548,47,0.267,50,0.923,53,0.307,82,0.791,92,0.791,100,0.012,101,0.012,162,1.937,165,1.593,167,1.581,168,1.64,173,2.172,216,0.776,397,4.238,420,1.114,423,1.446,432,0.974,435,1.218,464,0.55,465,2.075,466,1.065,467,1.463,468,1.641,469,1.695,470,1.218,471,1.568,472,1.274,473,1.274,474,1.274,475,1.534,476,1.274,477,1.274,478,1.165,479,1.396,480,0.931,481,1.274,482,1.274,483,1.97,484,1.534,485,1.334,486,1.274,487,1.716,488,1.534,489,1.97,490,1.534,491,1.218,492,1.534,493,1.534,494,1.534,495,1.396,496,1.534,497,1.463,498,1.334,499,1.274,500,1.463,501,1.165,502,1.396,503,1.396,504,0.851,505,1.463,506,1.396,507,1.334,508,1.796,509,1.796,510,1.534,511,1.534,512,1.334,513,1.463,514,1.463,515,1.334,1011,4.646,1012,4.646,1013,4.646,1014,4.646,1015,4.646,1016,4.646]],["title/components/StopCardComponent.html",[0,0.345,91,0.93]],["body/components/StopCardComponent.html",[0,0.478,1,0.718,2,1.195,3,0.156,4,0.139,5,0.898,6,0.898,7,0.898,8,0.898,9,0.139,13,0.156,14,2.029,16,0.421,23,0.898,24,1.307,26,1.307,28,0.156,36,1.438,39,0.018,40,1.254,41,0.344,47,0.3,48,0.598,50,0.911,51,1.449,53,0.156,54,0.519,62,0.821,63,1.307,64,1.307,65,0.898,66,1.692,67,0.898,68,2.236,69,0.751,70,1.898,71,0.898,72,0.718,73,0.718,74,0.718,75,0.718,76,0.718,77,0.718,78,0.751,79,0.718,80,0.751,81,0.751,82,0.401,83,1.541,84,0.751,85,0.718,86,0.821,87,0.898,88,0.751,89,0.898,90,0.898,91,1.416,92,1.012,93,0.751,94,0.751,95,0.751,96,0.718,97,0.718,98,0.898,99,0.898,100,0.01,101,0.01,149,1.808,150,1.808,162,1.548,163,2.886,165,1.294,351,4.486,410,3.164,427,1.9,497,2.126,508,2.149,509,1.497,573,2.589,726,3.734,764,4.045,812,2.684,901,2.147,902,4.038,903,3.426,904,3.124,905,2.631,910,3.829,975,3.124,992,5.268,993,3.829,996,4.435,998,5.674,1010,4.514,1017,4.486,1018,6.11,1019,5.236,1020,5.236,1021,3.4,1022,3.052,1023,5.75,1024,4.435,1025,5.75,1026,5.75,1027,3.052,1028,3.052,1029,3.052,1030,3.829,1031,4.441,1032,4.435,1033,2.631,1034,4.441,1035,3.829,1036,3.829,1037,4.441,1038,3.829,1039,4.441,1040,3.426,1041,4.441,1042,4.441,1043,3.829,1044,3.829,1045,4.441]],["title/interfaces/StopDTO.html",[464,0.345,1021,2.454]],["body/interfaces/StopDTO.html",[3,0.203,4,0.182,9,0.182,13,0.344,16,0.545,19,1.647,28,0.203,29,0.627,39,0.018,41,0.412,42,0.552,47,0.269,50,0.924,53,0.308,82,0.793,92,0.702,100,0.012,101,0.012,162,1.94,165,1.595,167,1.582,168,1.647,173,2.177,216,0.781,397,4.251,420,1.12,423,1.15,432,0.98,435,1.225,464,0.551,465,2.08,466,1.072,467,1.472,468,1.595,469,1.818,470,1.225,471,1.574,472,1.282,473,1.282,474,1.282,475,1.544,476,1.282,477,1.282,478,1.172,479,1.405,480,0.937,481,1.282,482,1.282,483,1.978,484,1.544,485,1.342,486,1.282,487,1.723,488,1.544,489,1.978,490,1.544,491,1.225,492,1.544,493,1.544,494,1.544,495,1.405,496,1.544,497,1.472,498,1.342,499,1.282,500,1.472,501,1.172,502,1.405,503,1.405,504,0.856,505,1.472,506,1.405,507,1.342,508,1.803,509,1.803,510,1.544,511,1.544,512,1.342,513,1.472,514,1.472,515,1.342,523,1.793,1011,4.66,1012,4.66,1013,4.66,1014,4.66,1015,4.66,1016,4.66,1021,2.585,1046,3.071]],["title/components/StopEditorDialogComponent.html",[0,0.345,93,0.93]],["body/components/StopEditorDialogComponent.html",[0,0.449,1,0.647,2,1.107,3,0.14,4,0.126,5,0.809,6,0.809,7,0.809,8,0.809,9,0.126,13,0.251,16,0.361,21,1.594,22,2.339,23,0.809,24,1.21,26,1.21,28,0.14,29,0.482,31,1.107,32,2.595,33,1.21,36,1.498,38,0.74,39,0.018,40,1.242,41,0.232,42,0.683,44,1.326,45,2.167,47,0.415,48,0.539,50,0.879,51,1.305,53,0.14,54,0.467,62,0.74,63,1.21,64,1.21,65,0.809,66,1.609,67,0.809,68,2.194,69,0.677,70,1.728,71,0.809,72,0.647,73,0.647,74,0.647,75,0.647,76,0.647,77,0.647,78,0.677,79,0.647,80,0.677,81,0.677,82,0.361,83,1.449,84,0.677,85,0.647,86,0.74,87,0.809,88,0.677,89,0.809,90,0.809,91,0.677,92,1.007,93,1.346,94,0.677,95,1.346,96,0.647,97,0.647,98,0.809,99,0.809,100,0.009,101,0.009,118,1.851,145,2.37,149,1.119,150,1.119,173,1.385,216,0.539,233,3.171,295,1.462,310,1.661,352,5.244,353,4.909,357,1.661,376,1.785,377,1.555,397,2.892,427,3.144,446,1.934,480,1.287,520,1.952,523,1.851,569,2.37,573,2.218,650,2.786,753,3.845,755,3.465,757,2.892,759,5.107,776,5.141,819,1.785,820,2.67,822,3.465,823,2.892,824,3.845,825,3.845,826,1.934,827,3.845,829,2.67,833,2.37,834,2.37,836,3.544,857,2.892,927,2.37,931,2.37,934,2.37,940,3.544,953,6.336,960,2.37,961,1.785,962,2.37,975,3.845,1011,3.171,1012,3.171,1013,3.171,1014,3.171,1015,3.171,1016,3.171,1017,4.478,1036,3.544,1038,3.544,1040,4.216,1043,3.544,1044,3.544,1046,3.799,1047,6.365,1048,2.749,1049,2.749,1050,2.749,1051,2.749,1052,2.749,1053,2.749,1054,2.749,1055,2.749,1056,2.37,1057,2.749,1058,5.466,1059,4.111,1060,4.111,1061,4.712,1062,4.111,1063,4.111,1064,4.111]],["title/interfaces/Tag.html",[464,0.345,486,1.217]],["body/interfaces/Tag.html",[3,0.222,4,0.199,9,0.199,13,0.289,16,0.553,19,1.746,28,0.222,29,0.665,39,0.018,40,1.073,41,0.32,42,0.603,47,0.294,50,0.938,53,0.322,82,0.829,92,0.571,100,0.013,101,0.013,162,1.978,165,1.631,167,1.461,173,1.466,216,0.853,420,1.224,423,1.492,432,1.071,435,1.339,464,0.576,465,2.154,466,1.171,467,1.609,468,1.561,469,1.777,470,1.339,471,1.67,472,1.401,473,1.401,474,1.401,475,1.687,476,1.401,477,1.401,478,1.28,479,1.535,480,1.024,481,1.401,482,1.401,483,2.098,484,1.687,485,1.466,486,2.033,487,1.827,488,1.687,489,2.098,490,1.687,491,1.339,492,1.687,493,1.687,494,1.687,495,1.535,496,1.687,497,1.609,498,1.466,499,1.401,500,1.609,501,1.28,502,1.535,503,1.535,504,0.935,505,1.609,506,1.535,507,1.466,508,1.912,509,1.912,510,1.687,511,1.687,512,1.466,513,1.609,514,1.609,515,1.466]],["title/interfaces/TagDTO.html",[464,0.345,1065,2.915]],["body/interfaces/TagDTO.html",[3,0.223,4,0.2,9,0.2,13,0.29,16,0.554,19,1.752,28,0.223,29,0.668,39,0.018,40,1.075,41,0.246,42,0.606,47,0.295,50,0.939,53,0.323,82,0.831,92,0.574,100,0.013,101,0.013,162,1.98,165,1.633,167,1.463,173,1.473,216,0.857,420,1.23,423,1.224,432,1.076,435,1.346,464,0.577,465,2.158,466,1.177,467,1.617,468,1.424,469,1.886,470,1.346,471,1.675,472,1.408,473,1.408,474,1.408,475,1.695,476,1.408,477,1.408,478,1.287,479,1.543,480,1.029,481,1.408,482,1.408,483,2.104,484,1.695,485,1.473,486,1.833,487,1.833,488,1.695,489,2.104,490,1.695,491,1.346,492,1.695,493,1.695,494,1.695,495,1.543,496,1.695,497,1.617,498,1.473,499,1.408,500,1.617,501,1.287,502,1.543,503,1.543,504,0.94,505,1.617,506,1.543,507,1.473,508,1.918,509,1.918,510,1.695,511,1.695,512,1.473,513,1.617,514,1.617,515,1.473,523,1.969,1065,3.372,1066,4.372,1067,4.372]],["title/interfaces/Theme.html",[464,0.345,487,1.217]],["body/interfaces/Theme.html",[3,0.222,4,0.199,9,0.199,13,0.289,16,0.553,19,1.746,28,0.222,29,0.665,39,0.018,40,1.073,41,0.32,42,0.603,47,0.294,50,0.938,53,0.322,82,0.829,92,0.571,100,0.013,101,0.013,162,1.978,165,1.631,167,1.461,173,1.466,216,0.853,420,1.224,423,1.492,432,1.071,435,1.339,464,0.576,465,2.154,466,1.171,467,1.609,468,1.561,469,1.777,470,1.339,471,1.67,472,1.401,473,1.401,474,1.401,475,1.687,476,1.401,477,1.401,478,1.28,479,1.535,480,1.024,481,1.401,482,1.401,483,2.098,484,1.687,485,1.466,486,1.401,487,2.154,488,1.687,489,2.098,490,1.687,491,1.339,492,1.687,493,1.687,494,1.687,495,1.535,496,1.687,497,1.609,498,1.466,499,1.401,500,1.609,501,1.28,502,1.535,503,1.535,504,0.935,505,1.609,506,1.535,507,1.466,508,1.912,509,1.912,510,1.687,511,1.687,512,1.466,513,1.609,514,1.609,515,1.466]],["title/interfaces/Tour.html",[50,0.469,464,0.345]],["body/interfaces/Tour.html",[3,0.195,4,0.175,9,0.175,13,0.339,16,0.549,19,1.603,28,0.195,29,0.611,39,0.018,41,0.425,42,0.53,47,0.258,50,0.925,53,0.302,82,0.873,92,0.777,100,0.012,101,0.012,162,1.971,165,1.579,167,1.504,173,2.141,216,0.75,420,1.076,423,1.429,432,0.942,435,1.177,464,0.54,465,2.332,466,1.03,467,1.414,468,1.629,469,1.666,470,1.177,471,1.532,472,1.232,473,1.232,474,1.232,475,1.483,476,1.232,477,1.232,478,1.126,479,1.35,480,0.9,481,1.232,482,1.232,483,2.458,484,2.464,485,2.141,486,1.906,487,2.26,488,2.464,489,2.458,490,2.464,491,1.822,492,2.464,493,2.464,494,2.464,495,1.35,496,1.483,497,1.414,498,1.289,499,1.232,500,1.414,501,1.126,502,1.35,503,1.35,504,0.822,505,1.414,506,1.35,507,1.289,508,1.755,509,1.755,510,1.483,511,1.483,512,1.289,513,1.414,514,1.414,515,1.289]],["title/interfaces/TourActions.html",[464,0.345,499,1.217]],["body/interfaces/TourActions.html",[3,0.208,4,0.187,9,0.187,13,0.278,16,0.551,19,1.676,28,0.208,29,0.638,39,0.018,41,0.402,42,0.566,47,0.276,50,0.929,53,0.312,82,0.918,92,0.537,100,0.012,101,0.012,162,2.099,165,1.606,167,1.341,173,1.377,216,0.801,420,1.15,423,1.17,432,1.006,435,1.258,464,0.559,465,2.102,466,1.1,467,1.511,468,1.377,469,1.723,470,1.258,471,1.602,472,1.316,473,1.316,474,1.316,475,1.585,476,1.316,477,1.316,478,1.203,479,1.442,480,0.962,481,1.316,482,1.316,483,2.013,484,1.585,485,1.377,486,1.316,487,1.753,488,1.585,489,2.013,490,1.585,491,1.258,492,1.585,493,1.585,494,1.585,495,1.921,496,2.111,497,2.013,498,1.835,499,1.753,500,2.414,501,1.203,502,2.304,503,1.442,504,0.879,505,2.414,506,1.442,507,1.377,508,2.291,509,2.291,510,2.531,511,1.585,512,1.377,513,1.511,514,1.511,515,1.377]],["title/components/TourCardComponent.html",[0,0.345,94,0.93]],["body/components/TourCardComponent.html",[0,0.524,1,0.851,2,1.348,3,0.184,4,0.165,5,1.064,6,1.064,7,1.064,8,1.064,9,0.165,13,0.184,23,1.064,24,1.474,26,1.474,28,0.184,36,0.851,39,0.018,40,1.284,41,0.204,47,0.388,48,0.709,50,0.929,51,1.716,53,0.184,54,0.614,62,0.973,63,1.474,64,1.474,65,1.064,66,1.826,67,1.064,68,2.275,69,0.89,70,1.983,71,1.064,72,0.851,73,0.851,74,0.851,75,0.851,76,0.851,77,0.851,78,0.89,79,0.851,80,0.89,81,0.89,82,0.475,83,1.691,84,0.89,85,1.46,86,0.973,87,1.064,88,0.89,89,1.064,90,1.064,91,0.89,92,0.475,93,0.89,94,1.527,95,0.89,96,0.851,97,0.851,98,1.064,99,1.064,100,0.011,101,0.011,351,3.523,357,2.184,374,2.788,375,2.347,410,3.473,520,2.378,573,2.255,722,3.523,726,4.029,805,3.863,812,3.026,848,3.523,901,2.543,902,4.433,903,3.863,904,3.523,906,4.318,907,4.318,1017,3.523,1030,4.318,1032,3.863,1033,5.618,1068,5.008,1069,3.614,1070,5.008,1071,5.008,1072,5.008,1073,4.318,1074,5.008,1075,5.008,1076,5.008,1077,4.318,1078,5.008,1079,5.008]],["title/interfaces/TourDTO.html",[464,0.345,1080,2.659]],["body/interfaces/TourDTO.html",[3,0.202,4,0.181,9,0.181,13,0.343,16,0.552,19,1.64,28,0.202,29,0.625,39,0.018,41,0.416,42,0.835,47,0.267,50,0.923,53,0.307,82,0.791,92,0.52,100,0.012,101,0.012,162,1.984,165,1.593,167,1.538,173,2.172,216,0.776,420,1.114,423,1.146,432,0.974,435,1.218,464,0.55,465,2.348,466,1.065,467,1.463,468,1.513,469,1.814,470,1.218,471,1.568,472,1.274,473,1.274,474,1.274,475,1.534,476,1.274,477,1.274,478,1.165,479,1.396,480,0.931,481,1.274,482,1.274,483,1.97,484,2.499,485,1.334,486,1.274,487,2.28,488,2.499,489,2.487,490,1.534,491,1.218,492,2.499,493,1.534,494,1.534,495,1.396,496,1.534,497,1.463,498,1.334,499,1.274,500,1.463,501,1.165,502,1.396,503,1.396,504,0.851,505,1.463,506,1.396,507,1.334,508,1.796,509,1.796,510,1.534,511,1.534,512,1.334,513,1.463,514,1.463,515,1.334,523,1.782,1021,3.46,1046,3.052,1080,2.784,1081,6.024,1082,6.024]],["title/components/TourPageComponent.html",[0,0.345,97,0.89]],["body/components/TourPageComponent.html",[0,0.345,1,0.429,2,0.802,3,0.093,4,0.083,5,0.536,6,0.536,7,0.536,8,0.536,9,0.083,12,0.78,13,0.193,14,1.54,16,0.399,17,3.435,18,2.096,21,1.155,22,1.794,23,0.536,24,0.877,25,1.701,26,0.877,27,1.341,28,0.093,29,0.349,31,1.295,32,2.072,33,0.877,35,2.734,36,1.514,38,0.491,39,0.018,40,1.15,41,0.213,42,0.667,44,1.629,45,2.451,47,0.434,48,0.357,49,0.643,50,0.919,51,0.865,52,1.101,53,0.093,54,0.31,62,0.491,63,0.877,64,0.877,65,0.536,66,1.284,67,0.536,68,2.059,69,0.449,70,1.453,71,0.536,72,0.429,73,0.429,74,0.429,75,0.429,76,0.429,77,0.429,78,0.733,79,0.429,80,0.733,81,0.449,82,0.678,83,1.112,84,0.733,85,0.429,86,0.802,87,0.536,88,0.449,89,0.536,90,0.536,91,0.449,92,0.239,93,0.449,94,0.449,95,0.449,96,0.429,97,1.027,98,0.536,99,0.536,100,0.007,101,0.007,118,2.649,122,2.921,124,3.366,127,5.271,130,2.907,143,1.934,168,0.561,185,0.915,187,1.406,216,0.357,237,1.406,310,1.101,327,1.183,328,1.183,338,1.571,339,1.282,340,3.257,342,1.282,346,1.282,365,1.414,377,3.695,403,1.282,408,2.137,410,1.8,423,0.392,425,2.325,427,1.274,442,1.406,446,2.096,485,1.004,495,2.305,499,1.216,501,1.112,506,1.051,507,1.273,508,1.47,509,2.088,512,1.836,518,2.649,519,2.175,520,1.414,527,1.031,528,1.031,532,0.915,536,1.571,543,3.292,544,1.571,557,3.762,563,1.685,564,2.721,572,1.571,579,2.568,581,1.571,582,1.282,583,1.406,589,2.914,593,1.282,596,1.934,600,1.406,603,1.571,604,1.571,605,1.571,626,1.406,642,1.406,644,2.096,661,3.538,662,3.07,669,1.406,670,1.571,694,3.384,696,3.632,697,3.07,714,3.384,722,2.096,725,2.658,726,1.183,727,1.571,728,1.571,729,1.571,730,1.571,731,1.571,732,1.571,754,2.298,780,3.71,802,2.568,803,3.71,805,2.298,829,2.453,835,1.406,848,2.096,880,1.406,900,1.282,925,4.147,973,2.568,975,2.096,976,2.568,978,2.568,980,2.568,996,2.298,1024,2.298,1032,2.298,1035,3.257,1040,2.298,1061,2.568,1073,2.568,1077,2.568,1083,5.631,1084,2.979,1085,4.363,1086,4.363,1087,4.363,1088,4.363,1089,4.363,1090,4.363,1091,4.363,1092,4.363,1093,3.778,1094,4.363,1095,1.822,1096,2.979,1097,4.81,1098,1.822,1099,2.979,1100,1.822,1101,1.822,1102,1.822,1103,1.822,1104,1.822,1105,1.822,1106,1.571,1107,1.822,1108,1.822,1109,1.822,1110,1.822,1111,1.822,1112,1.822,1113,1.822,1114,2.979,1115,2.979,1116,1.822,1117,2.979,1118,1.822,1119,2.979,1120,2.979,1121,4.81,1122,1.822,1123,1.822,1124,1.822,1125,1.822,1126,1.822,1127,2.979,1128,1.822,1129,1.822,1130,1.822,1131,2.979,1132,3.778,1133,1.822,1134,1.822,1135,1.822,1136,1.822,1137,1.822,1138,1.822,1139,1.822,1140,1.822,1141,2.979,1142,1.822,1143,2.568,1144,2.979,1145,2.979,1146,2.979,1147,1.822,1148,1.822,1149,1.822,1150,1.822,1151,1.571,1152,1.822,1153,3.778,1154,1.822,1155,1.822,1156,1.822,1157,1.822,1158,1.822,1159,2.979,1160,2.568,1161,2.979,1162,2.979,1163,2.979,1164,2.979,1165,2.979,1166,2.979,1167,2.979,1168,2.979,1169,2.979,1170,2.979,1171,2.979,1172,2.979,1173,2.979,1174,2.979,1175,2.979,1176,1.822]],["title/interfaces/TourSearchDTO.html",[464,0.345,515,1.273]],["body/interfaces/TourSearchDTO.html",[3,0.213,4,0.191,9,0.191,13,0.282,16,0.55,19,1.905,28,0.213,29,0.648,39,0.018,41,0.371,42,1.032,47,0.282,50,0.925,53,0.316,82,0.813,92,0.549,100,0.012,101,0.012,162,1.961,165,1.615,167,1.445,173,1.408,216,0.819,420,1.176,423,1.188,432,1.028,435,1.286,464,0.565,465,2.374,466,1.124,467,1.545,468,1.393,469,1.853,470,1.286,471,1.626,472,1.345,473,1.345,474,1.345,475,1.62,476,1.345,477,1.345,478,1.229,479,1.474,480,0.983,481,1.345,482,1.345,483,2.042,484,1.62,485,2.219,486,1.993,487,2.311,488,1.62,489,2.532,490,1.62,491,1.286,492,1.62,493,1.62,494,1.62,495,1.474,496,1.62,497,1.545,498,1.408,499,1.345,500,1.545,501,1.229,502,1.474,503,1.474,504,0.898,505,1.545,506,1.474,507,1.408,508,1.862,509,1.862,510,1.62,511,1.62,512,1.408,513,2.042,514,2.042,515,1.862]],["title/injectables/TourService.html",[35,1.897,451,1.794]],["body/injectables/TourService.html",[3,0.08,4,0.071,9,0.071,13,0.301,16,0.451,19,2.073,20,3.424,28,0.08,31,0.707,33,0.46,35,1.317,36,1.571,38,1.657,39,0.018,40,1.025,41,0.34,42,0.836,44,1.964,46,2.838,47,0.323,48,0.307,49,0.552,50,0.953,53,0.08,54,0.266,55,0.669,82,0.753,86,1.437,100,0.006,101,0.006,108,1.016,143,4.373,168,1.474,190,0.885,214,3.333,216,1.295,287,0.945,420,1.816,423,1.448,426,6.359,427,2.177,451,1.246,453,1.1,461,3.424,465,0.845,468,1.587,471,0.772,485,1.338,486,1.092,487,1.092,495,1.69,498,2.337,499,0.504,500,0.97,501,1.735,505,0.97,506,1.401,507,1.871,508,1.338,509,1.8,512,1.614,515,1.338,519,1.975,525,3.646,532,3.028,593,1.847,602,4.678,646,1.1,648,2.025,649,2.025,650,4.278,654,2.263,655,1.207,656,3.063,658,1.586,661,4.29,662,4.035,676,2.263,677,1.016,678,1.207,680,4.654,682,4.13,685,3.063,725,1.1,769,2.025,835,1.207,879,2.794,924,2.794,956,4.13,1024,3.063,1080,3.581,1151,3.424,1160,3.424,1177,1.349,1178,2.625,1179,2.625,1180,2.625,1181,3.971,1182,3.971,1183,3.971,1184,2.625,1185,3.971,1186,3.971,1187,3.971,1188,2.625,1189,2.625,1190,3.971,1191,1.564,1192,2.625,1193,4.945,1194,1.564,1195,7.052,1196,2.625,1197,1.564,1198,2.625,1199,1.564,1200,4.604,1201,2.625,1202,1.564,1203,2.625,1204,4.79,1205,2.625,1206,3.971,1207,2.625,1208,1.564,1209,3.971,1210,1.564,1211,3.971,1212,1.564,1213,1.564,1214,3.971,1215,2.625,1216,1.564,1217,2.625,1218,1.564,1219,1.564,1220,1.564,1221,1.564,1222,2.625,1223,2.625,1224,1.564,1225,2.625,1226,1.564,1227,5.082,1228,1.564,1229,2.625,1230,1.564,1231,2.625,1232,1.564,1233,1.564,1234,1.564,1235,1.564,1236,1.564,1237,1.564,1238,1.564,1239,1.564,1240,1.564,1241,2.625,1242,1.564,1243,1.564,1244,1.564,1245,1.564,1246,1.564,1247,1.564,1248,1.564,1249,3.391,1250,1.564,1251,2.625,1252,2.625,1253,2.625,1254,2.625,1255,3.971,1256,2.625,1257,2.625,1258,2.625,1259,2.625,1260,2.625,1261,2.625,1262,2.625,1263,2.625,1264,2.625,1265,1.564,1266,1.564]],["title/components/TouristPageComponent.html",[0,0.345,96,0.89]],["body/components/TouristPageComponent.html",[0,0.527,1,0.86,2,1.358,3,0.186,4,0.167,5,1.076,6,1.076,7,1.076,8,1.076,9,0.167,12,1.563,13,0.186,14,1.781,15,3.212,16,0.496,19,1.919,21,1.957,22,2.745,23,1.076,24,1.485,25,2.603,26,1.485,27,2.273,28,0.186,29,0.592,31,1.358,32,2.96,33,1.076,34,2.571,35,3.395,36,1.467,38,0.984,39,0.018,40,1.292,41,0.326,42,0.507,44,0.984,45,1.781,46,2.537,47,0.421,48,0.717,49,1.29,50,0.861,51,1.735,52,2.208,53,0.186,54,0.621,55,1.563,62,0.984,63,1.485,64,1.485,65,1.076,66,1.835,67,1.076,68,2.266,69,0.9,70,1.904,71,1.076,72,0.86,73,0.86,74,0.86,75,0.86,76,0.86,77,0.86,78,0.9,79,0.86,80,0.9,81,0.9,82,0.48,83,1.701,84,0.9,85,0.86,86,0.984,87,1.076,88,0.9,89,1.076,90,1.076,91,0.9,92,0.48,93,0.9,94,0.9,95,0.9,96,1.467,97,0.86,98,1.076,99,1.076,100,0.011,101,0.011,379,4.602,479,2.2,507,1.701,518,2.946,519,1.866,563,3.526,718,3.151,722,3.55,723,5.375,803,3.893,1106,3.151,1227,4.351,1267,5.64,1268,5.781,1269,5.781,1270,5.047,1271,3.655,1272,3.655,1273,3.655,1274,3.655,1275,5.047,1276,5.047,1277,5.047,1278,5.047]],["title/interfaces/User.html",[16,0.277,464,0.345]],["body/interfaces/User.html",[3,0.24,4,0.215,9,0.215,13,0.24,16,0.532,17,2.845,28,0.24,29,0.7,39,0.018,41,0.401,53,0.351,100,0.013,101,0.013,113,3.109,115,3.202,167,1.585,179,3.175,423,1.482,464,0.598,466,1.267,468,1.475,469,1.68,471,1.386,518,2.12,519,1.741,758,4.618,761,3.058,863,5.003,864,5.003,1279,3.058,1280,5.605,1281,4.605,1282,4.605,1283,3.313,1284,3.313,1285,3.313,1286,3.632,1287,3.607,1288,3.632,1289,3.632,1290,3.632,1291,2.845,1292,3.632]],["title/interfaces/UserLoginDTO.html",[464,0.345,1287,2.284]],["body/interfaces/UserLoginDTO.html",[3,0.249,4,0.223,9,0.223,13,0.249,16,0.526,17,2.946,28,0.249,29,0.716,39,0.018,41,0.344,53,0.356,100,0.014,101,0.014,113,2.849,115,2.999,167,1.578,179,3.245,423,1.048,464,0.608,466,1.312,468,1.097,469,1.874,471,1.435,518,2.195,519,1.802,758,4.666,761,4.532,863,4.292,864,4.292,1279,3.166,1280,5.654,1281,4.706,1282,4.706,1283,3.43,1284,3.43,1285,3.43,1286,4.706,1287,4.024,1288,3.76,1289,3.76,1290,3.76,1291,2.946,1292,3.76]],["title/interfaces/UserRegisterDTO.html",[464,0.345,1291,2.284]],["body/interfaces/UserRegisterDTO.html",[3,0.246,4,0.221,9,0.221,13,0.246,16,0.525,17,2.919,28,0.246,29,0.711,39,0.018,41,0.342,53,0.355,100,0.013,101,0.013,113,2.976,115,2.986,167,1.576,179,3.226,423,1.039,464,0.605,466,1.3,468,1.087,469,1.866,471,1.785,518,2.175,519,1.786,758,3.939,761,3.136,863,5.042,864,5.042,1279,3.136,1280,5.641,1281,4.679,1282,4.679,1283,3.398,1284,3.398,1285,3.398,1286,3.726,1287,4.007,1288,3.726,1289,4.679,1290,4.679,1291,3.666,1292,4.679]],["title/injectables/UserService.html",[123,1.794,451,1.794]],["body/injectables/UserService.html",[3,0.14,4,0.126,9,0.126,13,0.298,15,1.952,16,0.574,28,0.14,31,1.107,33,0.809,36,1.54,38,1.575,39,0.018,40,0.994,41,0.33,42,0.811,44,1.924,45,1.451,46,2.468,47,0.415,48,0.539,49,0.97,53,0.14,54,0.467,55,1.176,100,0.009,101,0.009,108,1.785,113,3.16,115,3.013,116,4.712,123,1.952,127,3.171,143,2.67,168,2.014,190,2.326,193,3.549,214,3.112,216,1.147,276,2.892,287,1.661,380,4.478,451,1.952,453,1.934,471,1.21,498,2.296,593,2.892,602,2.67,646,1.934,648,3.171,649,3.171,650,4.216,655,2.12,656,4.216,658,2.484,677,1.785,678,2.12,680,2.12,685,3.171,872,3.544,1056,5.642,1193,4.246,1287,3.303,1291,3.303,1293,2.37,1294,4.111,1295,5.466,1296,5.466,1297,4.111,1298,2.749,1299,4.111,1300,2.749,1301,6.14,1302,2.749,1303,5.466,1304,7.349,1305,7.349,1306,6.14,1307,6.14,1308,2.749,1309,4.111,1310,2.749,1311,5.466,1312,7.005,1313,6.14,1314,5.466,1315,6.813,1316,5.466,1317,2.749,1318,4.111,1319,4.111,1320,2.749,1321,4.111,1322,4.111,1323,4.111,1324,4.111,1325,2.749,1326,2.749,1327,2.749,1328,4.111,1329,4.111,1330,2.749,1331,2.749,1332,2.749,1333,4.111,1334,4.111,1335,4.111,1336,2.749]],["title/classes/Utils.html",[54,0.642,961,2.454]],["body/classes/Utils.html",[3,0.214,4,0.192,9,0.192,13,0.283,28,0.214,29,0.728,31,1.493,36,1.306,38,1.671,39,0.018,40,1.055,41,0.387,42,0.769,44,1.847,47,0.284,53,0.283,54,1.055,100,0.012,101,0.012,141,4.783,150,2.687,167,1.275,168,2.032,214,2.236,216,1.088,295,2.236,408,3.734,480,1.659,564,3.734,650,3.138,888,3.243,952,5.692,961,3.602,1200,5.917,1337,4.204,1338,3.243,1339,5.547,1340,5.547,1341,7.049,1342,5.547,1343,5.547,1344,5.547,1345,4.204,1346,5.547,1347,7.049,1348,7.049,1349,6.602,1350,5.547,1351,5.547,1352,4.204,1353,5.294,1354,5.547,1355,5.353,1356,4.204,1357,5.692,1358,4.204,1359,4.204,1360,4.204,1361,4.204,1362,4.204,1363,4.204,1364,4.204,1365,5.547,1366,4.204,1367,4.204]],["title/coverage.html",[1368,4.452]],["body/coverage.html",[0,0.695,1,0.774,9,0.15,10,2.835,11,2.314,12,3.105,16,0.241,35,1.65,39,0.018,41,0.185,50,0.408,54,0.559,69,0.81,72,0.774,73,0.774,74,0.774,75,0.774,76,0.774,77,0.774,78,0.81,79,0.774,80,0.81,81,0.81,82,0.432,84,0.81,85,0.774,88,0.81,91,0.81,92,0.826,93,0.81,94,0.81,95,0.81,96,0.774,97,0.774,100,0.01,101,0.01,102,2.835,123,1.562,238,5.638,272,2.136,273,2.136,339,2.314,342,2.314,344,2.537,346,2.314,348,2.537,351,3.297,352,4.187,353,2.537,359,2.314,361,2.314,363,2.314,365,2.225,366,2.314,368,2.314,369,1.987,370,3.297,371,2.314,373,2.314,375,2.136,377,2.651,379,2.314,405,2.314,425,1.481,427,1.407,437,2.314,439,2.835,451,2.593,464,0.695,465,1.059,467,2.726,486,1.059,487,1.059,499,1.059,501,0.968,504,0.707,515,1.108,516,3.865,526,1.86,533,1.86,535,2.835,543,1.987,647,2.835,677,3.546,687,3.043,689,2.835,716,2.835,734,2.835,748,2.835,793,2.835,811,3.615,818,2.835,819,3.865,859,2.835,879,2.314,880,2.537,900,3.297,901,3.841,924,2.314,941,2.835,961,2.136,986,2.835,987,2.835,1017,3.841,1021,2.136,1065,2.537,1080,2.314,1083,4.041,1177,2.835,1267,2.835,1279,3.546,1287,1.987,1291,1.987,1293,2.835,1338,2.537,1368,2.835,1369,3.289,1370,3.289,1371,3.289,1372,4.687,1373,4.687,1374,3.289,1375,7.258,1376,3.289,1377,6.73,1378,4.687,1379,5.952,1380,3.289,1381,3.289,1382,4.687,1383,4.687,1384,3.289,1385,3.289,1386,5.46,1387,5.46,1388,7.186,1389,4.687,1390,4.687,1391,4.687,1392,4.687,1393,4.687,1394,4.687,1395,3.289,1396,3.289,1397,3.289,1398,3.289,1399,3.289,1400,3.289,1401,3.289,1402,3.289,1403,3.289,1404,6.291,1405,3.289,1406,3.289,1407,3.289,1408,3.289,1409,3.289,1410,3.289,1411,4.687,1412,3.289,1413,3.289,1414,3.289,1415,3.289,1416,3.289,1417,3.289,1418,3.289,1419,3.289,1420,2.835,1421,5.46,1422,2.835,1423,2.835,1424,3.289,1425,3.289]],["title/dependencies.html",[261,3.199,1426,2.432]],["body/dependencies.html",[39,0.018,48,1.101,49,1.981,100,0.015,101,0.015,185,2.818,261,3.95,284,4.84,295,2.986,332,5.733,333,5.129,1427,5.614,1428,7.799,1429,5.614,1430,5.614,1431,5.614,1432,5.614,1433,5.614,1434,5.614,1435,5.614,1436,5.614,1437,5.614]],["title/miscellaneous/enumerations.html",[1438,1.905,1439,3.92]],["body/miscellaneous/enumerations.html",[16,0.435,17,3.592,28,0.303,39,0.015,100,0.015,101,0.015,113,2.543,115,3.266,179,3.162,518,2.677,519,2.198,1279,3.86,1283,4.182,1284,4.182,1285,4.182,1438,3.592,1439,5.125,1440,5.944]],["title/index.html",[28,0.161,794,2.718,1441,3.153]],["body/index.html",[0,0.608,4,0.223,14,1.723,21,1.894,39,0.014,40,0.83,100,0.014,101,0.014,104,3.436,148,3.767,171,4.211,276,3.436,427,2.089,567,4.211,595,5.746,600,3.767,620,4.211,645,6.323,692,3.767,725,3.436,814,5.266,848,4.297,1143,4.211,1426,3.767,1442,4.884,1443,4.884,1444,4.884,1445,4.884,1446,4.884,1447,4.884,1448,4.884,1449,4.884,1450,4.884,1451,6.108,1452,4.884,1453,6.665,1454,6.665,1455,4.211,1456,4.884,1457,4.211,1458,7.19,1459,7.441,1460,4.884,1461,4.884,1462,4.884,1463,4.884,1464,4.884,1465,4.884,1466,4.884,1467,6.665,1468,4.884,1469,6.984,1470,4.884,1471,4.884,1472,4.884,1473,4.884,1474,6.108,1475,6.108,1476,6.984,1477,4.884,1478,6.108,1479,6.108,1480,4.884,1481,4.884,1482,4.884,1483,4.884,1484,6.108,1485,4.884,1486,4.211,1487,4.884,1488,4.884,1489,6.665,1490,4.884,1491,4.884,1492,3.767]],["title/modules.html",[260,3.353]],["body/modules.html",[39,0.015,100,0.015,101,0.015,259,4.249,260,3.922,271,3.922,333,4.659,661,3.922,1493,6.04,1494,6.04,1495,6.939,1496,6.04]],["title/overview.html",[1492,3.983]],["body/overview.html",[1,1.482,2,1.165,39,0.018,54,0.736,62,1.165,69,1.782,72,1.482,73,1.482,74,1.482,75,1.482,76,1.482,77,1.482,78,1.55,79,1.482,80,1.55,81,1.55,84,1.55,85,1.482,88,1.55,91,1.55,93,1.55,94,1.55,95,1.55,96,1.482,97,1.482,100,0.013,101,0.013,248,2.616,250,3.732,258,2.811,259,5.637,260,2.811,261,3.045,262,3.732,263,3.732,264,3.732,265,3.339,266,3.732,267,3.732,268,3.732,269,3.732,270,3.732,271,4.09,272,4.09,273,4.09,274,4.875,275,3.732,276,3.045,437,3.045,460,4.875,466,1.165,646,3.045,1492,3.339,1497,5.655,1498,4.329]],["title/properties.html",[29,0.533,1426,2.432]],["body/properties.html",[29,0.718,39,0.016,100,0.016,101,0.016,1455,5.28,1499,6.125]],["title/routes.html",[403,3.633]],["body/routes.html",[39,0.016,100,0.016,101,0.016,403,4.339]],["title/miscellaneous/typealiases.html",[1438,1.905,1500,4.547]],["body/miscellaneous/typealiases.html",[28,0.305,29,0.702,39,0.015,41,0.389,100,0.015,101,0.015,168,1.842,564,3.385,1338,4.617,1353,4.617,1355,5.16,1357,5.951,1438,3.617,1501,5.985,1502,5.985]],["title/miscellaneous/variables.html",[1438,1.905,1503,3.92]],["body/miscellaneous/variables.html",[28,0.266,39,0.018,41,0.387,100,0.014,101,0.014,149,2.793,150,2.793,163,3.192,165,1.173,563,3.597,650,2.949,658,3.843,677,4.981,1353,5.293,1420,4.495,1422,4.495,1423,4.495,1438,3.15,1457,4.495,1486,4.495,1503,6.16,1504,5.213,1505,5.213,1506,5.213,1507,7.145,1508,6.863,1509,6.36,1510,5.213,1511,5.213,1512,5.213,1513,6.36,1514,5.213,1515,5.213,1516,5.213,1517,5.213]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{},"overview.html":{}}}],["0.0.0",{"_index":1499,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["1/1",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":732,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["11/13",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["126px",{"_index":733,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["1300px",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["15.0.0",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["15.0.1",{"_index":1456,"title":{},"body":{"index.html":{}}}],["16",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["19/20",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["21",{"_index":1497,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["28/31",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1498,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["401",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/NotAuthorizedPageComponent.html":{}}}],["403",{"_index":815,"title":{},"body":{"components/NotAuthorizedPageComponent.html":{}}}],["404",{"_index":817,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["42",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":559,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["5/6",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80vw",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["83",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":1176,"title":{},"body":{"components/TourPageComponent.html":{}}}],["95",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["960px",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["abstract",{"_index":1361,"title":{},"body":{"classes/Utils.html":{}}}],["accedi",{"_index":789,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["access",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/NotAuthorizedPageComponent.html":{}}}],["account",{"_index":792,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["action",{"_index":1024,"title":{},"body":{"components/StopCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["actions",{"_index":495,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["activated",{"_index":585,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["activatedroute",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":99,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["actually",{"_index":1023,"title":{},"body":{"components/StopCardComponent.html":{}}}],["add",{"_index":725,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"index.html":{}}}],["additional",{"_index":584,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["administrator",{"_index":17,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/TourPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["administrator/you",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["administratordelete",{"_index":1085,"title":{},"body":{"components/TourPageComponent.html":{}}}],["administratorpagecomponent",{"_index":1,"title":{"components/AdministratorPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administrators",{"_index":1222,"title":{},"body":{"injectables/TourService.html":{}}}],["afteraction",{"_index":1086,"title":{},"body":{"components/TourPageComponent.html":{}}}],["aliases",{"_index":1501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":642,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["allowed",{"_index":496,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["allows",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["already",{"_index":589,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["altre",{"_index":1043,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["amministratore",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["angular",{"_index":1453,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/layout",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{}}}],["angular/common",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["angular/common/locales/it",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["angular/material/form",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["angular/material/toolbar",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{},"dependencies.html":{}}}],["annulla",{"_index":857,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["another",{"_index":598,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["api",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":70,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["app.component",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":69,"title":{"components/AppComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["appends",{"_index":736,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["application",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approssimativa",{"_index":976,"title":{},"body":{"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["approssimativo",{"_index":1170,"title":{},"body":{"components/TourPageComponent.html":{}}}],["approutingmodule",{"_index":271,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approxcost",{"_index":488,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["approxduration",{"_index":489,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["arrivato",{"_index":873,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["artifacts",{"_index":1470,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1283,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["authentication",{"_index":745,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["authguard",{"_index":405,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":483,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["authorized",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/NotAuthorizedPageComponent.html":{},"coverage.html":{}}}],["authorized/not",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotAuthorizedPageComponent.html":{},"coverage.html":{}}}],["auto",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":1463,"title":{},"body":{"index.html":{}}}],["autorizzato",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["available",{"_index":661,"title":{},"body":{"injectables/ConversationService.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"modules.html":{}}}],["availableactions",{"_index":1233,"title":{},"body":{"injectables/TourService.html":{}}}],["avoid",{"_index":549,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["backend",{"_index":563,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["bar",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["base64",{"_index":1306,"title":{},"body":{"injectables/UserService.html":{}}}],["basis",{"_index":731,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["being",{"_index":566,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/StarRatingComponent.html":{}}}],["between",{"_index":517,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{}}}],["boolean",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["bootstrap",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":912,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["breakpointobserver",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["breakpoints",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["browse",{"_index":1495,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1469,"title":{},"body":{"index.html":{}}}],["builds",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["c",{"_index":626,"title":{},"body":{"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/TourPageComponent.html":{}}}],["c.id",{"_index":1147,"title":{},"body":{"components/TourPageComponent.html":{}}}],["call",{"_index":599,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["called",{"_index":1003,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["canactivate",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1487,"title":{},"body":{"index.html":{}}}],["card",{"_index":726,"title":{},"body":{"components/GuidePageComponent.html":{},"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["card'},{'name",{"_index":83,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["card.component",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":903,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["card.component.scss",{"_index":902,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["card.component.ts",{"_index":901,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":905,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{}}}],["card.component.ts:16",{"_index":1069,"title":{},"body":{"components/TourCardComponent.html":{}}}],["card.component.ts:20",{"_index":1027,"title":{},"body":{"components/StopCardComponent.html":{}}}],["card.component.ts:26",{"_index":1022,"title":{},"body":{"components/StopCardComponent.html":{}}}],["card.component.ts:28",{"_index":1029,"title":{},"body":{"components/StopCardComponent.html":{}}}],["card.component.ts:29",{"_index":1028,"title":{},"body":{"components/StopCardComponent.html":{}}}],["card/review",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/ReviewCardComponent.html":{},"coverage.html":{}}}],["card/tour",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{},"coverage.html":{}}}],["caricamento",{"_index":855,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["case",{"_index":1281,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["castedvalue",{"_index":1365,"title":{},"body":{"classes/Utils.html":{}}}],["castedvalue[key",{"_index":1367,"title":{},"body":{"classes/Utils.html":{}}}],["casting",{"_index":1354,"title":{},"body":{"classes/Utils.html":{}}}],["catcherror",{"_index":707,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(err",{"_index":709,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/GuidePageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["centro",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["cerca",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{}}}],["change",{"_index":1464,"title":{},"body":{"index.html":{}}}],["changes",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["character",{"_index":775,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["chat",{"_index":802,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["check",{"_index":600,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{},"index.html":{}}}],["checked",{"_index":1350,"title":{},"body":{"classes/Utils.html":{}}}],["checking",{"_index":772,"title":{},"body":{"components/LoginPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{}}}],["checks",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{}}}],["children",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chips",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["choice",{"_index":1483,"title":{},"body":{"index.html":{}}}],["ci",{"_index":853,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["ciao",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["cities",{"_index":1211,"title":{},"body":{"injectables/TourService.html":{}}}],["citt",{"_index":973,"title":{},"body":{"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["city",{"_index":465,"title":{"interfaces/City.html":{}},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["city.name",{"_index":974,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cityid",{"_index":1256,"title":{},"body":{"injectables/TourService.html":{}}}],["cityoptions",{"_index":942,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["class",{"_index":54,"title":{"classes/Utils.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1337,"title":{},"body":{"classes/Utils.html":{}}}],["clear",{"_index":621,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["cli",{"_index":1454,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/StarRatingComponent.html":{}}}],["clicks",{"_index":1009,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["client",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":692,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/StarRatingComponent.html":{},"index.html":{}}}],["cognome",{"_index":877,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["color",{"_index":640,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["come",{"_index":1035,"title":{},"body":{"components/StopCardComponent.html":{},"components/TourPageComponent.html":{}}}],["coming",{"_index":588,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["command",{"_index":1484,"title":{},"body":{"index.html":{}}}],["common",{"_index":1339,"title":{},"body":{"classes/Utils.html":{}}}],["complessivi",{"_index":1167,"title":{},"body":{"components/TourPageComponent.html":{}}}],["completati",{"_index":1277,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["completato",{"_index":1153,"title":{},"body":{"components/TourPageComponent.html":{}}}],["completed",{"_index":507,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{}}}],["completedtours",{"_index":1268,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["completedtours.length",{"_index":1278,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["completes",{"_index":1206,"title":{},"body":{"injectables/TourService.html":{}}}],["component",{"_index":0,"title":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":67,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"overview.html":{}}}],["components/problems",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"components/TourPageComponent.html":{}}}],["components/report",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["components/review",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["components/star",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tour",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":803,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["condivisi",{"_index":1275,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["const",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/HeadersInterceptor.html":{},"components/TourPageComponent.html":{},"classes/Utils.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor(breakpointobserver",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(dialogref",{"_index":826,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["constructor(fb",{"_index":752,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["constructor(http",{"_index":655,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":55,"title":{},"body":{"components/AdministratorPageComponent.html":{},"guards/AuthGuard.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/MessagesCenterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":542,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["constructor(router",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/TourPageComponent.html":{}}}],["constructor(tourservice",{"_index":34,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/GuidePageComponent.html":{},"components/SearchPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["constructor(userservice",{"_index":738,"title":{},"body":{"interceptors/HeadersInterceptor.html":{},"components/MessagesCenterPageComponent.html":{}}}],["contacted",{"_index":568,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["container",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ReviewCardComponent.html":{}}}],["contains",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["content",{"_index":528,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/TourPageComponent.html":{}}}],["controls",{"_index":1348,"title":{},"body":{"classes/Utils.html":{}}}],["controls[name].invalid",{"_index":1363,"title":{},"body":{"classes/Utils.html":{}}}],["conv.guide.firstname",{"_index":807,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["conv.guide.lastname",{"_index":808,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["conv.tourist.firstname",{"_index":809,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["conv.tourist.lastname",{"_index":810,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["conversation",{"_index":425,"title":{"interfaces/Conversation.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["conversation.guide.firstname",{"_index":632,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["conversation.tourist.firstname",{"_index":633,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["conversation/all",{"_index":681,"title":{},"body":{"injectables/ConversationService.html":{}}}],["conversation/message",{"_index":686,"title":{},"body":{"injectables/ConversationService.html":{}}}],["conversationdto",{"_index":526,"title":{"interfaces/ConversationDTO.html":{}},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"coverage.html":{}}}],["conversationid",{"_index":534,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{}}}],["conversationpagecomponent",{"_index":72,"title":{"components/ConversationPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conversations",{"_index":664,"title":{},"body":{"injectables/ConversationService.html":{},"components/MessagesCenterPageComponent.html":{}}}],["conversationservice",{"_index":543,"title":{"injectables/ConversationService.html":{}},"body":{"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["conversazione",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{}}}],["convs.length",{"_index":806,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["correct",{"_index":1316,"title":{},"body":{"injectables/UserService.html":{}}}],["corresponds",{"_index":1284,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["corso",{"_index":856,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["cost",{"_index":1011,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["costo",{"_index":1040,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["counterpart",{"_index":668,"title":{},"body":{"injectables/ConversationService.html":{}}}],["coverage",{"_index":1368,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/StopEditorDialogComponent.html":{}}}],["create",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["createconversation",{"_index":651,"title":{},"body":{"injectables/ConversationService.html":{}}}],["createconversation(c",{"_index":659,"title":{},"body":{"injectables/ConversationService.html":{}}}],["created",{"_index":662,"title":{},"body":{"injectables/ConversationService.html":{},"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["createdtours",{"_index":717,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["createdtours.length",{"_index":724,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["createreport",{"_index":500,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["createreport(tourid",{"_index":1192,"title":{},"body":{"injectables/TourService.html":{}}}],["createreview",{"_index":1178,"title":{},"body":{"injectables/TourService.html":{}}}],["createreview(tourid",{"_index":1196,"title":{},"body":{"injectables/TourService.html":{}}}],["createtour",{"_index":1179,"title":{},"body":{"injectables/TourService.html":{}}}],["createtour(t",{"_index":1198,"title":{},"body":{"injectables/TourService.html":{}}}],["creati",{"_index":721,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["creating",{"_index":523,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/ReportDTO.html":{},"interfaces/ReviewDTO.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/TagDTO.html":{},"interfaces/TourDTO.html":{}}}],["creationdate",{"_index":490,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["creationguideid",{"_index":537,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["creator",{"_index":1205,"title":{},"body":{"injectables/TourService.html":{}}}],["credentials",{"_index":1312,"title":{},"body":{"injectables/UserService.html":{}}}],["criteria",{"_index":956,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TourService.html":{}}}],["cura",{"_index":1163,"title":{},"body":{"components/TourPageComponent.html":{}}}],["currency",{"_index":1032,"title":{},"body":{"components/StopCardComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["current",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConversationService.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":729,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["d9fdd3",{"_index":641,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["da",{"_index":722,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["dagli",{"_index":59,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["data",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["data.approxcost",{"_index":1074,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.approxduration",{"_index":1071,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.author.firstname",{"_index":906,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/TourCardComponent.html":{}}}],["data.author.lastname",{"_index":907,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/TourCardComponent.html":{}}}],["data.city.name",{"_index":1070,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.cost",{"_index":1031,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.description",{"_index":910,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StopCardComponent.html":{}}}],["data.duration",{"_index":1034,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.markedascompletedcount",{"_index":1079,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.reviews.length",{"_index":1076,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.stops.length",{"_index":1072,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.theme.name",{"_index":1075,"title":{},"body":{"components/TourCardComponent.html":{}}}],["data.timestamp",{"_index":908,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["data.title",{"_index":1030,"title":{},"body":{"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["data.transfercost",{"_index":1041,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.transferdetails",{"_index":1037,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.transferduration",{"_index":1042,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.transferotheroptions",{"_index":1045,"title":{},"body":{"components/StopCardComponent.html":{}}}],["data.transfertype",{"_index":1039,"title":{},"body":{"components/StopCardComponent.html":{}}}],["date",{"_index":491,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["date:'medium",{"_index":909,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["date:\\'medium",{"_index":923,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["declarations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["default",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["default_currency_code",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["del",{"_index":1446,"title":{},"body":{"index.html":{}}}],["deletable",{"_index":1018,"title":{},"body":{"components/StopCardComponent.html":{}}}],["delete",{"_index":509,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["delete(tourid",{"_index":1201,"title":{},"body":{"injectables/TourService.html":{}}}],["deleteclick",{"_index":1019,"title":{},"body":{"components/StopCardComponent.html":{}}}],["deleted",{"_index":1118,"title":{},"body":{"components/TourPageComponent.html":{}}}],["deletes",{"_index":1203,"title":{},"body":{"injectables/TourService.html":{}}}],["deletion",{"_index":842,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["dependencies",{"_index":261,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["descrizione",{"_index":940,"title":{},"body":{"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["destroyed",{"_index":548,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["details",{"_index":1084,"title":{},"body":{"components/TourPageComponent.html":{}}}],["dettagli",{"_index":1061,"title":{},"body":{"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["dev",{"_index":1461,"title":{},"body":{"index.html":{}}}],["development",{"_index":1457,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":848,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"index.html":{}}}],["dialog",{"_index":820,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["dialog.component",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"components/TourPageComponent.html":{}}}],["dialog.component.html",{"_index":823,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":822,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":819,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":883,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":927,"title":{},"body":{"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":828,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":889,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":929,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":830,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1048,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":932,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":831,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":886,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1052,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":832,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1050,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":928,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1051,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":931,"title":{},"body":{"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["dialog/problems",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemsDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["dialog/report",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"components/ReportDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["dialog/review",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"components/ReviewDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["dialog/tour",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/StopEditorDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":829,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["dialogref.afterclosed().subscribe(description",{"_index":1125,"title":{},"body":{"components/TourPageComponent.html":{}}}],["dialogref.afterclosed().subscribe(isdelete",{"_index":1155,"title":{},"body":{"components/TourPageComponent.html":{}}}],["dialogref.afterclosed().subscribe(review",{"_index":1134,"title":{},"body":{"components/TourPageComponent.html":{}}}],["dialogservice",{"_index":1093,"title":{},"body":{"components/TourPageComponent.html":{}}}],["direction",{"_index":529,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/ReviewCardComponent.html":{}}}],["directive",{"_index":65,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["directives",{"_index":98,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1468,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1473,"title":{},"body":{"index.html":{}}}],["display",{"_index":596,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["displayed",{"_index":1006,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["displaying",{"_index":812,"title":{},"body":{"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ReviewCardComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["displays",{"_index":693,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["dist",{"_index":1472,"title":{},"body":{"index.html":{}}}],["document.activeelement",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":669,"title":{},"body":{"injectables/ConversationService.html":{},"components/NotAuthorizedPageComponent.html":{},"components/TourPageComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["done",{"_index":1160,"title":{},"body":{"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["dots",{"_index":766,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["dragdropmodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["drawer",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["drop",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":469,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["dtos/conversation",{"_index":679,"title":{},"body":{"injectables/ConversationService.html":{}}}],["dtos/tour",{"_index":835,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["dtos/user",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["durata",{"_index":975,"title":{},"body":{"components/SearchPageComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["duration",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["dynamic",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1481,"title":{},"body":{"index.html":{}}}],["each",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/StarRatingComponent.html":{}}}],["eager",{"_index":482,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["edit",{"_index":508,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["editable",{"_index":992,"title":{},"body":{"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{}}}],["editclick",{"_index":1020,"title":{},"body":{"components/StopCardComponent.html":{}}}],["edited",{"_index":1209,"title":{},"body":{"injectables/TourService.html":{}}}],["editing",{"_index":1046,"title":{},"body":{"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/TourDTO.html":{}}}],["editor",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/StopEditorDialogComponent.html":{},"coverage.html":{}}}],["edittour",{"_index":1180,"title":{},"body":{"injectables/TourService.html":{}}}],["edittour(tourid",{"_index":1207,"title":{},"body":{"injectables/TourService.html":{}}}],["element",{"_index":64,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["elimina",{"_index":858,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["eliminato",{"_index":1120,"title":{},"body":{"components/TourPageComponent.html":{}}}],["ellipsis",{"_index":919,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["emit",{"_index":1025,"title":{},"body":{"components/StopCardComponent.html":{}}}],["empty",{"_index":615,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["end",{"_index":645,"title":{},"body":{"components/ConversationPageComponent.html":{},"index.html":{}}}],["enter",{"_index":555,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{}}}],["entities",{"_index":474,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["entity",{"_index":481,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["enum",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1439,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":677,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err.error.message",{"_index":713,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":690,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":272,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["eur",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["event",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":998,"title":{},"body":{"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{}}}],["eventually",{"_index":667,"title":{},"body":{"injectables/ConversationService.html":{}}}],["evviva",{"_index":852,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["excluding",{"_index":1355,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/typealiases.html":{}}}],["execute",{"_index":1478,"title":{},"body":{"index.html":{}}}],["exist",{"_index":670,"title":{},"body":{"injectables/ConversationService.html":{},"components/TourPageComponent.html":{}}}],["existing",{"_index":532,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/NotFoundPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["exists",{"_index":1141,"title":{},"body":{"components/TourPageComponent.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["exports",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":1292,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["extract",{"_index":1251,"title":{},"body":{"injectables/TourService.html":{}}}],["extracted",{"_index":475,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["extras",{"_index":1145,"title":{},"body":{"components/TourPageComponent.html":{}}}],["fab",{"_index":1096,"title":{},"body":{"components/TourPageComponent.html":{}}}],["false",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":755,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["features",{"_index":649,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["feedback",{"_index":1161,"title":{},"body":{"components/TourPageComponent.html":{}}}],["field",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"components/SearchPageComponent.html":{}}}],["fields",{"_index":514,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["files",{"_index":1465,"title":{},"body":{"index.html":{}}}],["filter",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["filter((route",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(event",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(id",{"_index":606,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["filtri",{"_index":983,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["finale",{"_index":1444,"title":{},"body":{"index.html":{}}}],["findinvalidcontrols",{"_index":1342,"title":{},"body":{"classes/Utils.html":{}}}],["findinvalidcontrols(form",{"_index":1344,"title":{},"body":{"classes/Utils.html":{}}}],["finds",{"_index":1346,"title":{},"body":{"classes/Utils.html":{}}}],["first",{"_index":567,"title":{},"body":{"components/ConversationPageComponent.html":{},"index.html":{}}}],["firstname",{"_index":863,"title":{},"body":{"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["flag",{"_index":1159,"title":{},"body":{"components/TourPageComponent.html":{}}}],["flex",{"_index":644,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/ReviewCardComponent.html":{},"components/TourPageComponent.html":{}}}],["focus",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["forkjoin",{"_index":1107,"title":{},"body":{"components/TourPageComponent.html":{}}}],["forkjoin([this.tourservice.getbyid(tourid",{"_index":1111,"title":{},"body":{"components/TourPageComponent.html":{}}}],["form",{"_index":480,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"classes/Utils.html":{}}}],["form.controls",{"_index":1362,"title":{},"body":{"classes/Utils.html":{}}}],["format",{"_index":1307,"title":{},"body":{"injectables/UserService.html":{}}}],["formbuilder",{"_index":753,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["formcontrol",{"_index":960,"title":{},"body":{"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["formcontrol(null",{"_index":953,"title":{},"body":{"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["formgroup",{"_index":952,"title":{},"body":{"components/SearchPageComponent.html":{},"classes/Utils.html":{}}}],["formsmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["full",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["functions",{"_index":1340,"title":{},"body":{"classes/Utils.html":{}}}],["further",{"_index":1488,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1467,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1452,"title":{},"body":{"index.html":{}}}],["getall",{"_index":652,"title":{},"body":{"injectables/ConversationService.html":{}}}],["getallbyrole",{"_index":1294,"title":{},"body":{"injectables/UserService.html":{}}}],["getallbyrole(r",{"_index":1299,"title":{},"body":{"injectables/UserService.html":{}}}],["getallcities",{"_index":1181,"title":{},"body":{"injectables/TourService.html":{}}}],["getalltags",{"_index":1182,"title":{},"body":{"injectables/TourService.html":{}}}],["getallthemes",{"_index":1183,"title":{},"body":{"injectables/TourService.html":{}}}],["getavailableactions",{"_index":1184,"title":{},"body":{"injectables/TourService.html":{}}}],["getavailableactions(tourid",{"_index":1215,"title":{},"body":{"injectables/TourService.html":{}}}],["getbyguide",{"_index":653,"title":{},"body":{"injectables/ConversationService.html":{}}}],["getbyguide(guideid",{"_index":665,"title":{},"body":{"injectables/ConversationService.html":{}}}],["getbyid",{"_index":654,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{}}}],["getbyid(conversationid",{"_index":671,"title":{},"body":{"injectables/ConversationService.html":{}}}],["getbyid(tourid",{"_index":1217,"title":{},"body":{"injectables/TourService.html":{}}}],["getcompletedtours",{"_index":1185,"title":{},"body":{"injectables/TourService.html":{}}}],["getcreatedtours",{"_index":1186,"title":{},"body":{"injectables/TourService.html":{}}}],["geticon",{"_index":990,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["geticon(i",{"_index":1000,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["getreportedtours",{"_index":1187,"title":{},"body":{"injectables/TourService.html":{}}}],["getreports",{"_index":1188,"title":{},"body":{"injectables/TourService.html":{}}}],["getreports(tourid",{"_index":1223,"title":{},"body":{"injectables/TourService.html":{}}}],["getsession",{"_index":1295,"title":{},"body":{"injectables/UserService.html":{}}}],["getsessionrole",{"_index":1296,"title":{},"body":{"injectables/UserService.html":{}}}],["getsharedtourists",{"_index":1189,"title":{},"body":{"injectables/TourService.html":{}}}],["getsharedtourists(tourid",{"_index":1225,"title":{},"body":{"injectables/TourService.html":{}}}],["getsharedtours",{"_index":1190,"title":{},"body":{"injectables/TourService.html":{}}}],["getting",{"_index":1441,"title":{"index.html":{}},"body":{}}],["gi",{"_index":878,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["given",{"_index":498,"title":{},"body":{"interfaces/City.html":{},"injectables/ConversationService.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["go",{"_index":1491,"title":{},"body":{"index.html":{}}}],["goconversation",{"_index":1087,"title":{},"body":{"components/TourPageComponent.html":{}}}],["goedit",{"_index":1088,"title":{},"body":{"components/TourPageComponent.html":{}}}],["graph",{"_index":1496,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":437,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guida",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/RegisterPageComponent.html":{}}}],["guide",{"_index":519,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/GuidePageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["guide/you",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guideid",{"_index":527,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/TourPageComponent.html":{}}}],["guidepagecomponent",{"_index":73,"title":{"components/GuidePageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guides",{"_index":1204,"title":{},"body":{"injectables/TourService.html":{}}}],["hai",{"_index":790,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["hamburger",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["handles",{"_index":648,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":737,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["headersinterceptor",{"_index":273,"title":{"interceptors/HeadersInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HeadersInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["help",{"_index":1489,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":918,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["hidepass",{"_index":749,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["home",{"_index":782,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["html",{"_index":63,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["htmlelement).blur",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":658,"title":{},"body":{"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1462,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":656,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":704,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["httphandler",{"_index":702,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["httpinterceptor",{"_index":705,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["httpparams",{"_index":676,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{}}}],["httpparams().append('conversationid",{"_index":683,"title":{},"body":{"injectables/ConversationService.html":{}}}],["httpparams().append('guideid",{"_index":684,"title":{},"body":{"injectables/ConversationService.html":{}}}],["httprequest",{"_index":700,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["httpstatuscode",{"_index":706,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpstatuscode.unauthorized",{"_index":711,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["i+1",{"_index":847,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["icon",{"_index":1005,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["id",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/HeadersInterceptor.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["id/edit",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["identifier",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1254,"title":{},"body":{"injectables/TourService.html":{}}}],["if(!routerole",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(!this.form.valid",{"_index":869,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["if(c",{"_index":1142,"title":{},"body":{"components/TourPageComponent.html":{}}}],["if(description",{"_index":1126,"title":{},"body":{"components/TourPageComponent.html":{}}}],["if(err.status",{"_index":710,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["if(isdelete",{"_index":1156,"title":{},"body":{"components/TourPageComponent.html":{}}}],["if(key.code",{"_index":893,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["if(loggeduser",{"_index":742,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["if(loggeduserrole",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(review",{"_index":1135,"title":{},"body":{"components/TourPageComponent.html":{}}}],["if(state['guideid",{"_index":590,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["if(this.conversation",{"_index":601,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["if(this.creationguideid",{"_index":623,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["if(this.description",{"_index":890,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["if(this.drawer.mode",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.form.valid",{"_index":935,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["if(this.newmessage",{"_index":613,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["if(this.savedstop",{"_index":1053,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["if(this.searchform.valid",{"_index":970,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["implements",{"_index":21,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"index.html":{}}}],["import",{"_index":47,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["imports",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incoming",{"_index":576,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["information",{"_index":1323,"title":{},"body":{"injectables/UserService.html":{}}}],["ingegneria",{"_index":1445,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["inizia",{"_index":639,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["inject",{"_index":833,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":836,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["injectable",{"_index":451,"title":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":646,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":573,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{}}}],["inputs",{"_index":904,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["insensitive",{"_index":1282,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["inserted",{"_index":1127,"title":{},"body":{"components/TourPageComponent.html":{}}}],["instanceof",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["interacton",{"_index":1026,"title":{},"body":{"components/StopCardComponent.html":{}}}],["intercept",{"_index":695,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["intercept(request",{"_index":699,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["interceptor",{"_index":687,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":688,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/headers.interceptor",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":464,"title":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"coverage.html":{}}}],["interfaces",{"_index":466,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"overview.html":{}}}],["interval",{"_index":580,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["interval(5000).pipe",{"_index":628,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["invalid",{"_index":1347,"title":{},"body":{"classes/Utils.html":{}}}],["invalid.push(name",{"_index":1364,"title":{},"body":{"classes/Utils.html":{}}}],["invia",{"_index":898,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["inviata",{"_index":1131,"title":{},"body":{"components/TourPageComponent.html":{}}}],["ishandset",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["islogged",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["ispublic",{"_index":484,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["items",{"_index":727,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["json.parse(window.atob(u",{"_index":1334,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":728,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["karma",{"_index":1480,"title":{},"body":{"index.html":{}}}],["key",{"_index":888,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"classes/Utils.html":{}}}],["key.preventdefault",{"_index":894,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["keyboardevent",{"_index":885,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["keyof",{"_index":1359,"title":{},"body":{"classes/Utils.html":{}}}],["keypress",{"_index":882,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["keypress(key",{"_index":884,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["la",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{}}}],["label",{"_index":911,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["lastname",{"_index":864,"title":{},"body":{"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["layoutmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["lazy",{"_index":476,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["le",{"_index":804,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["leaks",{"_index":551,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["legend",{"_index":62,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"overview.html":{}}}],["list",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TourService.html":{}}}],["loaded",{"_index":557,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["local",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locale",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["locale_id",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["localeit",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":1311,"title":{},"body":{"injectables/UserService.html":{}}}],["logged",{"_index":15,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{}}}],["logged.firstname",{"_index":785,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loggeduser",{"_index":741,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["loggeduser.id.tostring",{"_index":746,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["loggeduserrole",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logging",{"_index":1286,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["login",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"injectables/UserService.html":{}}}],["login(u",{"_index":1309,"title":{},"body":{"injectables/UserService.html":{}}}],["loginpagecomponent",{"_index":74,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["m",{"_index":675,"title":{},"body":{"injectables/ConversationService.html":{}}}],["m.content",{"_index":636,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["m.direction",{"_index":631,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["m.timestamp",{"_index":634,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["main",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["map",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["map((param",{"_index":604,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["map(conversationid",{"_index":607,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["map(result",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["map(tourid",{"_index":1108,"title":{},"body":{"components/TourPageComponent.html":{}}}],["mapped",{"_index":1255,"title":{},"body":{"injectables/TourService.html":{}}}],["mapped.city",{"_index":1262,"title":{},"body":{"injectables/TourService.html":{}}}],["mapped.sharedtourists",{"_index":1264,"title":{},"body":{"injectables/TourService.html":{}}}],["mapped.theme",{"_index":1263,"title":{},"body":{"injectables/TourService.html":{}}}],["margin",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ReviewCardComponent.html":{}}}],["mark",{"_index":506,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["markascompleted",{"_index":505,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["markascompleted(tourid",{"_index":1229,"title":{},"body":{"injectables/TourService.html":{}}}],["markcompleted",{"_index":1089,"title":{},"body":{"components/TourPageComponent.html":{}}}],["marked",{"_index":1151,"title":{},"body":{"components/TourPageComponent.html":{},"injectables/TourService.html":{}}}],["markedascompletedcount",{"_index":494,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["massima",{"_index":977,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mat",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":834,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["mat_dialog_default_options",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["mat_form_field_default_options",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["mat_snack_bar_default_options",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TourService.html":{}}}],["matching",{"_index":101,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1094,"title":{},"body":{"components/TourPageComponent.html":{}}}],["matdialogmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":827,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["matdrawer",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["material",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":697,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["matsnackbarmodule",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["media",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["medium",{"_index":635,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["memory",{"_index":550,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["menu",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["mergemap((route",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap(conversationid",{"_index":609,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["message",{"_index":504,"title":{"interfaces/Message.html":{}},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"coverage.html":{}}}],["messagedto",{"_index":533,"title":{"interfaces/MessageDTO.html":{}},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"coverage.html":{}}}],["messages",{"_index":521,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{}}}],["messagescenterpagecomponent",{"_index":75,"title":{"components/MessagesCenterPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messageservice",{"_index":795,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["messaggi",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["metadata",{"_index":23,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["method",{"_index":1002,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["milano",{"_index":1450,"title":{},"body":{"index.html":{}}}],["min",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1438,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["modifica",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module",{"_index":258,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1490,"title":{},"body":{"index.html":{}}}],["motivazione",{"_index":897,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["multi",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":954,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"index.html":{}}}],["names",{"_index":1349,"title":{},"body":{"classes/Utils.html":{}}}],["navigate",{"_index":1143,"title":{},"body":{"components/TourPageComponent.html":{},"index.html":{}}}],["navigated",{"_index":816,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["navigationend",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1485,"title":{},"body":{"index.html":{}}}],["needed",{"_index":577,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["nested",{"_index":1252,"title":{},"body":{"injectables/TourService.html":{}}}],["new",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/GuidePageComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"coverage.html":{},"index.html":{}}}],["newmessage",{"_index":538,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["next",{"_index":701,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{}}}],["next.handle(request",{"_index":747,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":708,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1459,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":540,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["nome",{"_index":876,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["non",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["nonemptyfields",{"_index":1357,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/typealiases.html":{}}}],["nonemptyfieldsof",{"_index":1343,"title":{},"body":{"classes/Utils.html":{}}}],["nonemptyfieldsof(obj",{"_index":1351,"title":{},"body":{"classes/Utils.html":{}}}],["nonnullable",{"_index":1360,"title":{},"body":{"classes/Utils.html":{}}}],["nonwhitespaceregex",{"_index":750,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["noreports",{"_index":845,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["notauthorizedpagecomponent",{"_index":76,"title":{"components/NotAuthorizedPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":524,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{}}}],["notfoundpagecomponent",{"_index":77,"title":{"components/NotFoundPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notify",{"_index":696,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["nowrap",{"_index":916,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["null",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/HeadersInterceptor.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"miscellaneous/typealiases.html":{}}}],["nulla",{"_index":638,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["number",{"_index":468,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["number(conversationid",{"_index":608,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["number.parseint(tourid",{"_index":1109,"title":{},"body":{"components/TourPageComponent.html":{}}}],["nuova",{"_index":896,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["obj",{"_index":1356,"title":{},"body":{"classes/Utils.html":{}}}],["object",{"_index":1353,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(obj).foreach(([key",{"_index":1366,"title":{},"body":{"classes/Utils.html":{}}}],["objects",{"_index":1253,"title":{},"body":{"injectables/TourService.html":{}}}],["observable",{"_index":46,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{}}}],["of(err",{"_index":715,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["oncancel",{"_index":824,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["onclick",{"_index":991,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["onclick(i",{"_index":1007,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["one",{"_index":773,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["ones",{"_index":536,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["onrouteclick",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["onstarchange",{"_index":926,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["onstarchange(stars",{"_index":930,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["onsubmit",{"_index":825,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["openproblemsmodal",{"_index":1090,"title":{},"body":{"components/TourPageComponent.html":{}}}],["openreportmodal",{"_index":1091,"title":{},"body":{"components/TourPageComponent.html":{}}}],["openreviewmodal",{"_index":1092,"title":{},"body":{"components/TourPageComponent.html":{}}}],["option",{"_index":951,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["options",{"_index":963,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["opzioni",{"_index":1044,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["order",{"_index":597,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["otherwise",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["out",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["output",{"_index":1010,"title":{},"body":{"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{}}}],["outputs",{"_index":993,"title":{},"body":{"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{}}}],["over",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":917,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["overview",{"_index":1492,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1358,"title":{},"body":{"classes/Utils.html":{}}}],["package",{"_index":1426,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":14,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SearchPageComponent.html":{},"components/StopCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":87,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["page.component",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{}}}],["page.component.html",{"_index":27,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["page.component.scss",{"_index":25,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["page.component.ts",{"_index":12,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:103",{"_index":553,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:107",{"_index":1105,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:124",{"_index":1100,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:127",{"_index":556,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:136",{"_index":545,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:140",{"_index":1102,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:155",{"_index":1103,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:16",{"_index":37,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["page.component.ts:166",{"_index":1095,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:18",{"_index":718,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TouristPageComponent.html":{}}}],["page.component.ts:19",{"_index":763,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:20",{"_index":43,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts:22",{"_index":561,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:23",{"_index":1270,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["page.component.ts:24",{"_index":770,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":798,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts:27",{"_index":1106,"title":{},"body":{"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["page.component.ts:28",{"_index":565,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:29",{"_index":762,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:30",{"_index":796,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["page.component.ts:32",{"_index":754,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["page.component.ts:33",{"_index":574,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:34",{"_index":797,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["page.component.ts:35",{"_index":867,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["page.component.ts:37",{"_index":959,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:38",{"_index":578,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:40",{"_index":865,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["page.component.ts:42",{"_index":958,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:43",{"_index":572,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["page.component.ts:44",{"_index":756,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:45",{"_index":861,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["page.component.ts:47",{"_index":948,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:49",{"_index":571,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:51",{"_index":949,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:57",{"_index":862,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["page.component.ts:58",{"_index":544,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["page.component.ts:61",{"_index":950,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:69",{"_index":1098,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:79",{"_index":552,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["page.component.ts:80",{"_index":1101,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page.component.ts:91",{"_index":1104,"title":{},"body":{"components/TourPageComponent.html":{}}}],["page/administrator",{"_index":11,"title":{},"body":{"components/AdministratorPageComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/conversation",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"coverage.html":{}}}],["page/guide",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GuidePageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/messages",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MessagesCenterPageComponent.html":{},"coverage.html":{}}}],["page/not",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["page/register",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchPageComponent.html":{},"components/TourCardComponent.html":{},"coverage.html":{}}}],["page/tour",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["page/tourist",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["pages/administrator",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/conversation",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/guide",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/login",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/messages",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/not",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/register",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/search",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TourCardComponent.html":{}}}],["pages/tour",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["pages/tourist",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagina",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["panelclass",{"_index":714,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["param",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConversationService.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["param.get('id",{"_index":605,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["parammap",{"_index":579,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["params",{"_index":682,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{}}}],["params.append('approxduration",{"_index":1242,"title":{},"body":{"injectables/TourService.html":{}}}],["params.append('cityid",{"_index":1239,"title":{},"body":{"injectables/TourService.html":{}}}],["params.append('themeid",{"_index":1244,"title":{},"body":{"injectables/TourService.html":{}}}],["params.appendall({'tagids",{"_index":1247,"title":{},"body":{"injectables/TourService.html":{}}}],["passing",{"_index":1144,"title":{},"body":{"components/TourPageComponent.html":{}}}],["password",{"_index":761,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["path",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":1064,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["percorso",{"_index":1078,"title":{},"body":{"components/TourCardComponent.html":{}}}],["perform",{"_index":497,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["personal",{"_index":1322,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["plain",{"_index":767,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["platform",{"_index":1482,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":730,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TourPageComponent.html":{}}}],["politecnico",{"_index":1449,"title":{},"body":{"index.html":{}}}],["polling",{"_index":547,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["populate",{"_index":1055,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["position",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":477,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["pre",{"_index":1148,"title":{},"body":{"components/TourPageComponent.html":{}}}],["precede",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["present",{"_index":587,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["pressed",{"_index":554,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{}}}],["presses",{"_index":887,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["presso",{"_index":1448,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":922,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["primary",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["problems",{"_index":821,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["problemsdialogcomponent",{"_index":78,"title":{"components/ProblemsDialogComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1451,"title":{},"body":{"index.html":{}}}],["promise",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":29,"title":{"properties.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"classes/Utils.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["prospective",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prova",{"_index":1443,"title":{},"body":{"index.html":{}}}],["provide",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":650,"title":{},"body":{"injectables/ConversationService.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["qui",{"_index":637,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["r",{"_index":1193,"title":{},"body":{"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["r.author.firstname",{"_index":849,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["r.author.lastname",{"_index":850,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["r.description",{"_index":851,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["raggiungerla",{"_index":1036,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["rating",{"_index":920,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/StarRatingComponent.html":{}}}],["rating'},{'name",{"_index":90,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["rating.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["rating.component.html",{"_index":989,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.scss",{"_index":988,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.ts",{"_index":987,"title":{},"body":{"components/StarRatingComponent.html":{},"coverage.html":{}}}],["rating.component.ts:13",{"_index":997,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.ts:14",{"_index":999,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.ts:20",{"_index":995,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.ts:27",{"_index":1001,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating.component.ts:35",{"_index":1008,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["rating/star",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/StarRatingComponent.html":{},"coverage.html":{}}}],["re",{"_index":1066,"title":{},"body":{"interfaces/TagDTO.html":{}}}],["reactiveformsmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["reason",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["received",{"_index":479,"title":{},"body":{"interfaces/City.html":{},"components/NotAuthorizedPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"components/TouristPageComponent.html":{}}}],["recensione",{"_index":938,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["recensioni",{"_index":1077,"title":{},"body":{"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["recieved",{"_index":522,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{}}}],["redirect",{"_index":781,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["redirected",{"_index":813,"title":{},"body":{"components/NotAuthorizedPageComponent.html":{}}}],["redirects",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["redirectto",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"index.html":{}}}],["refresh",{"_index":1097,"title":{},"body":{"components/TourPageComponent.html":{}}}],["regex",{"_index":771,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["register",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["register(u",{"_index":1319,"title":{},"body":{"injectables/UserService.html":{}}}],["registered",{"_index":872,"title":{},"body":{"components/RegisterPageComponent.html":{},"injectables/UserService.html":{}}}],["registered.firstname",{"_index":874,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["registering",{"_index":1289,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["registerlocaledata",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localeit",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["registerpagecomponent",{"_index":79,"title":{"components/RegisterPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":1321,"title":{},"body":{"injectables/UserService.html":{}}}],["registrati",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterPageComponent.html":{}}}],["registration",{"_index":866,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["reload",{"_index":620,"title":{},"body":{"components/ConversationPageComponent.html":{},"index.html":{}}}],["remove",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["removed",{"_index":472,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["removes",{"_index":1318,"title":{},"body":{"injectables/UserService.html":{}}}],["rendered",{"_index":1004,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["report",{"_index":501,"title":{"interfaces/Report.html":{}},"body":{"interfaces/City.html":{},"components/ProblemsDialogComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["reportdialogcomponent",{"_index":80,"title":{"components/ReportDialogComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reportdto",{"_index":879,"title":{"interfaces/ReportDTO.html":{}},"body":{"interfaces/ReportDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["reported",{"_index":20,"title":{},"body":{"components/AdministratorPageComponent.html":{},"injectables/TourService.html":{}}}],["reportedtours",{"_index":30,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["reportedtours.length",{"_index":61,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["reporting",{"_index":881,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["reports",{"_index":512,"title":{},"body":{"interfaces/City.html":{},"components/ProblemsDialogComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["request",{"_index":478,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["request.clone",{"_index":743,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["requested",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/TourPageComponent.html":{},"injectables/UserService.html":{}}}],["requesting",{"_index":841,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["requests",{"_index":735,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["required",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/NotAuthorizedPageComponent.html":{}}}],["reset",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resoconto",{"_index":843,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["response",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["responses",{"_index":691,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["responsive",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["result.matches",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":602,"title":{},"body":{"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/SearchPageComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":562,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{}}}],["retrieves",{"_index":1303,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"classes/Utils.html":{}}}],["review",{"_index":82,"title":{"interfaces/Review.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["review).subscribe((createdreview",{"_index":1137,"title":{},"body":{"components/TourPageComponent.html":{}}}],["reviewcardcomponent",{"_index":81,"title":{"components/ReviewCardComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewdialogcomponent",{"_index":84,"title":{"components/ReviewDialogComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewdto",{"_index":924,"title":{"interfaces/ReviewDTO.html":{}},"body":{"interfaces/ReviewDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["reviewing",{"_index":925,"title":{},"body":{"components/ReviewDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["reviews",{"_index":493,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["rimuovi",{"_index":981,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["risultati",{"_index":984,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["role",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["roles",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["root",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["rootroute",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["rootroute(route",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/TourPageComponent.html":{}}}],["route.data",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["route.data['role",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{}}}],["route.firstchild",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["route.outlet",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["routedata.title",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["routermodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerole",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routerole.indexof(loggeduserrole",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routerstatesnapshot",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":403,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TourPageComponent.html":{},"routes.html":{}}}],["routetitle",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["routing",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["routing.module",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtl",{"_index":913,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["run",{"_index":1458,"title":{},"body":{"index.html":{}}}],["running",{"_index":1474,"title":{},"body":{"index.html":{}}}],["ruolo",{"_index":875,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["rxjs",{"_index":49,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["s",{"_index":769,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/TourService.html":{}}}],["s.approxduration",{"_index":1241,"title":{},"body":{"injectables/TourService.html":{}}}],["s.city",{"_index":1238,"title":{},"body":{"injectables/TourService.html":{}}}],["s.city.id",{"_index":1240,"title":{},"body":{"injectables/TourService.html":{}}}],["s.tags",{"_index":1246,"title":{},"body":{"injectables/TourService.html":{}}}],["s.tags.map(t",{"_index":1248,"title":{},"body":{"injectables/TourService.html":{}}}],["s.theme",{"_index":1243,"title":{},"body":{"injectables/TourService.html":{}}}],["s.theme.id",{"_index":1245,"title":{},"body":{"injectables/TourService.html":{}}}],["salva",{"_index":1058,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["save",{"_index":593,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["saved",{"_index":1056,"title":{},"body":{"components/StopEditorDialogComponent.html":{},"injectables/UserService.html":{}}}],["savedstop",{"_index":1047,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["saves",{"_index":1313,"title":{},"body":{"injectables/UserService.html":{}}}],["savesession",{"_index":1297,"title":{},"body":{"injectables/UserService.html":{}}}],["savesession(u",{"_index":1324,"title":{},"body":{"injectables/UserService.html":{}}}],["scaffolding",{"_index":1466,"title":{},"body":{"index.html":{}}}],["screen",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["search",{"_index":86,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{}}}],["search(s",{"_index":1231,"title":{},"body":{"injectables/TourService.html":{}}}],["searchform",{"_index":943,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["searching",{"_index":513,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["searchpagecomponent",{"_index":85,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchresults",{"_index":944,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["seconds",{"_index":560,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["see",{"_index":520,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["segnalati",{"_index":58,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["segnalazione",{"_index":846,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{}}}],["segnalazioni",{"_index":844,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["segnato",{"_index":1172,"title":{},"body":{"components/TourPageComponent.html":{}}}],["selected",{"_index":868,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["selectedrole",{"_index":860,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["selection",{"_index":955,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["selector",{"_index":68,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["self",{"_index":643,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["send",{"_index":503,"title":{},"body":{"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["sending",{"_index":531,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{}}}],["sendmessage",{"_index":502,"title":{},"body":{"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["sendmessage(m",{"_index":673,"title":{},"body":{"injectables/ConversationService.html":{}}}],["sent",{"_index":470,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["serve",{"_index":1460,"title":{},"body":{"index.html":{}}}],["server",{"_index":814,"title":{},"body":{"components/NotAuthorizedPageComponent.html":{},"index.html":{}}}],["service",{"_index":471,"title":{},"body":{"interfaces/City.html":{},"injectables/ConversationService.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{}}}],["services/user.service",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"interceptors/HeadersInterceptor.html":{}}}],["session",{"_index":1304,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.getitem('logged",{"_index":1333,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.removeitem('logged",{"_index":1330,"title":{},"body":{"injectables/UserService.html":{}}}],["sessionstorage.setitem('logged",{"_index":1331,"title":{},"body":{"injectables/UserService.html":{}}}],["set",{"_index":996,"title":{},"body":{"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/TourPageComponent.html":{}}}],["setheaders",{"_index":744,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["shared",{"_index":1227,"title":{},"body":{"injectables/TourService.html":{},"components/TouristPageComponent.html":{}}}],["sharedtouristids",{"_index":1260,"title":{},"body":{"injectables/TourService.html":{}}}],["sharedtourists",{"_index":1081,"title":{},"body":{"interfaces/TourDTO.html":{}}}],["sharedtours",{"_index":1269,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["sharedtours.length",{"_index":1276,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["sharereplay",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["show",{"_index":779,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["shown",{"_index":765,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["shows",{"_index":18,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/ConversationPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["shrink",{"_index":921,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["sidenav",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{}}}],["snackbar",{"_index":694,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["software",{"_index":1447,"title":{},"body":{"index.html":{}}}],["sono",{"_index":854,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"index.html":{}}}],["space",{"_index":915,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["specify",{"_index":1290,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["spostamento",{"_index":1063,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.public.ts",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.ts",{"_index":1440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../utils.ts",{"_index":1502,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:107",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:97",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/utils",{"_index":962,"title":{},"body":{"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["src/app/classes/utils.ts",{"_index":1338,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/classes/utils.ts:19",{"_index":1345,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/classes/utils.ts:33",{"_index":1352,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/components/problems",{"_index":818,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/report",{"_index":880,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["src/app/components/review",{"_index":900,"title":{},"body":{"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/TourPageComponent.html":{},"coverage.html":{}}}],["src/app/components/star",{"_index":986,"title":{},"body":{"components/StarRatingComponent.html":{},"coverage.html":{}}}],["src/app/components/tour",{"_index":1017,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"coverage.html":{}}}],["src/app/dtos/conversation",{"_index":582,"title":{},"body":{"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["src/app/dtos/conversation.ts",{"_index":516,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"coverage.html":{}}}],["src/app/dtos/tour",{"_index":51,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/GuidePageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/SearchPageComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["src/app/dtos/tour.ts",{"_index":467,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"coverage.html":{}}}],["src/app/dtos/user",{"_index":799,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["src/app/dtos/user.ts",{"_index":1279,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:12",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:16",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/interceptors/error.interceptor.ts",{"_index":689,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/error.interceptor.ts:19",{"_index":698,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/interceptors/error.interceptor.ts:23",{"_index":703,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/interceptors/headers.interceptor.ts",{"_index":734,"title":{},"body":{"interceptors/HeadersInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/headers.interceptor.ts:17",{"_index":739,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["src/app/interceptors/headers.interceptor.ts:21",{"_index":740,"title":{},"body":{"interceptors/HeadersInterceptor.html":{}}}],["src/app/pages/administrator",{"_index":10,"title":{},"body":{"components/AdministratorPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/conversation",{"_index":535,"title":{},"body":{"components/ConversationPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/guide",{"_index":716,"title":{},"body":{"components/GuidePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/login",{"_index":748,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/messages",{"_index":793,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/not",{"_index":811,"title":{},"body":{"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/register",{"_index":859,"title":{},"body":{"components/RegisterPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/search",{"_index":941,"title":{},"body":{"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/tour",{"_index":1083,"title":{},"body":{"components/TourPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/tourist",{"_index":1267,"title":{},"body":{"components/TouristPageComponent.html":{},"coverage.html":{}}}],["src/app/services/conversation.service",{"_index":583,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["src/app/services/conversation.service.ts",{"_index":647,"title":{},"body":{"injectables/ConversationService.html":{},"coverage.html":{}}}],["src/app/services/conversation.service.ts:15",{"_index":657,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/conversation.service.ts:23",{"_index":663,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/conversation.service.ts:32",{"_index":672,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/conversation.service.ts:43",{"_index":666,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/conversation.service.ts:57",{"_index":674,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/conversation.service.ts:67",{"_index":660,"title":{},"body":{"injectables/ConversationService.html":{}}}],["src/app/services/tour.service",{"_index":52,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/GuidePageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["src/app/services/tour.service.ts",{"_index":1177,"title":{},"body":{"injectables/TourService.html":{},"coverage.html":{}}}],["src/app/services/tour.service.ts:112",{"_index":1212,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:120",{"_index":1213,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:128",{"_index":1210,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:139",{"_index":1199,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:14",{"_index":1191,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:160",{"_index":1197,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:171",{"_index":1194,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:183",{"_index":1208,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:203",{"_index":1230,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:213",{"_index":1202,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:23",{"_index":1218,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:32",{"_index":1216,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:40",{"_index":1219,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:48",{"_index":1228,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:58",{"_index":1226,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:67",{"_index":1220,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:76",{"_index":1221,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:85",{"_index":1224,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/tour.service.ts:94",{"_index":1232,"title":{},"body":{"injectables/TourService.html":{}}}],["src/app/services/user.service",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1298,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:24",{"_index":1310,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:35",{"_index":1320,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:43",{"_index":1317,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":1325,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:61",{"_index":1302,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:70",{"_index":1308,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:83",{"_index":1300,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment",{"_index":678,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.public.ts",{"_index":1422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1423,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":89,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["starratingcomponent",{"_index":88,"title":{"components/StarRatingComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stars",{"_index":899,"title":{},"body":{"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/StarRatingComponent.html":{}}}],["starschange",{"_index":994,"title":{},"body":{"components/StarRatingComponent.html":{}}}],["start",{"_index":558,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["started",{"_index":794,"title":{"index.html":{}},"body":{"components/MessagesCenterPageComponent.html":{}}}],["starting",{"_index":569,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["startpolling",{"_index":541,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["state",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{}}}],["state['guideid",{"_index":592,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["statements",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1341,"title":{},"body":{"classes/Utils.html":{}}}],["status",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["sticky",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["stop",{"_index":92,"title":{"interfaces/Stop.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["stopcardcomponent",{"_index":91,"title":{"components/StopCardComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stopdto",{"_index":1021,"title":{"interfaces/StopDTO.html":{}},"body":{"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/TourDTO.html":{},"coverage.html":{}}}],["stopeditordialogcomponent",{"_index":93,"title":{"components/StopEditorDialogComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stops",{"_index":492,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["storage",{"_index":1305,"title":{},"body":{"injectables/UserService.html":{}}}],["stored",{"_index":1471,"title":{},"body":{"index.html":{}}}],["string",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"classes/Utils.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["sub",{"_index":473,"title":{},"body":{"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["submit",{"_index":751,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["submitsearch",{"_index":947,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["submitted",{"_index":957,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["subscribe",{"_index":1129,"title":{},"body":{"components/TourPageComponent.html":{}}}],["subscribe(([tour",{"_index":1113,"title":{},"body":{"components/TourPageComponent.html":{}}}],["subscribe((routedata",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(c",{"_index":625,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["subscribe(conversation",{"_index":611,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["subscribe(m",{"_index":619,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["subscription",{"_index":575,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["success",{"_index":780,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{}}}],["successful",{"_index":1314,"title":{},"body":{"injectables/UserService.html":{}}}],["successo",{"_index":1121,"title":{},"body":{"components/TourPageComponent.html":{}}}],["sullo",{"_index":1062,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["support",{"_index":1493,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1494,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":581,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["switchmap(tourid",{"_index":1110,"title":{},"body":{"components/TourPageComponent.html":{}}}],["syntehtically",{"_index":1068,"title":{},"body":{"components/TourCardComponent.html":{}}}],["t",{"_index":1200,"title":{},"body":{"injectables/TourService.html":{},"classes/Utils.html":{}}}],["t.city.id",{"_index":1257,"title":{},"body":{"injectables/TourService.html":{}}}],["t.id",{"_index":1249,"title":{},"body":{"injectables/TourService.html":{}}}],["t.sharedtourists?.map(t",{"_index":1261,"title":{},"body":{"injectables/TourService.html":{}}}],["t.theme.id",{"_index":1259,"title":{},"body":{"injectables/TourService.html":{}}}],["table",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":486,"title":{"interfaces/Tag.html":{}},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["tag.name",{"_index":980,"title":{},"body":{"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["tagdto",{"_index":1065,"title":{"interfaces/TagDTO.html":{}},"body":{"interfaces/TagDTO.html":{},"coverage.html":{}}}],["tagnames",{"_index":1082,"title":{},"body":{"interfaces/TourDTO.html":{}}}],["tags",{"_index":485,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{}}}],["tagsoptions",{"_index":945,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["tap",{"_index":1326,"title":{},"body":{"injectables/UserService.html":{}}}],["tappa",{"_index":1059,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["tappe",{"_index":1073,"title":{},"body":{"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["te",{"_index":723,"title":{},"body":{"components/GuidePageComponent.html":{},"components/TouristPageComponent.html":{}}}],["tema",{"_index":978,"title":{},"body":{"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["test",{"_index":1477,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1486,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1476,"title":{},"body":{"index.html":{}}}],["text",{"_index":768,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewCardComponent.html":{}}}],["theme",{"_index":487,"title":{"interfaces/Theme.html":{}},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["theme.name",{"_index":979,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["themeid",{"_index":1258,"title":{},"body":{"injectables/TourService.html":{}}}],["themeoptions",{"_index":946,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["themes",{"_index":1214,"title":{},"body":{"injectables/TourService.html":{}}}],["this.actions",{"_index":1115,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.administratordelete",{"_index":1157,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.afteraction",{"_index":1132,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":570,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.cityoptions",{"_index":964,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.completedtours",{"_index":1273,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["this.conversation",{"_index":594,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversation!.messages!.push(m",{"_index":622,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversation.id",{"_index":618,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversations",{"_index":800,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["this.conversationservice.createconversation",{"_index":624,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversationservice.getbyguide(this.tour!.author.id).subscribe((c",{"_index":1140,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.conversationservice.getbyid(conversationid",{"_index":610,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversationservice.getbyid(this.conversation!.id",{"_index":629,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.conversationservice.sendmessage",{"_index":616,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.createdtours",{"_index":719,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["this.creationguideid",{"_index":591,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.description.trim",{"_index":891,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["this.dialogref.close",{"_index":934,"title":{},"body":{"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":839,"title":{},"body":{"components/ProblemsDialogComponent.html":{},"components/ReportDialogComponent.html":{}}}],["this.dialogref.close(this.description",{"_index":892,"title":{},"body":{"components/ReportDialogComponent.html":{}}}],["this.dialogref.close(this.form.getrawvalue",{"_index":936,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["this.dialogref.close(true",{"_index":840,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["this.dialogref.close(utils.nonemptyfieldsof(this.form.value",{"_index":1057,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["this.dialogservice.open(problemsdialogcomponent",{"_index":1154,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.dialogservice.open(reportdialogcomponent",{"_index":1124,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.dialogservice.open(reviewdialogcomponent",{"_index":1133,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.drawer.close",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.nonnullable.group",{"_index":757,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["this.form.patchvalue",{"_index":937,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["this.form.patchvalue(this.savedstop",{"_index":1054,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["this.form.valid",{"_index":777,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.http.delete(environment.apiurl",{"_index":1266,"title":{},"body":{"injectables/TourService.html":{}}}],["this.http.get(environment.apiurl",{"_index":680,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["this.http.patch(environment.apiurl",{"_index":1265,"title":{},"body":{"injectables/TourService.html":{}}}],["this.http.post(environment.apiurl",{"_index":685,"title":{},"body":{"injectables/ConversationService.html":{},"injectables/TourService.html":{},"injectables/UserService.html":{}}}],["this.islogged",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messageservice.getall",{"_index":801,"title":{},"body":{"components/MessagesCenterPageComponent.html":{}}}],["this.name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["this.newmessage",{"_index":617,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.newmessage.trim",{"_index":614,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.notify.open('ben",{"_index":783,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.notify.open('errore",{"_index":712,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.notify.open('recensione",{"_index":1139,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.notify.open('segnalazione",{"_index":1130,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.notify.open('segnato",{"_index":1152,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.notify.open('tour",{"_index":1119,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.onsubmit",{"_index":895,"title":{},"body":{"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{}}}],["this.reportedtours",{"_index":56,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["this.reports",{"_index":837,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["this.role",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{}}}],["this.rootroute(this.activatedroute",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.parammap.pipe",{"_index":603,"title":{},"body":{"components/ConversationPageComponent.html":{},"components/TourPageComponent.html":{}}}],["this.router.events.pipe",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation()!.extras.state",{"_index":586,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.router.navigate",{"_index":786,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["this.router.navigate(['/administrator",{"_index":1158,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.router.navigate(['/conversation",{"_index":1146,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/not",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/search",{"_index":1122,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.router.navigate(['edit",{"_index":1123,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routetitle",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["this.savesession(u",{"_index":1329,"title":{},"body":{"injectables/UserService.html":{}}}],["this.searchresults",{"_index":971,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.selectedrole).subscribe(registered",{"_index":871,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["this.sharedtours",{"_index":1271,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["this.startpolling",{"_index":612,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.tagsoptions",{"_index":968,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.themeoptions",{"_index":966,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tour",{"_index":1114,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tour!.author.id",{"_index":1149,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tour!.reviews.push(createdreview",{"_index":1138,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.createreport(this.tour!.id",{"_index":1128,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.createreview(this.tour!.id",{"_index":1136,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.delete(this.tour!.id).subscribe",{"_index":1117,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.getallcities",{"_index":965,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tourservice.getalltags",{"_index":969,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tourservice.getallthemes",{"_index":967,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.tourservice.getavailableactions(this.tour!.id).subscribe(actions",{"_index":1116,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.getavailableactions(tourid",{"_index":1112,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.getcompletedtours",{"_index":1274,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["this.tourservice.getcreatedtours",{"_index":720,"title":{},"body":{"components/GuidePageComponent.html":{}}}],["this.tourservice.getreportedtours",{"_index":57,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["this.tourservice.getreports(this.tour.id",{"_index":838,"title":{},"body":{"components/ProblemsDialogComponent.html":{}}}],["this.tourservice.getsharedtours",{"_index":1272,"title":{},"body":{"components/TouristPageComponent.html":{}}}],["this.tourservice.markascompleted(this.tour!.id).subscribe",{"_index":1150,"title":{},"body":{"components/TourPageComponent.html":{}}}],["this.tourservice.search(utils.nonemptyfieldsof(this.searchform.value",{"_index":972,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.unsub",{"_index":627,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.unsub$?.unsubscribe",{"_index":630,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["this.userservice.getsession",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interceptors/HeadersInterceptor.html":{}}}],["this.userservice.getsession()?.firstname",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getsessionrole",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{}}}],["this.userservice.login(this.form.getrawvalue()).subscribe(logged",{"_index":778,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userservice.logout",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.register(this.form.getrawvalue",{"_index":870,"title":{},"body":{"components/RegisterPageComponent.html":{}}}],["timestamp",{"_index":530,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"interfaces/Review.html":{}}}],["tipologia",{"_index":1038,"title":{},"body":{"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["title",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["titolo",{"_index":1060,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["toggle",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["tokens",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar.mat",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["tornato",{"_index":784,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tour",{"_index":50,"title":{"interfaces/Tour.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/City.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["tour.approxcost",{"_index":1171,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.approxduration",{"_index":1169,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.author.firstname",{"_index":1164,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.author.lastname",{"_index":1165,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.city.name",{"_index":1168,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.markedascompletedcount",{"_index":1173,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.reviews.length",{"_index":1175,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.stops.length",{"_index":1166,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.theme.name",{"_index":1174,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour.title",{"_index":1162,"title":{},"body":{"components/TourPageComponent.html":{}}}],["tour/completed",{"_index":1234,"title":{},"body":{"injectables/TourService.html":{}}}],["tour/created",{"_index":1236,"title":{},"body":{"injectables/TourService.html":{}}}],["tour/reported",{"_index":1237,"title":{},"body":{"injectables/TourService.html":{}}}],["tour/search",{"_index":1250,"title":{},"body":{"injectables/TourService.html":{}}}],["tour/shared",{"_index":1235,"title":{},"body":{"injectables/TourService.html":{}}}],["touractions",{"_index":499,"title":{"interfaces/TourActions.html":{}},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["tourcardcomponent",{"_index":94,"title":{"components/TourCardComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tourdto",{"_index":1080,"title":{"interfaces/TourDTO.html":{}},"body":{"interfaces/TourDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["toureditorpagecomponent",{"_index":95,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tourid",{"_index":1195,"title":{},"body":{"injectables/TourService.html":{}}}],["tourist",{"_index":518,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["tourist/you",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["touristpagecomponent",{"_index":96,"title":{"components/TouristPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tourists",{"_index":525,"title":{},"body":{"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"injectables/ConversationService.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"injectables/TourService.html":{}}}],["tourpagecomponent",{"_index":97,"title":{"components/TourPageComponent.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tours",{"_index":19,"title":{},"body":{"components/AdministratorPageComponent.html":{},"interfaces/City.html":{},"components/GuidePageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/SearchPageComponent.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{}}}],["tours.length",{"_index":985,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["toursearchdto",{"_index":515,"title":{"interfaces/TourSearchDTO.html":{}},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"coverage.html":{}}}],["tourservice",{"_index":35,"title":{"injectables/TourService.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/GuidePageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/TourPageComponent.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"coverage.html":{}}}],["transfercost",{"_index":1012,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["transferdetails",{"_index":1013,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["transferduration",{"_index":1014,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["transferotheroptions",{"_index":1015,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["transfertype",{"_index":1016,"title":{},"body":{"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["trimmed",{"_index":1280,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["true",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["tua",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["turista",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/RegisterPageComponent.html":{}}}],["turisti",{"_index":805,"title":{},"body":{"components/MessagesCenterPageComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{}}}],["tutti",{"_index":982,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"components/ReviewCardComponent.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"components/TourCardComponent.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1500,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1315,"title":{},"body":{"injectables/UserService.html":{}}}],["u).pipe(tap(u",{"_index":1328,"title":{},"body":{"injectables/UserService.html":{}}}],["u1",{"_index":1335,"title":{},"body":{"injectables/UserService.html":{}}}],["u1.role",{"_index":1336,"title":{},"body":{"injectables/UserService.html":{}}}],["ui",{"_index":1442,"title":{},"body":{"index.html":{}}}],["un",{"_index":791,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["undefined",{"_index":564,"title":{},"body":{"components/ConversationPageComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/TourPageComponent.html":{},"classes/Utils.html":{},"miscellaneous/typealiases.html":{}}}],["unique",{"_index":1288,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["unit",{"_index":1475,"title":{},"body":{"index.html":{}}}],["unsub",{"_index":539,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["unsubscribe",{"_index":546,"title":{},"body":{"components/ConversationPageComponent.html":{}}}],["update",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/StarRatingComponent.html":{}}}],["url",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urltree",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":595,"title":{},"body":{"components/ConversationPageComponent.html":{},"index.html":{}}}],["useclass",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":16,"title":{"interfaces/User.html":{}},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/City.html":{},"interfaces/Conversation.html":{},"interfaces/ConversationDTO.html":{},"components/ConversationPageComponent.html":{},"injectables/ConversationService.html":{},"components/GuidePageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageDTO.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"components/ReportDialogComponent.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"interfaces/Stop.html":{},"components/StopCardComponent.html":{},"interfaces/StopDTO.html":{},"components/StopEditorDialogComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"components/TourPageComponent.html":{},"interfaces/TourSearchDTO.html":{},"injectables/TourService.html":{},"components/TouristPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user/login",{"_index":1327,"title":{},"body":{"injectables/UserService.html":{}}}],["userlogindto",{"_index":1287,"title":{"interfaces/UserLoginDTO.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":758,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{}}}],["userregisterdto",{"_index":1291,"title":{"interfaces/UserRegisterDTO.html":{}},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrole",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{},"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.administrator",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userrole.guide",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userrole.tourist",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["users",{"_index":1301,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":123,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConversationPageComponent.html":{},"interceptors/HeadersInterceptor.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1067,"title":{},"body":{"interfaces/TagDTO.html":{}}}],["utenti",{"_index":60,"title":{},"body":{"components/AdministratorPageComponent.html":{}}}],["utility",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["utils",{"_index":961,"title":{"classes/Utils.html":{}},"body":{"components/SearchPageComponent.html":{},"components/StopEditorDialogComponent.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["validators",{"_index":776,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["validators.min(1",{"_index":933,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["validators.pattern(this.nonwhitespaceregex",{"_index":760,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["validators.required",{"_index":759,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReviewDialogComponent.html":{},"components/StopEditorDialogComponent.html":{}}}],["value",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1285,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserLoginDTO.html":{},"interfaces/UserRegisterDTO.html":{},"miscellaneous/enumerations.html":{}}}],["valutazione",{"_index":939,"title":{},"body":{"components/ReviewDialogComponent.html":{}}}],["var",{"_index":66,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/NotAuthorizedPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewCardComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourCardComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{}}}],["variable",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1503,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1455,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1479,"title":{},"body":{"index.html":{}}}],["view",{"_index":511,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["viewchild",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('drawer",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["viewreports",{"_index":510,"title":{},"body":{"interfaces/City.html":{},"interfaces/Report.html":{},"interfaces/ReportDTO.html":{},"interfaces/Review.html":{},"interfaces/ReviewDTO.html":{},"interfaces/Stop.html":{},"interfaces/StopDTO.html":{},"interfaces/Tag.html":{},"interfaces/TagDTO.html":{},"interfaces/Theme.html":{},"interfaces/Tour.html":{},"interfaces/TourActions.html":{},"interfaces/TourDTO.html":{},"interfaces/TourSearchDTO.html":{}}}],["visibility",{"_index":788,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["visibility_off",{"_index":787,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["visualizza",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AdministratorPageComponent.html":{},"components/AppComponent.html":{},"components/ConversationPageComponent.html":{},"components/GuidePageComponent.html":{},"components/LoginPageComponent.html":{},"components/MessagesCenterPageComponent.html":{},"components/ProblemsDialogComponent.html":{},"components/RegisterPageComponent.html":{},"components/ReportDialogComponent.html":{},"components/ReviewDialogComponent.html":{},"components/SearchPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopEditorDialogComponent.html":{},"components/TourPageComponent.html":{},"components/TouristPageComponent.html":{},"injectables/UserService.html":{}}}],["whattosee",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["whattoseeapp",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":764,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{},"components/StarRatingComponent.html":{},"components/StopCardComponent.html":{}}}],["white",{"_index":914,"title":{},"body":{"components/ReviewCardComponent.html":{}}}],["whitespace",{"_index":774,"title":{},"body":{"components/LoginPageComponent.html":{},"components/RegisterPageComponent.html":{}}}],["width",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["window.btoa(json.stringify(u",{"_index":1332,"title":{},"body":{"injectables/UserService.html":{}}}],["window.location.hostname",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1099,"title":{},"body":{"components/TourPageComponent.html":{}}}],["x25cf",{"_index":1033,"title":{},"body":{"components/StopCardComponent.html":{},"components/TourCardComponent.html":{}}}],["yes",{"_index":1049,"title":{},"body":{"components/StopEditorDialogComponent.html":{}}}],["z",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdministratorPageComponent.html":{"url":"components/AdministratorPageComponent.html","title":"component - AdministratorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdministratorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/administrator-page/administrator-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        \"For you\" page for the logged user when he is an administrator.\nIt shows all the tours that have been reported.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./administrator-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./administrator-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reportedTours$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tourService: TourService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/administrator-page/administrator-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/administrator-page/administrator-page.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reportedTours$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/administrator-page/administrator-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tour } from 'src/app/dtos/tour';\nimport { TourService } from 'src/app/services/tour.service';\n\n/**\n * \"For you\" page for the logged user when he is an administrator.\n * It shows all the tours that have been reported.\n */\n@Component({\n  templateUrl: './administrator-page.component.html',\n  styleUrls: ['./administrator-page.component.scss']\n})\nexport class AdministratorPageComponent implements OnInit {\n\n  reportedTours$!: Observable;\n\n  constructor(private tourService: TourService) {}\n\n  ngOnInit(): void {\n    this.reportedTours$ = this.tourService.getReportedTours();\n  }\n\n  \n\n}\n\n    \n\n    \n        \n    Tour segnalati dagli utenti ({{ reportedTours.length }}):\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./administrator-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Tour segnalati dagli utenti ({{ reportedTours.length }}):                '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdministratorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component of the application. It contains the toolbar and the drawer.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                drawer\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLogged\n                            \n                            \n                                name\n                            \n                            \n                                role\n                            \n                            \n                                routeTitle\n                            \n                            \n                                UserRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRouteClick\n                            \n                            \n                                    Private\n                                rootRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, router: Router, userService: UserService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:107\n                \n            \n\n\n            \n                \n                    User requested to logout.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRouteClick\n                        \n                    \n                \n            \n            \n                \nonRouteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:97\n                \n            \n\n\n            \n                \n                    When a route is clicked, close the drawer if it is in over mode and remove the focus from the hamburger button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        rootRoute\n                        \n                    \n                \n            \n            \n                \n                    \n                    rootRoute(route: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Utility function to get the root route of the current route.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActivatedRoute\n\n                    \n                    \n                        the root route\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        drawer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('drawer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:54\n                        \n                    \n\n            \n                \n                    Observable for screen size changes.\nAllows page to be responsive.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n            \n                \n                    True if the user is logged in, false otherwise.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    The name of the logged user, null if not logged in.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:33\n                        \n                    \n\n            \n                \n                    The role of the logged user, null if not logged in.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"WhatToSee\"\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:43\n                        \n                    \n\n            \n                \n                    The title of the toolbar. It changes on each routing event.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserRole\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    The user roles enum.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map, mergeMap, shareReplay } from 'rxjs/operators';\nimport { UserRole } from './dtos/user';\nimport { UserService } from './services/user.service';\n\n/**\n * Main component of the application. It contains the toolbar and the drawer.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * True if the user is logged in, false otherwise.\n   */\n  isLogged: boolean = false;\n  \n  /**\n   * The name of the logged user, null if not logged in.\n   */\n  name: string | null = null;\n\n  /**\n   * The role of the logged user, null if not logged in.\n   */\n  role: UserRole | null = null;\n\n  /**\n   * The user roles enum.\n   */\n  UserRole = UserRole;\n\n  /**\n   * The title of the toolbar. It changes on each routing event.\n   */\n  routeTitle: string = \"WhatToSee\";\n\n  /**\n   * Reference to the drawer.\n   */\n  @ViewChild('drawer') drawer!: MatDrawer;\n\n  /**\n   * Observable for screen size changes.\n   * Allows page to be responsive.\n   */\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver, \n    private router: Router, \n    private userService: UserService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    // update toolbar, login status and user name on each routing event\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n      map(() => this.rootRoute(this.activatedRoute)),\n      filter((route: ActivatedRoute) => route.outlet === 'primary'),\n      mergeMap((route: ActivatedRoute) => route.data)\n    ).subscribe((routeData: any) => {\n      this.routeTitle = routeData.title ?? \"WhatToSeeApp\"\n      this.isLogged = this.userService.getSession() !== null;\n      this.name = this.userService.getSession()?.firstName ?? null;\n      this.role = this.userService.getSessionRole()\n    });\n  }\n\n  /**\n   * Utility function to get the root route of the current route.\n   * @param route the current route\n   * @returns the root route\n   */\n  private rootRoute(route: ActivatedRoute): ActivatedRoute {\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n\n  /**\n   * When a route is clicked, close the drawer if it is in over mode and remove the focus from the hamburger button.\n   */\n  onRouteClick() {\n    (document.activeElement! as HTMLElement).blur();\n    if(this.drawer.mode === 'over') {\n      this.drawer.close();\n    }\n  }\n\n  /**\n   * User requested to logout.\n   */\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Ciao, {{ name }}!\n\n    \n      Cerca tour\n      Logout\n    \n\n    \n        \n        \n          Menu turista\n          \n            La tua pagina\n            Centro messaggi\n          \n        \n\n        \n        \n          Menu guida\n          \n            La tua pagina\n            Crea tour\n            Centro messaggi\n          \n        \n\n        \n        \n          Menu amministratore\n           \n            La tua pagina\n          \n        \n    \n  \n\n  \n    \n      \n        menu\n      \n      {{routeTitle}}\n    \n\n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 2;\n}\n\n@media only screen and (min-width: 960px) {\n  main {\n    max-width: 1300px;\n    margin: auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Ciao, {{ name }}!          Cerca tour      Logout                                  Menu turista                      La tua pagina            Centro messaggi                                            Menu guida                      La tua pagina            Crea tour            Centro messaggi                                            Menu amministratore                       La tua pagina                                            menu            {{routeTitle}}                        '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdministratorPageComponent\n\nAdministratorPageComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdministratorPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConversationPageComponent\n\nConversationPageComponent\n\nAppModule -->\n\nConversationPageComponent->AppModule\n\n\n\n\n\nGuidePageComponent\n\nGuidePageComponent\n\nAppModule -->\n\nGuidePageComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nMessagesCenterPageComponent\n\nMessagesCenterPageComponent\n\nAppModule -->\n\nMessagesCenterPageComponent->AppModule\n\n\n\n\n\nNotAuthorizedPageComponent\n\nNotAuthorizedPageComponent\n\nAppModule -->\n\nNotAuthorizedPageComponent->AppModule\n\n\n\n\n\nNotFoundPageComponent\n\nNotFoundPageComponent\n\nAppModule -->\n\nNotFoundPageComponent->AppModule\n\n\n\n\n\nProblemsDialogComponent\n\nProblemsDialogComponent\n\nAppModule -->\n\nProblemsDialogComponent->AppModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAppModule -->\n\nRegisterPageComponent->AppModule\n\n\n\n\n\nReportDialogComponent\n\nReportDialogComponent\n\nAppModule -->\n\nReportDialogComponent->AppModule\n\n\n\n\n\nReviewCardComponent\n\nReviewCardComponent\n\nAppModule -->\n\nReviewCardComponent->AppModule\n\n\n\n\n\nReviewDialogComponent\n\nReviewDialogComponent\n\nAppModule -->\n\nReviewDialogComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nStarRatingComponent\n\nStarRatingComponent\n\nAppModule -->\n\nStarRatingComponent->AppModule\n\n\n\n\n\nStopCardComponent\n\nStopCardComponent\n\nAppModule -->\n\nStopCardComponent->AppModule\n\n\n\n\n\nStopEditorDialogComponent\n\nStopEditorDialogComponent\n\nAppModule -->\n\nStopEditorDialogComponent->AppModule\n\n\n\n\n\nTourCardComponent\n\nTourCardComponent\n\nAppModule -->\n\nTourCardComponent->AppModule\n\n\n\n\n\nTourEditorPageComponent\n\nTourEditorPageComponent\n\nAppModule -->\n\nTourEditorPageComponent->AppModule\n\n\n\n\n\nTourPageComponent\n\nTourPageComponent\n\nAppModule -->\n\nTourPageComponent->AppModule\n\n\n\n\n\nTouristPageComponent\n\nTouristPageComponent\n\nAppModule -->\n\nTouristPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nHeadersInterceptor\n\nHeadersInterceptor\n\nAppModule -->\n\nHeadersInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main module of the application.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdministratorPageComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConversationPageComponent\n                        \n                        \n                            GuidePageComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                        \n                            MessagesCenterPageComponent\n                        \n                        \n                            NotAuthorizedPageComponent\n                        \n                        \n                            NotFoundPageComponent\n                        \n                        \n                            ProblemsDialogComponent\n                        \n                        \n                            RegisterPageComponent\n                        \n                        \n                            ReportDialogComponent\n                        \n                        \n                            ReviewCardComponent\n                        \n                        \n                            ReviewDialogComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                        \n                            StarRatingComponent\n                        \n                        \n                            StopCardComponent\n                        \n                        \n                            StopEditorDialogComponent\n                        \n                        \n                            TourCardComponent\n                        \n                        \n                            TourEditorPageComponent\n                        \n                        \n                            TourPageComponent\n                        \n                        \n                            TouristPageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            HeadersInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { registerLocaleData } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport localeIt from '@angular/common/locales/it';\nimport { DEFAULT_CURRENCY_CODE, LOCALE_ID, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogModule } from '@angular/material/dialog';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemsDialogComponent } from './components/problems-dialog/problems-dialog.component';\nimport { ReportDialogComponent } from './components/report-dialog/report-dialog.component';\nimport { ReviewCardComponent } from './components/review-card/review-card.component';\nimport { ReviewDialogComponent } from './components/review-dialog/review-dialog.component';\nimport { StarRatingComponent } from './components/star-rating/star-rating.component';\nimport { TourCardComponent } from './components/tour-card/tour-card.component';\nimport { StopCardComponent } from './components/tour-stop-card/tour-stop-card.component';\nimport { StopEditorDialogComponent } from './components/tour-stop-editor-dialog/tour-stop-editor-dialog.component';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { HeadersInterceptor } from './interceptors/headers.interceptor';\nimport { AdministratorPageComponent } from './pages/administrator-page/administrator-page.component';\nimport { ConversationPageComponent } from './pages/conversation-page/conversation-page.component';\nimport { GuidePageComponent } from './pages/guide-page/guide-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { MessagesCenterPageComponent } from './pages/messages-center-page/messages-center-page.component';\nimport { NotAuthorizedPageComponent } from './pages/not-authorized/not-authorized-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { TourEditorPageComponent } from './pages/tour-editor-page/tour-editor-page.component';\nimport { TourPageComponent } from './pages/tour-page/tour-page.component';\nimport { TouristPageComponent } from './pages/tourist-page/tourist-page.component';\n\n/**\n * Register the IT locale for the application.\n */\nregisterLocaleData(localeIt);\n\n/**\n * Main module of the application.\n */\n@NgModule({\n  declarations: [\n    // all the components of the application\n    AppComponent,\n    LoginPageComponent,\n    NotFoundPageComponent,\n    NotAuthorizedPageComponent,\n    RegisterPageComponent,\n    TourEditorPageComponent,\n    StopEditorDialogComponent,\n    StopCardComponent,\n    SearchPageComponent,\n    TourCardComponent,\n    TourPageComponent,\n    ReviewCardComponent,\n    StarRatingComponent,\n    ReportDialogComponent,\n    ProblemsDialogComponent,\n    ReviewDialogComponent,\n    MessagesCenterPageComponent,\n    ConversationPageComponent,\n    TouristPageComponent,\n    GuidePageComponent,\n    AdministratorPageComponent\n  ],\n  imports: [\n    // all the required modules dependencies\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    // material dependencies\n    LayoutModule,\n    MatToolbarModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatCardModule,\n    MatAutocompleteModule,  // must precede chips, for some reason\n    MatChipsModule,\n    MatRippleModule,\n    DragDropModule\n  ],\n  providers: [\n    // all the tokens provided to the application (defaults)\n    { provide: LOCALE_ID, useValue: 'it' },\n    { provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' },\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { width: '80vw' } },\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 4000 } },\n    { provide: HTTP_INTERCEPTORS, useClass: HeadersInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module that contains all the routes of the application.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserRole } from './dtos/user';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdministratorPageComponent } from './pages/administrator-page/administrator-page.component';\nimport { ConversationPageComponent } from './pages/conversation-page/conversation-page.component';\nimport { GuidePageComponent } from './pages/guide-page/guide-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { MessagesCenterPageComponent } from './pages/messages-center-page/messages-center-page.component';\nimport { NotAuthorizedPageComponent } from './pages/not-authorized/not-authorized-page.component';\nimport { NotFoundPageComponent } from './pages/not-found-page/not-found-page.component';\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { TourEditorPageComponent } from './pages/tour-editor-page/tour-editor-page.component';\nimport { TourPageComponent } from './pages/tour-page/tour-page.component';\nimport { TouristPageComponent } from './pages/tourist-page/tourist-page.component';\n\n/**\n * All the routes of the application.\n * Each route can have a title and a role required to access it.\n */\nconst routes: Routes = [\n  { path: 'login', component: LoginPageComponent, data: { title: 'Login' }},\n  { path: 'register', component: RegisterPageComponent, data: { title: 'Registrati' }},\n  { path: 'tourist/you', component: TouristPageComponent, canActivate: [AuthGuard], data: { title: 'La tua pagina turista', role: [UserRole.TOURIST] }},\n  { path: 'guide/you', component: GuidePageComponent, canActivate: [AuthGuard], data: { title: 'La tua pagina guida', role: [UserRole.GUIDE] }},\n  { path: 'administrator/you', component: AdministratorPageComponent, canActivate: [AuthGuard], data: { title: 'La tua pagina amministratore', role: [UserRole.ADMINISTRATOR] }},\n  \n  { path: 'search', component: SearchPageComponent, canActivate: [AuthGuard], data: { title: 'Cerca' }},\n  { path: 'tour', children: [\n    { path: 'create', component: TourEditorPageComponent, canActivate: [AuthGuard], data: { title: 'Crea tour', role: [UserRole.GUIDE] }},\n    { path: ':id/edit', component: TourEditorPageComponent, canActivate: [AuthGuard], data: { title: 'Modifica tour', role: [UserRole.GUIDE] } },\n    { path: ':id', component: TourPageComponent, canActivate: [AuthGuard], data: { title: 'Visualizza tour' }},\n  ]},\n  { path: 'conversation', children: [\n      { path: 'list', component: MessagesCenterPageComponent, canActivate: [AuthGuard], data: { title: 'Centro messaggi', role: [UserRole.TOURIST, UserRole.GUIDE] } },\n      { path: 'new', component: ConversationPageComponent, canActivate: [AuthGuard], data: { title: 'Conversazione', role: [UserRole.TOURIST, UserRole.GUIDE] } },\n      { path: ':id', component: ConversationPageComponent, canActivate: [AuthGuard], data: { title: 'Conversazione', role: [UserRole.TOURIST, UserRole.GUIDE] } },\n    ]\n  },\n\n  { path: '', pathMatch: 'full', redirectTo: 'search' },  // default\n  { path: 'not-authorized', component: NotAuthorizedPageComponent, data: { title: 'Non autorizzato' } }, // when any 401 response\n  { path: '**', component: NotFoundPageComponent }, // route not found \n];\n\n/**\n * Module that contains all the routes of the application.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard that checks if the user is logged and has the required role to access the page.\nIf not, redirects to the login page.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserRole } from '../dtos/user';\n\n/**\n * Guard that checks if the user is logged and has the required role to access the page.\n * If not, redirects to the login page.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private router: Router, private userService: UserService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    const loggedUserRole = this.userService.getSessionRole();\n    if(loggedUserRole !== null) { // is logged?\n      const routeRole: UserRole[] = route.data['role'];\n      if(!routeRole || (routeRole.indexOf(loggedUserRole) !== -1)) { // if role is defined for role, does it match?\n        return true;\n      } else {\n        this.router.navigate(['/not-authorized']);\n      }\n    } else {\n      this.router.navigate(['/login']);\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/City.html":{"url":"interfaces/City.html","title":"interface - City","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour city.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Conversation.html":{"url":"interfaces/Conversation.html","title":"interface - Conversation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Conversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/conversation.ts\n        \n\n\n            \n                Description\n            \n            \n                A conversation between a tourist and a guide.\nSee Message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            guide\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            tourist\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guide:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:         Message[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tourist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tourist:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\";\n\n// DTO = as sent to BE, removed sub-entities and id, lazy, POST request\n// NON-DTO = as recieved form BE, entity, eager, GET response\n\n/**\n * A conversation between a tourist and a guide.\n * @see Message\n */\nexport interface Conversation {\n    id: number\n    guide: User\n    tourist: User\n    messages: Message[] | null  // null in messages center response\n}\n\n/**\n * DTO for creating a conversation.\n * Note that only tourists can create a conversation.\n */\nexport interface ConversationDTO {\n    guideId: number\n    message: string\n}\n\n/**\n * A message in a conversation.\n * @see Conversation\n */\nexport interface Message {\n    id: number\n    content: string\n    direction: boolean  // true if guide -> tourist, false if tourist -> guide\n    timestamp: Date\n}\n\n/**\n * DTO for sending a message in an existing conversation.\n */\nexport interface MessageDTO {\n    content: string\n    conversationId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConversationDTO.html":{"url":"interfaces/ConversationDTO.html","title":"interface - ConversationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConversationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/conversation.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a conversation.\nNote that only tourists can create a conversation.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            guideId\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guideId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guideId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\";\n\n// DTO = as sent to BE, removed sub-entities and id, lazy, POST request\n// NON-DTO = as recieved form BE, entity, eager, GET response\n\n/**\n * A conversation between a tourist and a guide.\n * @see Message\n */\nexport interface Conversation {\n    id: number\n    guide: User\n    tourist: User\n    messages: Message[] | null  // null in messages center response\n}\n\n/**\n * DTO for creating a conversation.\n * Note that only tourists can create a conversation.\n */\nexport interface ConversationDTO {\n    guideId: number\n    message: string\n}\n\n/**\n * A message in a conversation.\n * @see Conversation\n */\nexport interface Message {\n    id: number\n    content: string\n    direction: boolean  // true if guide -> tourist, false if tourist -> guide\n    timestamp: Date\n}\n\n/**\n * DTO for sending a message in an existing conversation.\n */\nexport interface MessageDTO {\n    content: string\n    conversationId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConversationPageComponent.html":{"url":"components/ConversationPageComponent.html","title":"component - ConversationPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConversationPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/conversation-page/conversation-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page that shows the messages of a conversation and allows to send new ones.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./conversation-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./conversation-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conversation\n                            \n                            \n                                    Optional\n                                creationGuideId\n                            \n                            \n                                isHandset$\n                            \n                            \n                                newMessage\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                unsub$\n                            \n                            \n                                UserRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                            \n                                    Private\n                                startPolling\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, conversationService: ConversationService, userService: UserService, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationService\n                                                  \n                                                        \n                                                                        ConversationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/conversation-page/conversation-page.component.ts:136\n                \n            \n\n\n            \n                \n                    Unsubscribe from polling when component is destroyed to avoid memory leaks.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/conversation-page/conversation-page.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/conversation-page/conversation-page.component.ts:103\n                \n            \n\n\n            \n                \n                    User has clicked on the send button or pressed enter.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        startPolling\n                        \n                    \n                \n            \n            \n                \n                    \n                    startPolling()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/conversation-page/conversation-page.component.ts:127\n                \n            \n\n\n            \n                \n                    After conversation has been loaded, start polling for new messages every 5 seconds.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Conversation\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:22\n                        \n                    \n\n            \n                \n                    Conversation retrieved from backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creationGuideId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:28\n                        \n                    \n\n            \n                \n                    Id of the guide that is being first contacted from the logged tourist.\nIt is defined only if the logged user is a tourist and he is starting a new conversation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(result => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:49\n                        \n                    \n\n            \n                \n                    Observable for screen size changes.\nAllows page to be responsive.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:43\n                        \n                    \n\n            \n                \n                    User input for new message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:33\n                        \n                    \n\n            \n                \n                    Role of the logged user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unsub$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:58\n                        \n                    \n\n            \n                \n                    Reference to the subscription to the polling incoming messages observable.\nNeeded to unsubscribe when the component is destroyed and avoid memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserRole\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/conversation-page/conversation-page.component.ts:38\n                        \n                    \n\n            \n                \n                    Enum for user roles, needed in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Observable, Subscription, filter, interval, map, mergeMap, shareReplay, switchMap } from 'rxjs';\nimport { Conversation } from 'src/app/dtos/conversation';\nimport { ConversationService } from 'src/app/services/conversation.service';\nimport { UserRole } from './../../dtos/user';\nimport { UserService } from './../../services/user.service';\n\n/**\n * Page that shows the messages of a conversation and allows to send new ones.\n */\n@Component({\n  templateUrl: './conversation-page.component.html',\n  styleUrls: ['./conversation-page.component.scss']\n})\nexport class ConversationPageComponent implements OnInit {\n\n  /**\n   * Conversation retrieved from backend.\n   */\n  conversation?: Conversation\n\n  /**\n   * Id of the guide that is being first contacted from the logged tourist.\n   * It is defined only if the logged user is a tourist and he is starting a new conversation.\n   */\n  creationGuideId?: number | undefined\n\n  /**\n   * Role of the logged user.\n   */\n  role: UserRole | null = null\n\n  /**\n   * Enum for user roles, needed in the template.\n   */\n  UserRole = UserRole\n\n  /**\n   * User input for new message.\n   */\n  newMessage: string = ''\n\n  /**\n   * Observable for screen size changes.\n   * Allows page to be responsive.\n   */\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  /**\n   * Reference to the subscription to the polling incoming messages observable.\n   * Needed to unsubscribe when the component is destroyed and avoid memory leaks.\n   */\n  unsub$?: Subscription\n\n  constructor(\n    private route: ActivatedRoute, \n    private router: Router,\n    private conversationService: ConversationService,\n    private userService: UserService,\n    private breakpointObserver: BreakpointObserver\n  ) {\n    // get additional data for activated route, if any\n    const state = this.router.getCurrentNavigation()!.extras.state\n    if (state) { \n      // data is present, coming from tour page: conversation has already been loaded or tourist is creating a new conversation\n      if(state['guideId']) {  // tourist is creating a new conversation\n        this.creationGuideId = state['guideId'] // save guide id\n      } else { // conversation has already been loaded\n        this.conversation = state as Conversation // use already loaded conversation for display, in order to avoid another backend call\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.role = this.userService.getSessionRole()\n    // check if conversation has already been loaded in constructor\n    if(this.conversation === undefined && this.creationGuideId === undefined) {\n      // conversation has not been loaded yet, retrieve it from backend\n      this.route.paramMap.pipe(\n        map((param: ParamMap) => param.get('id')),  // get conversation id from route\n        filter(id => id != null),\n        map(conversationId => Number(conversationId)),\n        mergeMap(conversationId => this.conversationService.getById(conversationId))  // retrieve conversation\n      ).subscribe(conversation => { \n        // save conversation for display and start polling\n        this.conversation = conversation\n        this.startPolling()\n      })\n    } else {\n      // conversation has already been loaded, only start polling\n      this.startPolling()\n    }\n  }\n\n  /**\n   * User has clicked on the send button or pressed enter.\n   */\n  sendMessage() {\n    if(this.newMessage && this.newMessage.trim()) { // check if message is not empty\n      // check if conversation has already been loaded or if it is a new conversation\n      if(this.conversation !== undefined) {\n        // send in an existing conversation\n        this.conversationService.sendMessage({ content: this.newMessage, conversationId: this.conversation.id }).subscribe(m => {\n          // reload messages and clear input\n          this.conversation!.messages!.push(m)\n          this.newMessage = ''\n        })\n      } else if(this.creationGuideId !== undefined) {\n        // send in a new conversation\n        this.conversationService.createConversation({ message: this.newMessage, guideId: this.creationGuideId }).subscribe(c => {\n          // save conversation and clear input\n          this.conversation = c\n          this.newMessage = ''\n        })\n      }\n    }\n  }\n\n  /**\n   * After conversation has been loaded, start polling for new messages every 5 seconds.\n   */\n  private startPolling() {\n    this.unsub$ = interval(5000).pipe(\n      switchMap(() => this.conversationService.getById(this.conversation!.id))\n    ).subscribe(conversation => this.conversation = conversation)\n  }\n\n  /**\n   * Unsubscribe from polling when component is destroyed to avoid memory leaks.\n   */\n  ngOnDestroy(): void {\n    this.unsub$?.unsubscribe()\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                {{ m.direction ? conversation.guide.firstName : conversation.tourist.firstName }} in data {{ m.timestamp | date: 'medium' }}\n                {{ m.content }}\n            \n        \n    \n    \n        Qui non c'è nulla... Inizia la conversazione!\n    \n        \n    \n        \n            \n        \n        \n            send\n        \n    \n\n\n    \n\n    \n                \n                    ./conversation-page.component.scss\n                \n                .own-message {\n    background-color: #d9fdd3;    \n    align-self: flex-end;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ m.direction ? conversation.guide.firstName : conversation.tourist.firstName }} in data {{ m.timestamp | date: \\'medium\\' }}                {{ m.content }}                                    Qui non c\\'è nulla... Inizia la conversazione!                                                                send            '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConversationPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConversationService.html":{"url":"injectables/ConversationService.html","title":"injectable - ConversationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConversationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/conversation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the conversation features.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createConversation\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getByGuide\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/conversation.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createConversation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConversation(c: ConversationDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/conversation.service.ts:67\n                \n            \n\n\n            \n                \n                    Create a new conversation with a message.\nOnly available for tourists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                ConversationDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the conversation to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the created conversation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/conversation.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve all conversations of the current user.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all conversations of the current user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getByGuide\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByGuide(guideId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/conversation.service.ts:43\n                \n            \n\n\n            \n                \n                    Retrieve an eventually existing conversation by its guide counterpart.\nOnly available for tourists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    guideId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the guide to retrieve the conversation with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the conversation with the given guide, or null if it doesn't exist yet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(conversationId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/conversation.service.ts:32\n                \n            \n\n\n            \n                \n                    Retrieve a conversation by its id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    conversationId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the conversation to retrieve\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the conversation with the given id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(m: MessageDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/conversation.service.ts:57\n                \n            \n\n\n            \n                \n                    Send a new message in an existing conversation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MessageDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the message to send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the sent message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Message } from 'src/app/dtos/conversation';\nimport { environment } from 'src/environments/environment';\nimport { Conversation } from '../dtos/conversation';\nimport { ConversationDTO, MessageDTO } from './../dtos/conversation';\n\n/**\n * Service that handles the conversation features.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversationService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Retrieve all conversations of the current user.\n   * @returns all conversations of the current user\n   */\n  public getAll(): Observable {\n    return this.http.get(environment.apiUrl + '/conversation/all')\n  }\n\n  /**\n   * Retrieve a conversation by its id.\n   * @param conversationId the id of the conversation to retrieve\n   * @returns the conversation with the given id\n   */\n  public getById(conversationId: number): Observable {\n    const params = new HttpParams().append('conversationId', conversationId)\n    return this.http.get(environment.apiUrl + '/conversation', { params })\n  }\n\n  /**\n   * Retrieve an eventually existing conversation by its guide counterpart.\n   * Only available for tourists.\n   * @param guideId the id of the guide to retrieve the conversation with\n   * @returns the conversation with the given guide, or null if it doesn't exist yet\n   */\n  public getByGuide(guideId: number): Observable { \n    const params = new HttpParams().append('guideId', guideId)\n    return this.http.get(environment.apiUrl + '/conversation', { params })\n  }\n  \n  // ---------\n  // MESSAGES\n  // ---------\n\n  /**\n   * Send a new message in an existing conversation.\n   * @param m the message to send\n   * @returns the sent message\n   */\n  public sendMessage(m: MessageDTO): Observable {\n    return this.http.post(environment.apiUrl + '/conversation/message', m)\n  }\n\n  /**\n   * Create a new conversation with a message.\n   * Only available for tourists.\n   * @param c the conversation to create\n   * @returns the created conversation\n   */\n  public createConversation(c: ConversationDTO): Observable {\n    return this.http.post(environment.apiUrl + '/conversation', c)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for HTTP error responses.\nIf the error status code is 401, redirects to the not-authorized page.\nOtherwise, displays the error message with a snackbar.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, notify: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/error.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/error.interceptor.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpStatusCode\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Observable, catchError, of } from 'rxjs';\n\n/**\n * Interceptor for HTTP error responses.\n * If the error status code is 401, redirects to the not-authorized page.\n * Otherwise, displays the error message with a snackbar.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private notify: MatSnackBar) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(err => {\n        if(err.status === HttpStatusCode.Unauthorized) {\n          this.router.navigate(['/not-authorized']);\n        } else {\n          this.notify.open('Errore: ' + err.error.message, undefined, { panelClass: 'error-snackbar' });\n        }\n        return of(err);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidePageComponent.html":{"url":"components/GuidePageComponent.html","title":"component - GuidePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/guide-page/guide-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        \"For you\" page for the logged user when he is a guide.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./guide-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./guide-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdTours$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tourService: TourService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/guide-page/guide-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/guide-page/guide-page.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdTours$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/guide-page/guide-page.component.ts:18\n                        \n                    \n\n            \n                \n                    Tours created by the logged user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tour } from 'src/app/dtos/tour';\nimport { TourService } from 'src/app/services/tour.service';\n\n/**\n * \"For you\" page for the logged user when he is a guide.\n */\n@Component({\n  templateUrl: './guide-page.component.html',\n  styleUrls: ['./guide-page.component.scss']\n})\nexport class GuidePageComponent implements OnInit {\n\n  /**\n   * Tours created by the logged user.\n   */\n  createdTours$!: Observable;\n\n  constructor(private tourService: TourService) {}\n\n  ngOnInit(): void {\n    this.createdTours$ = this.tourService.getCreatedTours();\n  }\n\n  \n\n}\n\n    \n\n    \n        \n    Tour creati da te ({{ createdTours.length }}):\n    \n        \n        \n            add\n        \n    \n\n\n    \n\n    \n                \n                    ./guide-page.component.scss\n                \n                .new-tour-card {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    flex-basis: 100px;\n    height: 126px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Tour creati da te ({{ createdTours.length }}):                                add            '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HeadersInterceptor.html":{"url":"interceptors/HeadersInterceptor.html","title":"interceptor - HeadersInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HeadersInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/headers.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for HTTP requests.\nAppends user id to request header, if logged.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/headers.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/headers.interceptor.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n\n/**\n * Interceptor for HTTP requests.\n * Appends user id to request header, if logged. \n */\n@Injectable()\nexport class HeadersInterceptor implements HttpInterceptor {\n\n  constructor(private userService: UserService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const loggedUser = this.userService.getSession();\n    if(loggedUser !== null) {\n      request = request.clone({\n        setHeaders: {\n          Authentication: loggedUser.id.toString()\n        }\n      });\n    }\n    return next.handle(request);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login-page/login-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Login page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./login-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hidePass\n                            \n                            \n                                nonWhitespaceRegex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, notify: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login-page/login-page.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login-page/login-page.component.ts:44\n                \n            \n\n\n            \n                \n                    User pressed the login button or enter.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    username: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    password: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:29\n                        \n                    \n\n            \n                \n                    User input for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:19\n                        \n                    \n\n            \n                \n                    Whether the password is shown as dots or as plain text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonWhitespaceRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /[\\S]/\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Regex for checking that a string contains at least one non-whitespace character.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n/**\n * Login page.\n */\n@Component({\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n\n  /**\n   * Whether the password is shown as dots or as plain text.\n   */\n  hidePass = true;\n\n  /**\n   * Regex for checking that a string contains at least one non-whitespace character.\n   */\n  nonWhitespaceRegex = /[\\S]/\n\n  /**\n   * User input for login.\n   */\n  form = this.fb.nonNullable.group({\n    username: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    password: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n  });\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserService,\n    private notify: MatSnackBar,\n    private router: Router\n  ) { }\n  \n  /**\n   * User pressed the login button or enter.\n   */\n  submit(): void {\n    if (!this.form.valid) return;\n    this.userService.login(this.form.getRawValue()).subscribe(logged => {\n      // user logged: show success message and redirect to home\n      this.notify.open('Ben tornato, ' + logged.firstName + '!', undefined, { panelClass: 'success-snackbar' })\n      this.router.navigate(['/']);\n    })\n  }\n}\n\n    \n\n    \n        \n    \n        \n\n            \n                Username\n                \n            \n            \n            \n                Password\n                \n                \n                    {{ hidePass ? 'visibility_off' : 'visibility' }}\n                \n            \n            \n            Accedi\n\n        \n    \n\n    \n\n    Non hai un account?\n\n    \n\n    \n                \n                    ./login-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Username                                                                    Password                                                    {{ hidePass ? \\'visibility_off\\' : \\'visibility\\' }}                                                    Accedi                    Non hai un account?'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/conversation.ts\n        \n\n\n            \n                Description\n            \n            \n                A message in a conversation.\nSee Conversation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\";\n\n// DTO = as sent to BE, removed sub-entities and id, lazy, POST request\n// NON-DTO = as recieved form BE, entity, eager, GET response\n\n/**\n * A conversation between a tourist and a guide.\n * @see Message\n */\nexport interface Conversation {\n    id: number\n    guide: User\n    tourist: User\n    messages: Message[] | null  // null in messages center response\n}\n\n/**\n * DTO for creating a conversation.\n * Note that only tourists can create a conversation.\n */\nexport interface ConversationDTO {\n    guideId: number\n    message: string\n}\n\n/**\n * A message in a conversation.\n * @see Conversation\n */\nexport interface Message {\n    id: number\n    content: string\n    direction: boolean  // true if guide -> tourist, false if tourist -> guide\n    timestamp: Date\n}\n\n/**\n * DTO for sending a message in an existing conversation.\n */\nexport interface MessageDTO {\n    content: string\n    conversationId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageDTO.html":{"url":"interfaces/MessageDTO.html","title":"interface - MessageDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/conversation.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for sending a message in an existing conversation.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            conversationId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conversationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        conversationId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\";\n\n// DTO = as sent to BE, removed sub-entities and id, lazy, POST request\n// NON-DTO = as recieved form BE, entity, eager, GET response\n\n/**\n * A conversation between a tourist and a guide.\n * @see Message\n */\nexport interface Conversation {\n    id: number\n    guide: User\n    tourist: User\n    messages: Message[] | null  // null in messages center response\n}\n\n/**\n * DTO for creating a conversation.\n * Note that only tourists can create a conversation.\n */\nexport interface ConversationDTO {\n    guideId: number\n    message: string\n}\n\n/**\n * A message in a conversation.\n * @see Conversation\n */\nexport interface Message {\n    id: number\n    content: string\n    direction: boolean  // true if guide -> tourist, false if tourist -> guide\n    timestamp: Date\n}\n\n/**\n * DTO for sending a message in an existing conversation.\n */\nexport interface MessageDTO {\n    content: string\n    conversationId: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesCenterPageComponent.html":{"url":"components/MessagesCenterPageComponent.html","title":"component - MessagesCenterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesCenterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/messages-center-page/messages-center-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page for display the already started conversations for the logged user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./messages-center-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./messages-center-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversations$\n                            \n                            \n                                role\n                            \n                            \n                                UserRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, messageService: ConversationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/messages-center-page/messages-center-page.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        ConversationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/messages-center-page/messages-center-page.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversations$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/messages-center-page/messages-center-page.component.ts:20\n                        \n                    \n\n            \n                \n                    Conversations started by the logged user retrieved from backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/messages-center-page/messages-center-page.component.ts:25\n                        \n                    \n\n            \n                \n                    Role of the logged user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserRole\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/messages-center-page/messages-center-page.component.ts:30\n                        \n                    \n\n            \n                \n                    Enum for user roles, needed in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Conversation } from 'src/app/dtos/conversation';\nimport { UserRole } from 'src/app/dtos/user';\nimport { ConversationService } from 'src/app/services/conversation.service';\nimport { UserService } from 'src/app/services/user.service';\n\n/**\n * Page for display the already started conversations for the logged user.\n */\n@Component({\n  templateUrl: './messages-center-page.component.html',\n  styleUrls: ['./messages-center-page.component.scss']\n})\nexport class MessagesCenterPageComponent implements OnInit {\n  \n  /**\n   * Conversations started by the logged user retrieved from backend.\n   */\n  conversations$!: Observable\n\n  /**\n   * Role of the logged user.\n   */\n  role: UserRole | null = null\n\n  /**\n   * Enum for user roles, needed in the template.\n   */\n  UserRole = UserRole\n  \n  constructor(private userService: UserService, private messageService: ConversationService) {}\n  \n  ngOnInit(): void {\n    this.role = this.userService.getSessionRole()\n    this.conversations$ = this.messageService.getAll()\n  }\n  \n}\n\n    \n\n    \n        \n    Chat con {{ role == UserRole.TOURIST ? 'le guide' : 'i turisti' }} ({{convs.length}}):\n\n    \n        {{ role == UserRole.TOURIST ? \n            conv.guide.firstName + ' ' + conv.guide.lastName : \n            conv.tourist.firstName + ' ' + conv.tourist.lastName }}\n    \n\n\n    \n\n    \n                \n                    ./messages-center-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Chat con {{ role == UserRole.TOURIST ? \\'le guide\\' : \\'i turisti\\' }} ({{convs.length}}):            {{ role == UserRole.TOURIST ?             conv.guide.firstName + \\' \\' + conv.guide.lastName :             conv.tourist.firstName + \\' \\' + conv.tourist.lastName }}    '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesCenterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthorizedPageComponent.html":{"url":"components/NotAuthorizedPageComponent.html","title":"component - NotAuthorizedPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotAuthorizedPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/not-authorized/not-authorized-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page for displaying a message when the user is not authorized to access a page.\nRedirected when 401 is received from the server or doesn't have the required role.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./not-authorized-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-authorized-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Page for displaying a message when the user is not authorized to access a page.\n * Redirected when 401 is received from the server or doesn't have the required role.\n */\n@Component({\n  templateUrl: './not-authorized-page.component.html',\n  styleUrls: ['./not-authorized-page.component.scss']\n})\nexport class NotAuthorizedPageComponent {\n\n}\n\n    \n\n    \n        403 - Not Authorized\n    \n\n    \n                \n                    ./not-authorized-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '403 - Not Authorized'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthorizedPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPageComponent.html":{"url":"components/NotFoundPageComponent.html","title":"component - NotFoundPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/not-found-page/not-found-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page for displaying a message when the user navigated to a non-existing route.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./not-found-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Page for displaying a message when the user navigated to a non-existing route.\n */\n@Component({\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent {\n\n}\n\n    \n\n    \n        404 - Not Found\n    \n\n    \n                \n                    ./not-found-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404 - Not Found'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemsDialogComponent.html":{"url":"components/ProblemsDialogComponent.html","title":"component - ProblemsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProblemsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/problems-dialog/problems-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog that shows all the reports on a tour.\nSee TourPageComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./problems-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./problems-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                reports$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, tourService: TourService, tour: Tour)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/problems-dialog/problems-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tour\n                                                  \n                                                        \n                                                                        Tour\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/problems-dialog/problems-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/problems-dialog/problems-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/problems-dialog/problems-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        reports$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/problems-dialog/problems-dialog.component.ts:22\n                        \n                    \n\n            \n                \n                    Reports on the tour retrieved from backend.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { Tour } from 'src/app/dtos/tour';\nimport { TourService } from 'src/app/services/tour.service';\nimport { Report } from './../../dtos/tour';\nimport { TourPageComponent } from './../../pages/tour-page/tour-page.component';\n\n/**\n * Dialog that shows all the reports on a tour.\n * @see TourPageComponent\n */\n@Component({\n  templateUrl: './problems-dialog.component.html',\n  styleUrls: ['./problems-dialog.component.scss']\n})\nexport class ProblemsDialogComponent implements OnInit {\n\n  /**\n   * Reports on the tour retrieved from backend.\n   */\n  reports$?: Observable\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private tourService: TourService,\n    @Inject(MAT_DIALOG_DATA) private tour: Tour,  // tour checking\n  ) { }\n\n  ngOnInit(): void {\n    this.reports$ = this.tourService.getReports(this.tour.id)\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(null);\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(true)  // requesting tour deletion\n  }\n\n}\n\n    \n\n    \n        Resoconto segnalazioni tour\n\n\n    \n         0; else noReports\">\n            \n                \n                    Segnalazione {{ i+1 }}\n                    di {{ r.author.firstName + \" \" + r.author.lastName }}\n                \n                {{ r.description }}\n            \n        \n    \n    \n    Evviva, non ci sono segnalazioni!\n    Caricamento in corso...\n\n\n\n    Annulla\n    Elimina\n\n    \n\n    \n                \n                    ./problems-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Resoconto segnalazioni tour             0; else noReports\">                                                Segnalazione {{ i+1 }}                    di {{ r.author.firstName + \" \" + r.author.lastName }}                                {{ r.description }}                                Evviva, non ci sono segnalazioni!    Caricamento in corso...    Annulla    Elimina'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProblemsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPageComponent.html":{"url":"components/RegisterPageComponent.html","title":"component - RegisterPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register-page/register-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Register page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./register-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hidePass\n                            \n                            \n                                nonWhitespaceRegex\n                            \n                            \n                                selectedRole\n                            \n                            \n                                UserRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, notify: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register-page/register-page.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/register-page/register-page.component.ts:57\n                \n            \n\n\n            \n                \n                    User pressed the register button or enter.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    username: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    password: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    firstName: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    lastName: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register-page/register-page.component.ts:40\n                        \n                    \n\n            \n                \n                    User input for registration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register-page/register-page.component.ts:20\n                        \n                    \n\n            \n                \n                    Whether the password is shown as dots or as plain text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonWhitespaceRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /[\\S]/\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register-page/register-page.component.ts:35\n                        \n                    \n\n            \n                \n                    Regex for checking that a string contains at least one non-whitespace character.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Default value : UserRole.TOURIST\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register-page/register-page.component.ts:25\n                        \n                    \n\n            \n                \n                    Role selected by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserRole\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register-page/register-page.component.ts:30\n                        \n                    \n\n            \n                \n                    Enum for user roles, needed in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserRole } from './../../dtos/user';\n\n/**\n * Register page.\n */\n@Component({\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss']\n})\nexport class RegisterPageComponent {\n\n  /**\n   * Whether the password is shown as dots or as plain text.\n   */\n  hidePass = true;\n\n  /**\n   * Role selected by the user.\n   */\n  selectedRole: UserRole = UserRole.TOURIST\n\n  /**\n   * Enum for user roles, needed in the template.\n   */\n  UserRole = UserRole\n  \n  /**\n   * Regex for checking that a string contains at least one non-whitespace character.\n   */\n  nonWhitespaceRegex = /[\\S]/\n\n  /**\n   * User input for registration.\n   */\n  form = this.fb.nonNullable.group({\n    username: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    password: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    firstName: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n    lastName: ['', [Validators.required, Validators.pattern(this.nonWhitespaceRegex)]],\n  });\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserService, \n    private notify: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * User pressed the register button or enter.\n   */\n  submit(): void {\n    if(!this.form.valid) return;\n    this.userService.register(this.form.getRawValue(), this.selectedRole).subscribe(registered => {\n      // user registered: show success message and redirect to home\n      this.notify.open('Ben arrivato, ' + registered.firstName + '!', undefined, { panelClass: 'success-snackbar' })\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n\n            \n                Ruolo:\n                \n                    Turista\n                    Guida\n                \n            \n\n            \n                Username\n                \n            \n\n            \n            \n                Password\n                \n                \n                    {{ hidePass ? 'visibility_off' : 'visibility' }}\n                \n            \n\n            \n                Nome\n                \n            \n\n            \n                Cognome\n                \n            \n\n            Registrati\n            \n        \n    \n\n\n\n    Hai già un account?\n\n    \n\n    \n                \n                    ./register-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Ruolo:                                    Turista                    Guida                                                        Username                                                                    Password                                                    {{ hidePass ? \\'visibility_off\\' : \\'visibility\\' }}                                                        Nome                                                        Cognome                                        Registrati                            Hai già un account?'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportDTO.html":{"url":"interfaces/ReportDTO.html","title":"interface - ReportDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReportDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a tour report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportDialogComponent.html":{"url":"components/ReportDialogComponent.html","title":"component - ReportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/report-dialog/report-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog for reporting a tour.\nSee TourPageComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./report-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./report-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                keypress\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/report-dialog/report-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        keypress\n                        \n                    \n                \n            \n            \n                \nkeypress(key: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/report-dialog/report-dialog.component.ts:35\n                \n            \n\n\n            \n                \n                    When user presses enter, submit the form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key pressed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/report-dialog/report-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/report-dialog/report-dialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/report-dialog/report-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    User input for the report description.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TourPageComponent } from './../../pages/tour-page/tour-page.component';\n\n/**\n * Dialog for reporting a tour.\n * @see TourPageComponent\n */\n@Component({\n  templateUrl: './report-dialog.component.html',\n  styleUrls: ['./report-dialog.component.scss']\n})\nexport class ReportDialogComponent {\n\n  /**\n   * User input for the report description.\n   */\n  description: string | null = null;\n\n  constructor(private dialogRef: MatDialogRef) { }\n\n  onCancel(): void {\n    this.dialogRef.close(null);\n  }\n\n  onSubmit(): void {\n    if(this.description !== null && this.description.trim())\n      this.dialogRef.close(this.description); // return user input for report description\n  }\n\n  /**\n   * When user presses enter, submit the form.\n   * @param key the key pressed\n   */\n  keypress(key: KeyboardEvent) {\n    if(key.code == 'Enter') {\n      key.preventDefault()\n      this.onSubmit()\n    }\n  }\n\n}\n\n    \n\n    \n        Nuova segnalazione tour\n\n\n    \n        Motivazione\n        \n    \n\n\n\n    Annulla\n    Invia\n\n    \n\n    \n                \n                    ./report-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nuova segnalazione tour            Motivazione                Annulla    Invia'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Review.html":{"url":"interfaces/Review.html","title":"interface - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour review.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewCardComponent.html":{"url":"components/ReviewCardComponent.html","title":"component - ReviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/review-card/review-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Card for displaying a review.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-review-card\n            \n\n\n\n            \n                styleUrls\n                ./review-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Review\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/review-card/review-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Review } from 'src/app/dtos/tour';\n\n/**\n * Card for displaying a review.\n */\n@Component({\n  selector: 'app-review-card',\n  templateUrl: './review-card.component.html',\n  styleUrls: ['./review-card.component.scss']\n})\nexport class ReviewCardComponent {\n\n  @Input() data!: Review \n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            {{ data.author.firstName }} {{ data.author.lastName }} in data {{ data.timestamp | date:'medium' }}\n        \n    \n    \n        {{ data.description }}\n    \n\n    \n\n    \n                \n                    ./review-card.component.scss\n                \n                .author-label {\n    margin-bottom: 0;\n    direction: rtl;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.rating-container {\n    flex-shrink: 0; // prevent shrink\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ data.author.firstName }} {{ data.author.lastName }} in data {{ data.timestamp | date:\\'medium\\' }}                        {{ data.description }}    '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewDTO.html":{"url":"interfaces/ReviewDTO.html","title":"interface - ReviewDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a tour review.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewDialogComponent.html":{"url":"components/ReviewDialogComponent.html","title":"component - ReviewDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/review-dialog/review-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog for reviewing a tour.\nSee TourPageComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./review-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                keypress\n                            \n                            \n                                onCancel\n                            \n                            \n                                onStarChange\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/review-dialog/review-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        keypress\n                        \n                    \n                \n            \n            \n                \nkeypress(key: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/review-dialog/review-dialog.component.ts:41\n                \n            \n\n\n            \n                \n                    When user presses enter, submit the form.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the key pressed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/review-dialog/review-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStarChange\n                        \n                    \n                \n            \n            \n                \nonStarChange(stars: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/review-dialog/review-dialog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stars\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/review-dialog/review-dialog.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    stars: [0, [Validators.required, Validators.min(1)]],\n    description: [null, Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/review-dialog/review-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    User input for the review.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Dialog for reviewing a tour.\n * @see TourPageComponent\n */\n@Component({\n  templateUrl: './review-dialog.component.html',\n  styleUrls: ['./review-dialog.component.scss']\n})\nexport class ReviewDialogComponent {\n\n  /**\n   * User input for the review.\n   */\n  form = this.fb.nonNullable.group({\n    stars: [0, [Validators.required, Validators.min(1)]],\n    description: [null, Validators.required],\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n  ) { }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n  \n  onSubmit(): void {\n    if(this.form.valid)\n      this.dialogRef.close(this.form.getRawValue());  // return user input for review\n  }\n  \n  /**\n   * When user presses enter, submit the form.\n   * @param key the key pressed\n   */\n  keypress(key: KeyboardEvent) {\n    if(key.code == 'Enter') {\n      key.preventDefault()\n      this.onSubmit()\n    }\n  }\n\n  onStarChange(stars: number) {\n    this.form.patchValue({ stars })\n  }\n\n}\n\n    \n\n    \n        Nuova recensione tour\n\n\n    \n        \n            Valutazione:\n            \n        \n\n        \n            Descrizione\n            \n        \n    \n\n\n\n    Annulla\n    Invia\n\n    \n\n    \n                \n                    ./review-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nuova recensione tour                        Valutazione:                                        Descrizione                            Annulla    Invia'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/search-page/search-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page for searching tours.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cityOptions$\n                            \n                            \n                                searchForm\n                            \n                            \n                                    Optional\n                                searchResults$\n                            \n                            \n                                tagsOptions$\n                            \n                            \n                                themeOptions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tourService: TourService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/search-page/search-page.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/search-page/search-page.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitSearch\n                        \n                    \n                \n            \n            \n                \nsubmitSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/search-page/search-page.component.ts:61\n                \n            \n\n\n            \n                \n                    User pressed the search button or enter.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cityOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search-page/search-page.component.ts:32\n                        \n                    \n\n            \n                \n                    Available option for the city field. Retrieved from backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    city: new FormControl(null),\n    approxDuration: new FormControl(null),\n    tags: new FormControl(null),  // multiple selection\n    theme: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search-page/search-page.component.ts:22\n                        \n                    \n\n            \n                \n                    User input for search tour criteria.\nAll fields are optional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        searchResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search-page/search-page.component.ts:47\n                        \n                    \n\n            \n                \n                    Search results retrieved from backend after the user submitted the search form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search-page/search-page.component.ts:42\n                        \n                    \n\n            \n                \n                    Available option for the tags field. Retrieved from backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/search-page/search-page.component.ts:37\n                        \n                    \n\n            \n                \n                    Available option for the theme field. Retrieved from backend.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Utils } from 'src/app/classes/utils';\nimport { City, Tag, Theme, Tour } from 'src/app/dtos/tour';\nimport { TourService } from 'src/app/services/tour.service';\n\n/**\n * Page for searching tours.\n */\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})\nexport class SearchPageComponent implements OnInit {\n\n  /**\n   * User input for search tour criteria.\n   * All fields are optional.\n   */\n  searchForm = new FormGroup({\n    city: new FormControl(null),\n    approxDuration: new FormControl(null),\n    tags: new FormControl(null),  // multiple selection\n    theme: new FormControl(null),\n  })\n\n  /**\n   * Available option for the city field. Retrieved from backend.\n   */\n  cityOptions$!: Observable\n\n  /**\n   * Available option for the theme field. Retrieved from backend.\n   */\n  themeOptions$!: Observable\n\n  /**\n   * Available option for the tags field. Retrieved from backend.\n   */\n  tagsOptions$!: Observable\n\n  /**\n   * Search results retrieved from backend after the user submitted the search form.\n   */\n  searchResults$?: Observable\n\n  constructor(private tourService: TourService,) {}\n\n  ngOnInit(): void {\n    // retrieve options for the form fields\n    this.cityOptions$ = this.tourService.getAllCities()\n    this.themeOptions$ = this.tourService.getAllThemes()\n    this.tagsOptions$ = this.tourService.getAllTags()\n  }\n\n  /**\n    * User pressed the search button or enter.\n   */\n  submitSearch(): void {\n    if(this.searchForm.valid) {\n      // retrieve and display search results\n      this.searchResults$ = this.tourService.search(Utils.nonEmptyFieldsOf(this.searchForm.value))\n    }\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n            Città\n            \n                \n                    {{ city.name }}\n                \n            \n        \n    \n        \n            Durata approssimativa massima\n            \n        \n    \n        \n            Tema\n            \n                \n                    {{ theme.name }}\n                \n            \n        \n    \n        \n            Tags\n            \n                \n                    {{ tag.name }}\n                \n            \n        \n    \n    \n        Rimuovi tutti i filtri\n        Cerca\n    \n\n\n\n\n    \n    \n    Risultati ({{ tours.length }}):\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./search-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Città                                                {{ city.name }}                                                            Durata approssimativa massima                                            Tema                                                {{ theme.name }}                                                            Tags                                                {{ tag.name }}                                                    Rimuovi tutti i filtri        Cerca                Risultati ({{ tours.length }}):                '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StarRatingComponent.html":{"url":"components/StarRatingComponent.html","title":"component - StarRatingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StarRatingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/star-rating/star-rating.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a star rating.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-star-rating\n            \n\n\n\n            \n                styleUrls\n                ./star-rating.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./star-rating.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editable\n                            \n                            \n                                stars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                starsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/star-rating/star-rating.component.ts:20\n                            \n                        \n                \n                    \n                        Whether the star rating is editable.\nShould be set to true only in the review dialog.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        stars\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/star-rating/star-rating.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        starsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/star-rating/star-rating.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIcon(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/star-rating/star-rating.component.ts:27\n                \n            \n\n\n            \n                \n                    Method called for each star that is being rendered\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the index of the star being rendered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the icon code to be displayed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/star-rating/star-rating.component.ts:35\n                \n            \n\n\n            \n                \n                    WHen user clicks on a star, update the rating.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the index of the star clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for displaying a star rating.\n */\n@Component({\n  selector: 'app-star-rating',\n  templateUrl: './star-rating.component.html',\n  styleUrls: ['./star-rating.component.scss']\n})\nexport class StarRatingComponent {\n\n  @Input() stars: number = 0\n  @Output() starsChange: EventEmitter = new EventEmitter()\n\n  /**\n   * Whether the star rating is editable.\n   * Should be set to true only in the review dialog.\n   */\n  @Input() editable: boolean = false\n\n  /**\n   * Method called for each star that is being rendered\n   * @param i the index of the star being rendered\n   * @returns the icon code to be displayed\n   */\n  public getIcon(i: number): string {\n    return i \n    \n\n    \n        \n    \n        {{ getIcon(i) }}\n    \n\n    \n\n    \n                \n                    ./star-rating.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ getIcon(i) }}    '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StarRatingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Stop.html":{"url":"interfaces/Stop.html","title":"interface - Stop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Stop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour stop.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            transferCost\n                                        \n                                \n                                \n                                        \n                                            transferDetails\n                                        \n                                \n                                \n                                        \n                                            transferDuration\n                                        \n                                \n                                \n                                        \n                                            transferOtherOptions\n                                        \n                                \n                                \n                                        \n                                            transferType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferDetails:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferDuration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferOtherOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferOtherOptions:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopCardComponent.html":{"url":"components/StopCardComponent.html","title":"component - StopCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tour-stop-card/tour-stop-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Card for displaying a tour stop.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tour-stop-card\n            \n\n\n\n            \n                styleUrls\n                ./tour-stop-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tour-stop-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                deletable\n                            \n                            \n                                editable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteClick\n                            \n                            \n                                editClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     Stop | StopDTO\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-stop-card/tour-stop-card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deletable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-stop-card/tour-stop-card.component.ts:26\n                            \n                        \n                \n                    \n                        Whether the stop is deletable (will not actually perform the action, just emit the user interacton)\nShould be set to true only in the tour edit page.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-stop-card/tour-stop-card.component.ts:20\n                            \n                        \n                \n                    \n                        Whether the stop is editable (will not actually perform the action, just emit the user interacton)\nShould be set to true only in the tour edit page.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-stop-card/tour-stop-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-stop-card/tour-stop-card.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Stop, StopDTO } from 'src/app/dtos/tour';\n\n/**\n * Card for displaying a tour stop.\n */\n@Component({\n  selector: 'app-tour-stop-card',\n  templateUrl: './tour-stop-card.component.html',\n  styleUrls: ['./tour-stop-card.component.scss']\n})\nexport class StopCardComponent {\n\n  @Input() data!: Stop | StopDTO\n\n  /**\n   * Whether the stop is editable (will not actually perform the action, just emit the user interacton)\n   * Should be set to true only in the tour edit page.\n   */\n  @Input() editable: boolean = false\n\n  /**\n   * Whether the stop is deletable (will not actually perform the action, just emit the user interacton)\n   * Should be set to true only in the tour edit page.\n   */\n  @Input() deletable: boolean = false\n\n  @Output() editClick: EventEmitter = new EventEmitter()\n  @Output() deleteClick: EventEmitter = new EventEmitter()\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ data.title }}\n                {{ (data.cost | currency) + \" &#x25cf; \" + data.duration }}\n            \n            \n                \n                    edit\n                \n                \n                    delete\n                \n            \n        \n    \n    \n        {{ data.description }}\n        \n        \n\n        \n            Come raggiungerla:\n            {{ data.transferDetails }}\n        \n        \n            {{ \"Tipologia: \" + data.transferType }}\n            {{ \"Costo: \" + (data.transferCost | currency) }}\n            {{ \"Durata: \" + data.transferDuration }}\n        \n\n        \n            Altre opzioni:\n            {{ data.transferOtherOptions }}\n        \n\n    \n\n    \n\n    \n                \n                    ./tour-stop-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.title }}                {{ (data.cost | currency) + \" ● \" + data.duration }}                                                            edit                                                    delete                                                    {{ data.description }}                                    Come raggiungerla:            {{ data.transferDetails }}                            {{ \"Tipologia: \" + data.transferType }}            {{ \"Costo: \" + (data.transferCost | currency) }}            {{ \"Durata: \" + data.transferDuration }}                            Altre opzioni:            {{ data.transferOtherOptions }}            '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StopDTO.html":{"url":"interfaces/StopDTO.html","title":"interface - StopDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StopDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating or editing a tour stop.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cost\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            transferCost\n                                        \n                                \n                                \n                                        \n                                            transferDetails\n                                        \n                                \n                                \n                                        \n                                            transferDuration\n                                        \n                                \n                                \n                                        \n                                            transferOtherOptions\n                                        \n                                \n                                \n                                        \n                                            transferType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferDetails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferDetails:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferDuration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferOtherOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferOtherOptions:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopEditorDialogComponent.html":{"url":"components/StopEditorDialogComponent.html","title":"component - StopEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog for creating or editing a tour stop.\nSee TourEditorPageComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./tour-stop-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tour-stop-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                savedStop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, fb: FormBuilder, savedStop?: Stop)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        savedStop\n                                                  \n                                                        \n                                                                        Stop\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.nonNullable.group({\n    title: new FormControl(null, { validators: Validators.required}),\n    description: new FormControl(null, { validators: Validators.required}),\n    cost: new FormControl(null, { validators: Validators.required}),\n    duration: new FormControl(null, { validators: Validators.required}),\n    transferCost: new FormControl(null, { validators: Validators.required}),\n    transferDuration: new FormControl(null, { validators: Validators.required}),\n    transferType: new FormControl(null, { validators: Validators.required}),\n    transferDetails: new FormControl(null, { validators: Validators.required}),\n    transferOtherOptions: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:21\n                        \n                    \n\n            \n                \n                    User input for the tour stop.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        savedStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Stop\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Utils } from 'src/app/classes/utils';\nimport { Stop } from 'src/app/dtos/tour';\nimport { TourEditorPageComponent } from './../../pages/tour-editor-page/tour-editor-page.component';\n\n/**\n * Dialog for creating or editing a tour stop.\n * @see TourEditorPageComponent\n */\n@Component({\n  templateUrl: './tour-stop-editor-dialog.component.html',\n  styleUrls: ['./tour-stop-editor-dialog.component.scss']\n})\nexport class StopEditorDialogComponent implements OnInit {\n  \n  /**\n   * User input for the tour stop.\n   */\n  form = this.fb.nonNullable.group({\n    title: new FormControl(null, { validators: Validators.required}),\n    description: new FormControl(null, { validators: Validators.required}),\n    cost: new FormControl(null, { validators: Validators.required}),\n    duration: new FormControl(null, { validators: Validators.required}),\n    transferCost: new FormControl(null, { validators: Validators.required}),\n    transferDuration: new FormControl(null, { validators: Validators.required}),\n    transferType: new FormControl(null, { validators: Validators.required}),\n    transferDetails: new FormControl(null, { validators: Validators.required}),\n    transferOtherOptions: new FormControl(null),\n  });\n\n  constructor(\n    private dialogRef: MatDialogRef,\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public savedStop?: Stop, // defined if editing, with the starting state\n  ) { }\n\n  ngOnInit(): void {\n    if(this.savedStop)\n      this.form.patchValue(this.savedStop); // populate form with saved stop\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(Utils.nonEmptyFieldsOf(this.form.value));  // return user input for the stop\n  }\n\n}\n\n    \n\n    \n        {{ savedStop ? 'Salva' : 'Crea' }} tappa tour\n\n\n    \n        \n            \n                Titolo\n                \n            \n    \n            \n                Descrizione\n                \n            \n    \n            \n                Costo\n                \n            \n    \n            \n                Durata\n                \n            \n        \n    \n        \n\n        Dettagli sullo spostamento per raggiungerla\n        \n            \n                Costo\n                \n            \n            \n            \n                Durata\n                \n            \n        \n            \n                Tipologia\n                \n            \n        \n            \n                Dettagli\n                \n            \n        \n            \n                Altre opzioni\n                \n            \n        \n    \n\n\n\n    Annulla\n    Salva\n\n    \n\n    \n                \n                    ./tour-stop-editor-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ savedStop ? \\'Salva\\' : \\'Crea\\' }} tappa tour                                        Titolo                                                            Descrizione                                                            Costo                                                            Durata                                                        Dettagli sullo spostamento per raggiungerla                                    Costo                                                                    Durata                                                                Tipologia                                                                Dettagli                                                                Altre opzioni                                            Annulla    Salva'\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour tag.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagDTO.html":{"url":"interfaces/TagDTO.html","title":"interface - TagDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating or re-using a tour tag.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Theme.html":{"url":"interfaces/Theme.html","title":"interface - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour theme.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tour.html":{"url":"interfaces/Tour.html","title":"interface - Tour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                A tour.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            approxCost\n                                        \n                                \n                                \n                                        \n                                            approxDuration\n                                        \n                                \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                        \n                                            markedAsCompletedCount\n                                        \n                                \n                                \n                                        \n                                            reviews\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approxCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approxCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approxDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approxDuration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markedAsCompletedCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markedAsCompletedCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviews\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviews:         Review[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Review[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:         Stop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Stop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         Theme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Theme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TourActions.html":{"url":"interfaces/TourActions.html","title":"interface - TourActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TourActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                Actions that the user is allowed to perform on a given tour.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createReport\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            edit\n                                        \n                                \n                                \n                                        \n                                            markAsCompleted\n                                        \n                                \n                                \n                                        \n                                            review\n                                        \n                                \n                                \n                                        \n                                            sendMessage\n                                        \n                                \n                                \n                                        \n                                            viewReports\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createReport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createReport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markAsCompleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markAsCompleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sendMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sendMessage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewReports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewReports:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TourCardComponent.html":{"url":"components/TourCardComponent.html","title":"component - TourCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TourCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tour-card/tour-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Card for syntehtically displaying a tour.\nSee SearchPageComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tour-card\n            \n\n\n\n            \n                styleUrls\n                ./tour-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tour-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Tour\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tour-card/tour-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Tour } from 'src/app/dtos/tour';\nimport { SearchPageComponent } from './../../pages/search-page/search-page.component';\n\n/**\n * Card for syntehtically displaying a tour.\n * @see SearchPageComponent\n */\n@Component({\n  selector: 'app-tour-card',\n  templateUrl: './tour-card.component.html',\n  styleUrls: ['./tour-card.component.scss']\n})\nexport class TourCardComponent {\n\n  @Input() data!: Tour \n\n}\n\n    \n\n    \n        \n    \n        {{ data.title }}\n        {{ \"di \" + data.author.firstName + \" \" + data.author.lastName }}\n    \n    \n        {{ data.city.name + \" &#x25cf; \" + data.approxDuration + \" &#x25cf; \" + data.stops.length + \" tappe &#x25cf; \" + (data.approxCost | currency) + \" &#x25cf; \" + data.theme.name }}\n        {{ data.reviews.length }} recensioni &#x25cf; percorso da {{ data.markedAsCompletedCount }} turisti\n    \n\n    \n\n    \n                \n                    ./tour-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ data.title }}        {{ \"di \" + data.author.firstName + \" \" + data.author.lastName }}                {{ data.city.name + \" ● \" + data.approxDuration + \" ● \" + data.stops.length + \" tappe ● \" + (data.approxCost | currency) + \" ● \" + data.theme.name }}        {{ data.reviews.length }} recensioni ● percorso da {{ data.markedAsCompletedCount }} turisti    '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TourCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TourDTO.html":{"url":"interfaces/TourDTO.html","title":"interface - TourDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TourDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating or editing a tour.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            approxCost\n                                        \n                                \n                                \n                                        \n                                            approxDuration\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isPublic\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sharedTourists\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                                \n                                        \n                                            tagNames\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approxCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approxCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approxDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approxDuration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublic:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sharedTourists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sharedTourists:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     StopDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StopDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         Theme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Theme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TourPageComponent.html":{"url":"components/TourPageComponent.html","title":"component - TourPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TourPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tour-page/tour-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page that shows the details of a tour.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./tour-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tour-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                actions\n                            \n                            \n                                    Optional\n                                tour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                administratorDelete\n                            \n                            \n                                afterAction\n                            \n                            \n                                delete\n                            \n                            \n                                goConversation\n                            \n                            \n                                goEdit\n                            \n                            \n                                markCompleted\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openProblemsModal\n                            \n                            \n                                openReportModal\n                            \n                            \n                                openReviewModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, tourService: TourService, conversationService: ConversationService, dialogService: MatDialog, notify: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tour-page/tour-page.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationService\n                                                  \n                                                        \n                                                                        ConversationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        administratorDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    administratorDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:166\n                \n            \n\n\n            \n                \n                    Administrator requested to delete the tour after reviewing the reports\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterAction\n                        \n                    \n                \n            \n            \n                \nafterAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:58\n                \n            \n\n\n            \n                \n                    After any FAB action, refresh the available actions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:69\n                \n            \n\n\n            \n                \n                    Guide (or administrator without reviewing reports) requested to delete the tour\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goConversation\n                        \n                    \n                \n            \n            \n                \ngoConversation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:124\n                \n            \n\n\n            \n                \n                    Tourist requested to have a conversation with the guide\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goEdit\n                        \n                    \n                \n            \n            \n                \ngoEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:80\n                \n            \n\n\n            \n                \n                    Guide requested to edit the tour\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markCompleted\n                        \n                    \n                \n            \n            \n                \nmarkCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:140\n                \n            \n\n\n            \n                \n                    Tourist requested to mark the tour as completed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProblemsModal\n                        \n                    \n                \n            \n            \n                \nopenProblemsModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:155\n                \n            \n\n\n            \n                \n                    Administrator requested to see the created reports\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openReportModal\n                        \n                    \n                \n            \n            \n                \nopenReportModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:91\n                \n            \n\n\n            \n                \n                    Tourist requested to report the tour\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openReviewModal\n                        \n                    \n                \n            \n            \n                \nopenReviewModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tour-page/tour-page.component.ts:107\n                \n            \n\n\n            \n                \n                    Tourist requested to review the tour\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TourActions\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tour-page/tour-page.component.ts:32\n                        \n                    \n\n            \n                \n                    The set of actions available for the current user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tour\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tour-page/tour-page.component.ts:27\n                        \n                    \n\n            \n                \n                    The tour loaded from backend\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { ReportDialogComponent } from 'src/app/components/report-dialog/report-dialog.component';\nimport { ReviewDialogComponent } from 'src/app/components/review-dialog/review-dialog.component';\nimport { Conversation } from 'src/app/dtos/conversation';\nimport { Tour } from 'src/app/dtos/tour';\nimport { ConversationService } from 'src/app/services/conversation.service';\nimport { TourService } from 'src/app/services/tour.service';\nimport { ProblemsDialogComponent } from './../../components/problems-dialog/problems-dialog.component';\nimport { TourActions } from './../../dtos/tour';\n\n/**\n * Page that shows the details of a tour.\n */\n@Component({\n  templateUrl: './tour-page.component.html',\n  styleUrls: ['./tour-page.component.scss']\n})\nexport class TourPageComponent implements OnInit {\n\n  /**\n   * The tour loaded from backend\n   */\n  tour?: Tour\n\n  /**\n   * The set of actions available for the current user\n   */\n  actions?: TourActions\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private tourService: TourService,\n    private conversationService: ConversationService,\n    private dialogService: MatDialog,\n    private notify: MatSnackBar,\n  ) {}\n  \n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      map((param: ParamMap) => param.get('id')!), // get the id from the route\n      map(tourId => Number.parseInt(tourId)),\n      switchMap(tourId => forkJoin([this.tourService.getById(tourId), this.tourService.getAvailableActions(tourId)]))\n    ).subscribe(([tour, actions]) => {\n      // save and display the loaded tour and actions\n      this.tour = tour\n      this.actions = actions\n    })\n  }\n\n  /**\n   * After any FAB action, refresh the available actions\n   */\n  afterAction(): void {\n    this.tourService.getAvailableActions(this.tour!.id).subscribe(actions => this.actions = actions)\n  }\n\n  // -----------------\n  // guide methods\n  // -----------------\n  \n  /**\n   * Guide (or administrator without reviewing reports) requested to delete the tour\n   */\n  delete(): void {\n    this.tourService.delete(this.tour!.id).subscribe(() => {\n      // tour deleted, return to search page\n      this.notify.open('Tour eliminato con successo!', undefined, { panelClass: 'success-snackbar' });\n      this.router.navigate(['/search'])\n    })\n  }\n\n  /**\n   * Guide requested to edit the tour\n   */\n  goEdit(): void {\n    this.router.navigate(['edit'])\n  }\n  \n  // -----------------\n  // tourist methods\n  // -----------------\n\n  /**\n   * Tourist requested to report the tour\n   */\n  openReportModal(): void {\n    const dialogRef = this.dialogService.open(ReportDialogComponent);\n    dialogRef.afterClosed().subscribe(description => {\n      if(description) { // if the user inserted a description\n        this.tourService.createReport(this.tour!.id, { description }).subscribe(() => { \n          // report created, notify the user and refresh the available actions\n          this.notify.open('Segnalazione inviata con successo!', undefined, { panelClass: 'success-snackbar' })\n          this.afterAction()\n        })\n      }\n    });\n  }\n\n  /**\n   * Tourist requested to review the tour\n   */\n  openReviewModal(): void {\n    const dialogRef = this.dialogService.open(ReviewDialogComponent);\n    dialogRef.afterClosed().subscribe(review => {\n      if(review) {  // if the user inserted a review\n        this.tourService.createReview(this.tour!.id, review).subscribe((createdReview) => {\n          // review created, add to the existing ones, notify the user and refresh the available actions\n          this.tour!.reviews.push(createdReview);\n          this.notify.open('Recensione inviata con successo!', undefined, { panelClass: 'success-snackbar' })\n          this.afterAction()\n        })\n      }\n    });\n  }\n  \n  /**\n   * Tourist requested to have a conversation with the guide\n   */\n  goConversation(): void {\n    this.conversationService.getByGuide(this.tour!.author.id).subscribe((c: Conversation | null) => {\n      // check if a conversation already exists with the guide\n      if(c) { // already exists\n        // navigate to that, passing the already loaded data as route extras\n        this.router.navigate(['/conversation', c.id], { state: c})\n      } else {  // doesn't exist\n        // navigate to a pre-conversation page, passing the requested guide as routes extras\n        this.router.navigate(['/conversation', 'new'], { state: { 'guideId': this.tour!.author.id }})\n      }\n    })\n  }\n\n  /**\n   * Tourist requested to mark the tour as completed\n   */\n  markCompleted(): void {\n    this.tourService.markAsCompleted(this.tour!.id).subscribe(() => {\n      // tour marked as completed, notify the user and refresh the available actions\n      this.notify.open('Segnato come completato con successo!', undefined, { panelClass: 'success-snackbar' });\n      this.afterAction()\n    })\n  }\n\n  // -----------------\n  // administrator methods\n  // -----------------\n\n  /**\n   * Administrator requested to see the created reports\n   */\n  openProblemsModal(): void {\n    const dialogRef = this.dialogService.open(ProblemsDialogComponent, { data: this.tour });\n    dialogRef.afterClosed().subscribe(isDelete => {\n      if(isDelete)  // after reviewing the reports, the administrator requested to delete the tour\n        this.administratorDelete()\n    });\n  }\n\n  /**\n   * Administrator requested to delete the tour after reviewing the reports \n   */\n  private administratorDelete(): void {\n    this.tourService.delete(this.tour!.id).subscribe(() => {\n      this.notify.open('Tour eliminato con successo!', undefined, { panelClass: 'success-snackbar' });\n      this.router.navigate(['/administrator', 'you'])\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n             \n                flag\n            \n             \n                chat\n            \n             \n                done\n            \n            \n             \n                delete\n            \n             \n                edit\n            \n            \n             \n                feedback\n            \n        \n    \n\n    \n        {{ tour.title }}\n        {{ \"A cura di \" + tour.author.firstName + \" \" + tour.author.lastName }}\n    \n    \n    Tappe ({{ tour.stops.length }}):\n    \n        \n    \n    \n    Dettagli complessivi:\n    \n        Città: {{ tour.city.name }}\n        Durata approssimativa: {{ tour.approxDuration }}\n        Costo approssimativo: {{ tour.approxCost | currency }}\n        Segnato come completato da {{ tour.markedAsCompletedCount }} turisti\n        Tema: {{ tour.theme.name }}\n        \n            \n                Tags:\n                \n                    {{ tag.name }}\n                \n            \n        \n    \n    \n    Recensioni ({{ tour.reviews.length }}):\n    \n        \n        \n        \n            add\n        \n    \n    \n\n    \n\n    \n                \n                    ./tour-page.component.scss\n                \n                .new-review-card {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    flex-basis: 100px;\n    height: 92px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         flag                                         chat                                         done                                                     delete                                         edit                                                     feedback                                    {{ tour.title }}        {{ \"A cura di \" + tour.author.firstName + \" \" + tour.author.lastName }}            Tappe ({{ tour.stops.length }}):                        Dettagli complessivi:            Città: {{ tour.city.name }}        Durata approssimativa: {{ tour.approxDuration }}        Costo approssimativo: {{ tour.approxCost | currency }}        Segnato come completato da {{ tour.markedAsCompletedCount }} turisti        Tema: {{ tour.theme.name }}                                    Tags:                                    {{ tag.name }}                                                Recensioni ({{ tour.reviews.length }}):                                        add                '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TourPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TourSearchDTO.html":{"url":"interfaces/TourSearchDTO.html","title":"interface - TourSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TourSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/tour.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for searching for tours.\nAll fields are optional.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            approxDuration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tags\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approxDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approxDuration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         Theme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Theme\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\n// DTO = as sent to BE service, removed sub-entities and id (or extracted from service), lazy, POST request\n// NON-DTO = as received form BE, entity, eager, GET response\n\n/**\n * A tour.\n */\nexport interface Tour {\n    id: number\n    author: User\n    title: string\n    description: string\n    isPublic: boolean\n    city: City\n    tags: Tag[]\n    theme: Theme\n    approxCost: number\n    approxDuration: string\n    creationDate: Date\n    stops: Stop[]\n    reviews: Review[]\n    markedAsCompletedCount: number\n}\n\n/**\n * Actions that the user is allowed to perform on a given tour.\n */\nexport interface TourActions {\n    createReport: boolean  // true if user can create a report for this tour\n    sendMessage: boolean // true if user can send a message to the author of this tour\n    markAsCompleted: boolean // true if user can mark this tour as completed\n    review: boolean // true if user can review this tour\n    edit: boolean   // true if user can edit this tour\n    delete: boolean // true if user can delete this tour\n    viewReports: boolean    // true if user can view reports for this tour\n}\n\n/**\n * DTO for searching for tours.\n * All fields are optional.\n */\nexport interface TourSearchDTO {\n    city?: City\n    approxDuration?: string  // will return tours with \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TourService.html":{"url":"injectables/TourService.html","title":"injectable - TourService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TourService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tour.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the tour features.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createReport\n                            \n                            \n                                    Public\n                                createReview\n                            \n                            \n                                    Public\n                                createTour\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                editTour\n                            \n                            \n                                    Public\n                                getAllCities\n                            \n                            \n                                    Public\n                                getAllTags\n                            \n                            \n                                    Public\n                                getAllThemes\n                            \n                            \n                                    Public\n                                getAvailableActions\n                            \n                            \n                                    Public\n                                getById\n                            \n                            \n                                    Public\n                                getCompletedTours\n                            \n                            \n                                    Public\n                                getCreatedTours\n                            \n                            \n                                    Public\n                                getReportedTours\n                            \n                            \n                                    Public\n                                getReports\n                            \n                            \n                                    Public\n                                getSharedTourists\n                            \n                            \n                                    Public\n                                getSharedTours\n                            \n                            \n                                    Public\n                                markAsCompleted\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tour.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createReport\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReport(tourId: number, r: ReportDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:171\n                \n            \n\n\n            \n                \n                    Create a new report for the given tour.\nOnly available for tourists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to create the report for\n\n                                    \n                                \n                                \n                                    r\n                                    \n                                                ReportDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the report to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the created report\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReview(tourId: number, r: ReviewDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:160\n                \n            \n\n\n            \n                \n                    Create a new review for the given tour.\nOnly available for tourists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to create the review for\n\n                                    \n                                \n                                \n                                    r\n                                    \n                                                ReviewDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the review to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the created review\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTour\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTour(t: TourDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:139\n                \n            \n\n\n            \n                \n                    Create a new tour.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    t\n                                    \n                                                TourDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the tour to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the created tour\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:213\n                \n            \n\n\n            \n                \n                    Deletes the given tour.\nOnly available for guides that are the creator of the tour.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        completes when the action is done\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editTour\n                        \n                    \n                \n            \n            \n                \n                    \n                    editTour(tourId: number, t: TourDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:183\n                \n            \n\n\n            \n                \n                    Edit the given tour.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to edit\n\n                                    \n                                \n                                \n                                    t\n                                    \n                                                TourDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the edited tour\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the edited tour after save\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllCities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCities()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:128\n                \n            \n\n\n            \n                \n                    Retrieve the list of all existing cities.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of all existing cities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:112\n                \n            \n\n\n            \n                \n                    Retrieve the list of all existing tags.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of all existing tags\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllThemes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:120\n                \n            \n\n\n            \n                \n                    Retrieve the list of all existing themes.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of all existing themes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAvailableActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAvailableActions(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:32\n                \n            \n\n\n            \n                \n                    Retrieve actions available for the current user on the given tour.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to retrieve the actions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the actions available for the current user on the given tour\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve a tour by its id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to retrieve\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the tour with the given id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCompletedTours\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompletedTours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:40\n                \n            \n\n\n            \n                \n                    Retrieve the list of tours marked as completed by the current user.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tours marked as completed by the current user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCreatedTours\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCreatedTours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:67\n                \n            \n\n\n            \n                \n                    Retrieve the list of tours created by the current guide.\nOnly available for guides.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tours created by the current guide\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getReportedTours\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReportedTours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieve the list of tours that have been reported.\nOnly available for administrators.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tours that have been reported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getReports\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReports(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:85\n                \n            \n\n\n            \n                \n                    Retrieve the list of reports for the given tour.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to retrieve the reports for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of reports for the given tour\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSharedTourists\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSharedTourists(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:58\n                \n            \n\n\n            \n                \n                    Retrieve the list of tourists with whom the current guide shared his tour.\nOnly available for guides.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to retrieve the shared tourists for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tourists with whom the current guide shared his tour\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSharedTours\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSharedTours()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:48\n                \n            \n\n\n            \n                \n                    Retrieve the list of tours shared with the current user.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tours shared with the current user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        markAsCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    markAsCompleted(tourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:203\n                \n            \n\n\n            \n                \n                    Mark the given tour as completed.\nOnly available for tourists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the tour to mark as completed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        completes when the action is done\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                    \n                    search(s: TourSearchDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tour.service.ts:94\n                \n            \n\n\n            \n                \n                    Retrieve the list of tours that match the given search criteria.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                TourSearchDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search criteria\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the list of tours that match the given search criteria\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { City, Report, ReportDTO, Review, ReviewDTO, Tag, Theme, Tour, TourActions, TourDTO, TourSearchDTO } from '../dtos/tour';\nimport { User } from '../dtos/user';\n\n/**\n * Service that handles the tour features.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TourService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Retrieve a tour by its id.\n   * @param tourId the id of the tour to retrieve\n   * @returns the tour with the given id\n   */\n  public getById(tourId: number): Observable {\n    return this.http.get(environment.apiUrl + '/tour/' + tourId)\n  }\n\n  /**\n   * Retrieve actions available for the current user on the given tour.\n   * @param tourId the id of the tour to retrieve the actions for\n   * @returns the actions available for the current user on the given tour\n   */\n  public getAvailableActions(tourId: number): Observable {\n    return this.http.get(environment.apiUrl + '/tour/' + tourId + '/availableActions')\n  }\n\n  /**\n   * Retrieve the list of tours marked as completed by the current user.\n   * @returns the list of tours marked as completed by the current user\n   */\n  public getCompletedTours(): Observable {\n    return this.http.get(environment.apiUrl + '/tour/completed')\n  }\n  \n  /**\n   * Retrieve the list of tours shared with the current user.\n   * @returns the list of tours shared with the current user\n   */\n  public getSharedTours(): Observable {\n    return this.http.get(environment.apiUrl + '/tour/shared')\n  }\n\n  /**\n   * Retrieve the list of tourists with whom the current guide shared his tour.\n   * Only available for guides.\n   * @param tourId the id of the tour to retrieve the shared tourists for\n   * @returns the list of tourists with whom the current guide shared his tour\n   */\n  public getSharedTourists(tourId: number): Observable {\n    return this.http.get(environment.apiUrl + '/tour/' + tourId + '/shared')\n  }\n\n  /**\n   * Retrieve the list of tours created by the current guide.\n   * Only available for guides.\n   * @returns the list of tours created by the current guide\n   */\n  public getCreatedTours(): Observable {\n    return this.http.get(environment.apiUrl + '/tour/created')\n  }\n\n  /**\n   * Retrieve the list of tours that have been reported.\n   * Only available for administrators.\n   * @returns the list of tours that have been reported\n   */\n  public getReportedTours(): Observable {\n    return this.http.get(environment.apiUrl + '/tour/reported')\n  }\n\n  /**\n   * Retrieve the list of reports for the given tour.\n   * @param tourId the id of the tour to retrieve the reports for\n   * @returns the list of reports for the given tour\n   */\n  public getReports(tourId: number): Observable {\n    return this.http.get(environment.apiUrl + '/tour/' + tourId + '/report')\n  }\n\n  /**\n   * Retrieve the list of tours that match the given search criteria.\n   * @param s the search criteria\n   * @returns the list of tours that match the given search criteria\n   */\n  public search(s: TourSearchDTO): Observable {\n    // only add the parameters that are not null\n    let params = new HttpParams()\n    s.city ? params = params.append('cityId', s.city.id) : null\n    s.approxDuration ? params = params.append('approxDuration', s.approxDuration) : null\n    s.theme ? params = params.append('themeId', s.theme.id) : null\n    s.tags ? params = params.appendAll({'tagIds': s.tags.map(t => t.id)}) : null\n    return this.http.get(environment.apiUrl + '/tour/search', { params })\n  }\n\n  // ---------\n  // TAG AND THEME\n  // ---------\n\n  /**\n   * Retrieve the list of all existing tags.\n   * @returns the list of all existing tags\n   */\n  public getAllTags(): Observable {\n    return this.http.get(environment.apiUrl + '/tag')\n  }\n\n  /**\n   * Retrieve the list of all existing themes.\n   * @returns the list of all existing themes\n   */\n  public getAllThemes(): Observable {\n    return this.http.get(environment.apiUrl + '/theme')\n  }\n\n  /**\n   * Retrieve the list of all existing cities.\n   * @returns the list of all existing cities\n   */\n  public getAllCities(): Observable {\n    return this.http.get(environment.apiUrl + '/city')\n  }\n\n  // -----\n\n  /**\n   * Create a new tour.\n   * @param t the tour to create\n   * @returns the created tour\n   */\n  public createTour(t: TourDTO): Observable {\n    // extract nested objects ids\n    let mapped: any = {\n      ...t, \n      cityId: t.city.id,\n      themeId: t.theme.id,\n      sharedTouristIds: t.sharedTourists?.map(t => t.id)\n    }\n    delete mapped.city\n    delete mapped.theme\n    delete mapped.sharedTourists\n    return this.http.post(environment.apiUrl + '/tour', mapped)\n  }\n\n  /**\n   * Create a new review for the given tour.\n   * Only available for tourists.\n   * @param tourId the id of the tour to create the review for\n   * @param r the review to create\n   * @returns the created review\n   */\n  public createReview(tourId: number, r: ReviewDTO): Observable {\n    return this.http.post(environment.apiUrl + '/tour/' + tourId + '/review', r)\n  }\n\n  /**\n   * Create a new report for the given tour.\n   * Only available for tourists.\n   * @param tourId the id of the tour to create the report for\n   * @param r the report to create\n   * @returns the created report\n   */\n  public createReport(tourId: number, r: ReportDTO): Observable {\n    return this.http.post(environment.apiUrl + '/tour/' + tourId + '/report', r)\n  }\n\n  // -----\n\n  /**\n   * Edit the given tour.\n   * @param tourId the id of the tour to edit\n   * @param t the edited tour\n   * @returns the edited tour after save\n   */\n  public editTour(tourId: number, t: TourDTO): Observable {\n    // extract nested objects ids\n    let mapped: any = {\n      ...t,\n      cityId: t.city.id,\n      themeId: t.theme.id,\n      sharedTouristIds: t.sharedTourists?.map(t => t.id)\n    }\n    delete mapped.city\n    delete mapped.theme\n    delete mapped.sharedTourists\n    return this.http.patch(environment.apiUrl + '/tour/' + tourId, mapped)\n  }\n\n  /**\n   * Mark the given tour as completed.\n   * Only available for tourists.\n   * @param tourId the id of the tour to mark as completed\n   * @returns completes when the action is done\n   */\n  public markAsCompleted(tourId: number): Observable {\n    return this.http.post(environment.apiUrl + '/tour/' + tourId + '/completed', null)\n  }\n\n  /**\n   * Deletes the given tour.\n   * Only available for guides that are the creator of the tour.\n   * @param tourId \n   * @returns completes when the action is done\n   */\n  public delete(tourId: number): Observable {\n    return this.http.delete(environment.apiUrl + '/tour/' + tourId)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TouristPageComponent.html":{"url":"components/TouristPageComponent.html","title":"component - TouristPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TouristPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tourist-page/tourist-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        \"For you\" page for the logged user when he is a guide.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./tourist-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tourist-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completedTours$\n                            \n                            \n                                sharedTours$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tourService: TourService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tourist-page/tourist-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tourService\n                                                  \n                                                        \n                                                                        TourService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tourist-page/tourist-page.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        completedTours$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tourist-page/tourist-page.component.ts:23\n                        \n                    \n\n            \n                \n                    The tours completed by the logged user. Received from backend.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharedTours$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/tourist-page/tourist-page.component.ts:18\n                        \n                    \n\n            \n                \n                    The tours shared with the logged user. Received from backend.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tour } from 'src/app/dtos/tour';\nimport { TourService } from 'src/app/services/tour.service';\n\n/**\n * \"For you\" page for the logged user when he is a guide.\n */\n@Component({\n  templateUrl: './tourist-page.component.html',\n  styleUrls: ['./tourist-page.component.scss']\n})\nexport class TouristPageComponent implements OnInit {\n\n  /**\n   * The tours shared with the logged user. Received from backend.\n   */\n  sharedTours$!: Observable;\n\n  /**\n   * The tours completed by the logged user. Received from backend.\n   */\n  completedTours$!: Observable;\n\n  constructor(private tourService: TourService) {}\n\n  ngOnInit(): void {\n    this.sharedTours$ = this.tourService.getSharedTours();\n    this.completedTours$ = this.tourService.getCompletedTours();\n  }\n\n  \n\n}\n\n    \n\n    \n        \n    Tour condivisi con te ({{ sharedTours.length }}):\n    \n        \n    \n\n\n\n    Tour completati da te ({{ completedTours.length }}):\n    \n        \n    \n\n    \n\n    \n                \n                    ./tourist-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Tour condivisi con te ({{ sharedTours.length }}):                    Tour completati da te ({{ completedTours.length }}):                '\n    var COMPONENTS = [{'name': 'AdministratorPageComponent', 'selector': ''},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConversationPageComponent', 'selector': ''},{'name': 'GuidePageComponent', 'selector': ''},{'name': 'LoginPageComponent', 'selector': ''},{'name': 'MessagesCenterPageComponent', 'selector': ''},{'name': 'NotAuthorizedPageComponent', 'selector': ''},{'name': 'NotFoundPageComponent', 'selector': ''},{'name': 'ProblemsDialogComponent', 'selector': ''},{'name': 'RegisterPageComponent', 'selector': ''},{'name': 'ReportDialogComponent', 'selector': ''},{'name': 'ReviewCardComponent', 'selector': 'app-review-card'},{'name': 'ReviewDialogComponent', 'selector': ''},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'StarRatingComponent', 'selector': 'app-star-rating'},{'name': 'StopCardComponent', 'selector': 'app-tour-stop-card'},{'name': 'StopEditorDialogComponent', 'selector': ''},{'name': 'TourCardComponent', 'selector': 'app-tour-card'},{'name': 'TourEditorPageComponent', 'selector': ''},{'name': 'TouristPageComponent', 'selector': ''},{'name': 'TourPageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TouristPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/user.ts\n        \n\n\n            \n                Description\n            \n            \n                A user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number\n    username: string    // trimmed and case insensitive\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n    role: UserRole\n}\n\n/**\n * Role associated with a user.\n * Corresponds to the values of the UserRole enum in the BE.\n */\nexport enum UserRole {\n    TOURIST, GUIDE, ADMINISTRATOR\n}\n\n/**\n * DTO for logging in a user.\n */\nexport interface UserLoginDTO {\n    username: string    // trimmed and case insensitive, must be unique\n    password: string    \n}\n\n/**\n * DTO for registering a user.\n * Must also specify role in service.\n */\nexport interface UserRegisterDTO extends UserLoginDTO {\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserLoginDTO.html":{"url":"interfaces/UserLoginDTO.html","title":"interface - UserLoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserLoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/user.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for logging in a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number\n    username: string    // trimmed and case insensitive\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n    role: UserRole\n}\n\n/**\n * Role associated with a user.\n * Corresponds to the values of the UserRole enum in the BE.\n */\nexport enum UserRole {\n    TOURIST, GUIDE, ADMINISTRATOR\n}\n\n/**\n * DTO for logging in a user.\n */\nexport interface UserLoginDTO {\n    username: string    // trimmed and case insensitive, must be unique\n    password: string    \n}\n\n/**\n * DTO for registering a user.\n * Must also specify role in service.\n */\nexport interface UserRegisterDTO extends UserLoginDTO {\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterDTO.html":{"url":"interfaces/UserRegisterDTO.html","title":"interface - UserRegisterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dtos/user.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for registering a user.\nMust also specify role in service.\n\n            \n\n            \n                Extends\n            \n            \n                        UserLoginDTO\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number\n    username: string    // trimmed and case insensitive\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n    role: UserRole\n}\n\n/**\n * Role associated with a user.\n * Corresponds to the values of the UserRole enum in the BE.\n */\nexport enum UserRole {\n    TOURIST, GUIDE, ADMINISTRATOR\n}\n\n/**\n * DTO for logging in a user.\n */\nexport interface UserLoginDTO {\n    username: string    // trimmed and case insensitive, must be unique\n    password: string    \n}\n\n/**\n * DTO for registering a user.\n * Must also specify role in service.\n */\nexport interface UserRegisterDTO extends UserLoginDTO {\n    firstName: string   // trimmed\n    lastName: string    // trimmed\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the user features.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllByRole\n                            \n                            \n                                    Public\n                                getSession\n                            \n                            \n                                    Public\n                                getSessionRole\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                saveSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllByRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllByRole(r: UserRole)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:83\n                \n            \n\n\n            \n                \n                    Returns all users of the given role.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                UserRole\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the role of the users to retrieve\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        all users of the given role\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:61\n                \n            \n\n\n            \n                \n                    Retrieves the user saved in the session storage from base64 format.\n\n\n                    \n                    \n                    \n                        Returns :         User | null\n\n                    \n                    \n                        the user saved in the session storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSessionRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessionRole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:70\n                \n            \n\n\n            \n                \n                    Retrieves the role of the user saved in the session storage from base64 format.\n\n\n                    \n                    \n                    \n                        Returns :         UserRole | null\n\n                    \n                    \n                        the role of the user saved in the session storage\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(u: UserLoginDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:24\n                \n            \n\n\n            \n                \n                    Log in the user with the given credentials.\nAlso saves the user in the session storage if successful.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                UserLoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the credentials of the user to login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged user if the credentials are correct\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:43\n                \n            \n\n\n            \n                \n                    Log out the current user.\nOnly removes the user from the session storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(u: UserRegisterDTO, role: UserRole)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:35\n                \n            \n\n\n            \n                \n                    Registers the user with the given credentials, personal information and role.\nAlso saves the user in the session storage if successful.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                UserRegisterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the credentials of the user to register\n\n                                    \n                                \n                                \n                                    role\n                                    \n                                                UserRole\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the requested role of the user to register\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the registered user if the credentials are correct\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveSession(u: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:53\n                \n            \n\n\n            \n                \n                    Saves the given user in the session storage in base64 format.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user to save in the session storage\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User, UserLoginDTO, UserRegisterDTO } from '../dtos/user';\nimport { UserRole } from './../dtos/user';\n\n/**\n * Service that handles the user features.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Log in the user with the given credentials.\n   * Also saves the user in the session storage if successful.\n   * @param u the credentials of the user to login\n   * @returns the logged user if the credentials are correct\n   */\n  public login(u: UserLoginDTO): Observable {\n    return this.http.post(environment.apiUrl + '/user/login', u).pipe(tap(u => this.saveSession(u)))\n  }\n\n  /**\n   * Registers the user with the given credentials, personal information and role.\n   * Also saves the user in the session storage if successful.\n   * @param u the credentials of the user to register\n   * @param role the requested role of the user to register\n   * @returns the registered user if the credentials are correct\n  */\n  public register(u: UserRegisterDTO, role: UserRole): Observable {\n    return this.http.post(environment.apiUrl + '/user/' + role + '/register', u).pipe(tap(u => this.saveSession(u)))\n  }\n\n  /**\n   * Log out the current user.\n   * Only removes the user from the session storage.\n   */\n  public logout() {\n    sessionStorage.removeItem('logged-user');\n  }\n\n  // -----\n\n  /**\n   * Saves the given user in the session storage in base64 format.\n   * @param u the user to save in the session storage\n   */\n  public saveSession(u: User) {\n    sessionStorage.setItem('logged-user', window.btoa(JSON.stringify(u)));\n  }\n\n  /**\n   * Retrieves the user saved in the session storage from base64 format.\n   * @returns the user saved in the session storage\n   */\n  public getSession(): User | null {\n    let u = sessionStorage.getItem('logged-user');\n    return u ? JSON.parse(window.atob(u)) : null;\n  }\n\n  /**\n   * Retrieves the role of the user saved in the session storage from base64 format.\n   * @returns the role of the user saved in the session storage\n   */\n  public getSessionRole(): UserRole | null {\n    let u = sessionStorage.getItem('logged-user');\n    let u1 = u ? JSON.parse(window.atob(u)) as User : null;\n    return u1 !== null ? u1.role : null\n  }\n\n  // -----\n\n  /**\n   * Returns all users of the given role.\n   * @param r the role of the users to retrieve\n   * @returns all users of the given role\n   */\n  public getAllByRole(r: UserRole): Observable {\n    return this.http.get(environment.apiUrl + '/user/' + r);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/utils.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class for common functions.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                findInvalidControls\n                            \n                            \n                                    Static\n                                nonEmptyFieldsOf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        findInvalidControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    findInvalidControls(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/utils.ts:19\n                \n            \n\n\n            \n                \n                    Finds invalid controls in a form and returns their names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                            FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        form to be checked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        names of invalid controls\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        nonEmptyFieldsOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    nonEmptyFieldsOf(obj: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/utils.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Object casting for excluding null and undefined properties from object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NonEmptyFields>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from \"@angular/forms\";\n\n/**\n * Type for excluding null and undefined properties from object.\n */\nexport type NonEmptyFields = {\n    [P in keyof T]: NonNullable;\n};\n\n/**\n * Utility class for common functions.\n */\nexport abstract class Utils  {\n    /**\n     * Finds invalid controls in a form and returns their names.\n     * @param form form to be checked\n     * @returns names of invalid controls\n     */\n    public static findInvalidControls(form: FormGroup): string[] {\n        const invalid = [];\n        const controls = form.controls;\n        for (const name in controls) {\n            if (controls[name].invalid) {\n                invalid.push(name);\n            }\n        }\n        return invalid;\n    }\n\n    /** \n     * Object casting for excluding null and undefined properties from object.\n     */\n    public static nonEmptyFieldsOf(obj: T): NonEmptyFields> {\n        const castedValue = {} as { [key: string]: any }\n        Object.entries(obj).forEach(([key, value]) => {\n            if (value !== null && value !== undefined) {\n                castedValue[key] = value\n            }\n        })\n        return castedValue as NonEmptyFields>\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/classes/utils.ts\n            \n            class\n            Utils\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/problems-dialog/problems-dialog.component.ts\n            \n            component\n            ProblemsDialogComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/report-dialog/report-dialog.component.ts\n            \n            component\n            ReportDialogComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/components/review-card/review-card.component.ts\n            \n            component\n            ReviewCardComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/review-dialog/review-dialog.component.ts\n            \n            component\n            ReviewDialogComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/star-rating/star-rating.component.ts\n            \n            component\n            StarRatingComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/components/tour-card/tour-card.component.ts\n            \n            component\n            TourCardComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/tour-stop-card/tour-stop-card.component.ts\n            \n            component\n            StopCardComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/components/tour-stop-editor-dialog/tour-stop-editor-dialog.component.ts\n            \n            component\n            StopEditorDialogComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/dtos/conversation.ts\n            \n            interface\n            Conversation\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/dtos/conversation.ts\n            \n            interface\n            ConversationDTO\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/conversation.ts\n            \n            interface\n            Message\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/dtos/conversation.ts\n            \n            interface\n            MessageDTO\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            City\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Report\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            ReportDTO\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Review\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            ReviewDTO\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Stop\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            StopDTO\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Tag\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            TagDTO\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Theme\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            Tour\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            TourActions\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            TourDTO\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/dtos/tour.ts\n            \n            interface\n            TourSearchDTO\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/dtos/user.ts\n            \n            interface\n            User\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/dtos/user.ts\n            \n            interface\n            UserLoginDTO\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/dtos/user.ts\n            \n            interface\n            UserRegisterDTO\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/interceptors/headers.interceptor.ts\n            \n            interceptor\n            HeadersInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/administrator-page/administrator-page.component.ts\n            \n            component\n            AdministratorPageComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/pages/conversation-page/conversation-page.component.ts\n            \n            component\n            ConversationPageComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/pages/guide-page/guide-page.component.ts\n            \n            component\n            GuidePageComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/pages/messages-center-page/messages-center-page.component.ts\n            \n            component\n            MessagesCenterPageComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/pages/not-authorized/not-authorized-page.component.ts\n            \n            component\n            NotAuthorizedPageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/not-found-page/not-found-page.component.ts\n            \n            component\n            NotFoundPageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/register-page/register-page.component.ts\n            \n            component\n            RegisterPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/tour-editor-page/tour-editor-page.component.ts\n            \n            component\n            TourEditorPageComponent\n            \n                90 %\n                (28/31)\n            \n        \n        \n            \n                \n                src/app/pages/tour-page/tour-page.component.ts\n            \n            component\n            TourPageComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/tourist-page/tourist-page.component.ts\n            \n            component\n            TouristPageComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/conversation.service.ts\n            \n            injectable\n            ConversationService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/tour.service.ts\n            \n            injectable\n            TourService\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.public.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.0.0\n        \n            @angular/cdk : ^15.0.0\n        \n            @angular/common : ^15.0.0\n        \n            @angular/compiler : ^15.0.0\n        \n            @angular/core : ^15.0.0\n        \n            @angular/forms : ^15.0.0\n        \n            @angular/material : ^15.0.0\n        \n            @angular/platform-browser : ^15.0.0\n        \n            @angular/platform-browser-dynamic : ^15.0.0\n        \n            @angular/router : ^15.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserRole   (src/.../user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/dtos/user.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                    \n                        \n                            Role associated with a user.\nCorresponds to the values of the UserRole enum in the BE.\n\n                        \n                    \n                        \n                            \n                                 TOURIST\n                            \n                        \n                        \n                            \n                                 GUIDE\n                            \n                        \n                        \n                            \n                                 ADMINISTRATOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWhatToSee-Ui\nProva finale di Ingegneria del Software presso Politecnico di Milano\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdministratorPageComponent\n\nAdministratorPageComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdministratorPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConversationPageComponent\n\nConversationPageComponent\n\nAppModule -->\n\nConversationPageComponent->AppModule\n\n\n\n\n\nGuidePageComponent\n\nGuidePageComponent\n\nAppModule -->\n\nGuidePageComponent->AppModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAppModule -->\n\nLoginPageComponent->AppModule\n\n\n\n\n\nMessagesCenterPageComponent\n\nMessagesCenterPageComponent\n\nAppModule -->\n\nMessagesCenterPageComponent->AppModule\n\n\n\n\n\nNotAuthorizedPageComponent\n\nNotAuthorizedPageComponent\n\nAppModule -->\n\nNotAuthorizedPageComponent->AppModule\n\n\n\n\n\nNotFoundPageComponent\n\nNotFoundPageComponent\n\nAppModule -->\n\nNotFoundPageComponent->AppModule\n\n\n\n\n\nProblemsDialogComponent\n\nProblemsDialogComponent\n\nAppModule -->\n\nProblemsDialogComponent->AppModule\n\n\n\n\n\nRegisterPageComponent\n\nRegisterPageComponent\n\nAppModule -->\n\nRegisterPageComponent->AppModule\n\n\n\n\n\nReportDialogComponent\n\nReportDialogComponent\n\nAppModule -->\n\nReportDialogComponent->AppModule\n\n\n\n\n\nReviewCardComponent\n\nReviewCardComponent\n\nAppModule -->\n\nReviewCardComponent->AppModule\n\n\n\n\n\nReviewDialogComponent\n\nReviewDialogComponent\n\nAppModule -->\n\nReviewDialogComponent->AppModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nAppModule -->\n\nSearchPageComponent->AppModule\n\n\n\n\n\nStarRatingComponent\n\nStarRatingComponent\n\nAppModule -->\n\nStarRatingComponent->AppModule\n\n\n\n\n\nStopCardComponent\n\nStopCardComponent\n\nAppModule -->\n\nStopCardComponent->AppModule\n\n\n\n\n\nStopEditorDialogComponent\n\nStopEditorDialogComponent\n\nAppModule -->\n\nStopEditorDialogComponent->AppModule\n\n\n\n\n\nTourCardComponent\n\nTourCardComponent\n\nAppModule -->\n\nTourCardComponent->AppModule\n\n\n\n\n\nTourEditorPageComponent\n\nTourEditorPageComponent\n\nAppModule -->\n\nTourEditorPageComponent->AppModule\n\n\n\n\n\nTourPageComponent\n\nTourPageComponent\n\nAppModule -->\n\nTourPageComponent->AppModule\n\n\n\n\n\nTouristPageComponent\n\nTouristPageComponent\n\nAppModule -->\n\nTouristPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nHeadersInterceptor\n\nHeadersInterceptor\n\nAppModule -->\n\nHeadersInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NonEmptyFields   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/utils.ts\n    \n    \n        \n            \n                \n                    \n                    NonEmptyFields\n                \n            \n            \n                \n                    Type for excluding null and undefined properties from object.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.public.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiUrl: 'http://' + window.location.hostname  + ':8080'\n}\n                    \n                \n\n            \n                \n                    Environment variables for production builds\n\n                \n            \n\n        \n    \n\n    src/environments/environment.public.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://' + window.location.hostname + '/api'   // url of the backend from the client prospective\n}\n                    \n                \n\n            \n                \n                    Environment variables for public testing\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost:8080' // url of the backend\n}\n                    \n                \n\n            \n                \n                    Environment variables for local development\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
